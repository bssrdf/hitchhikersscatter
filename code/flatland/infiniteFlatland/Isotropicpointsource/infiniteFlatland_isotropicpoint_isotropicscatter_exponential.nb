(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    517569,       9441]
NotebookOptionsPosition[    513384,       9294]
NotebookOutlinePosition[    513797,       9312]
CellTagsIndexPosition[    513754,       9309]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Infinite Flatland medium, Isotropic Point Source, Isotropic Scattering\
\>", "Title",
 CellChangeTimes->{{3.61742787362737*^9, 3.617427885266508*^9}, {
  3.619592656668026*^9, 3.619592662680479*^9}, {3.621178701559973*^9, 
  3.621178702944907*^9}, {3.626744457954844*^9, 3.626744459455998*^9}, {
  3.6270128566699667`*^9, 3.62701287183559*^9}}],

Cell["Exponential Random Flight", "Subtitle",
 CellChangeTimes->{{3.619594484416584*^9, 3.6195944880949802`*^9}}],

Cell[TextData[{
 "This is code to accompany the book:\n",
 StyleBox["A Hitchhiker\[CloseCurlyQuote]s Guide to Multiple Scattering\n", 
  "Subchapter"],
 StyleBox["\[Copyright]", "Subsection"],
 StyleBox[" ", "Subsection"],
 StyleBox["2015", "Subsection"],
 StyleBox[" ", "Section"],
 StyleBox["Eugene d\[CloseCurlyQuote]Eon \nwww.eugenedeon.com", "Subsection"]
}], "Text",
 CellChangeTimes->{{3.6174286022468777`*^9, 3.617428710592918*^9}, {
  3.6410039396211576`*^9, 3.641003945296226*^9}, {3.645060407236547*^9, 
  3.645060444609275*^9}}],

Cell[CellGroupData[{

Cell["Path Setup", "Section",
 CellChangeTimes->{{3.640928920990849*^9, 3.64092892141395*^9}, {
  3.640928986491934*^9, 3.640928986905283*^9}}],

Cell["\<\
Put a file at ~/.hitchhikerpath with the path to your hitchhiker repo so that \
these worksheets can find the MC data from the C++ simulations for \
verification\
\>", "Text",
 CellChangeTimes->{{3.640928926126832*^9, 3.6409289600754013`*^9}}],

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"Import", "[", "\"\<~/.hitchhikerpath\>\"", "]"}], "]"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notation", "Section",
 CellChangeTimes->{{3.617428538130481*^9, 3.617428538753331*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvfmfHFd1N5zP874/vP8CfOABvzGQQPIkgUBYQlie5AlkwSsYAwZsh8WA
bQzENth4IWw2iWRbXuVF0mi1tpFkSTOjtbuqRzK2bEnGizZblmame8b5J57q
rq5bZ7+3uns03a3y51qfmqpbp25X3XvO937POfdecM2Nl377f/zRH/3Rj/+/
5J9Lr77lMz/60dU/vez/Tf747E9/8q1r/p/k4G+Tf/4p+b95XGu81VmZnG2W
jm8v5ZfyS/nDLL9VQmrG9WaZv5aoz20V19oCN9bpnx20v8D76ez9t77v/jON
eXp7A98/50f+gZOvL185cmC6PqDtL+UPk3wioRuZ/N6QM6X8Un4pvz/l96Sc
M+QWg2KfyY7nksLP2/LRG/MhNPG3a2iQSwtHgFr53n/tGH3pdE35voPeP/tQ
/tbdu3fGtcFtfyn/vJLf2xaW8kv5pfxBkQ/xD5IgoY5CKE5DXNrVtCUxBmzs
/Bwo9Cr8Rfq9fvlaq7T2d89hhkiADYDf99PXLbv45rUL1X/ON/kHpxvLV44c
PH1mQNtfyh8++WUpS1nKcm6KhIU4srIxWAhCm2PlXMu3f3WBN9ap53r/mcZ7
Ll70x19Y9Nv1Bxf8u58PZeLgs1vGJxa8GWUpCymdIUbtrl4h0lJ+Kb+UP3/y
e1V076eMeSSWTEBfXgmoDfW5ZjFxVFtOq6bQWu28ygR62m8ccwnoa7aK9kMC
8d6T+19OoF1S/vLKh8aPT81H/xn0/t9D+ZON/165bt3kseMD2v5S/nkov/t7
S/ml/FL+wsoPLyHIYRLhkxDvZygDhlqSngSIK2shwGD1OVfsq5ocu356yZKf
tVBtfxBzaCHAjr/XHcuqKbpLytfu2py1qhMWcdD7/zmQHx39w+r16xOMN6Dt
L+UPsfx+a08pv5Rfyu/4djFerlgDclGUXyIIRIteczWxHDmWr10nAK3x+rWm
QALJ/GcC6hdAklqdGntv5DMZ2E97/4ElQXQO3SVlyc4X+6d/Dp/8Ddue2f/i
4cFtfyn/vJLfn60q5ZfyS/ndyyGcT4AvtWD+QkEsFF7aSAwxe/mZGijwDKwp
XFXuNeQXabDJEzbAGT1rw+BItU/88WuWQnT3kW88tvd0ff565mD1/97KTxdC
OTjjX3+mP9tfyh9u+SF3dePtLeWX8kv58yHf2fdJcECyLI18TBEe2L5UoX5H
KE7GYBhlhSOxHJLJ9fPfVZMqZ3V8KFGVr2BI0/9rvTHaZv5dLMZv98kpCO3S
8p3f7VD7Huszg9L/+0F+uhDK4La/lH8+yC9LWcrS5yXQ60oQ3STz7gXEwsmZ
C/BYOwMhnMC5aVyZUkLqBBUQI4eO57kIeA+2wXyr/P3rDGp+/tGJIxzdXXjR
omXVVxa8Aw9ZOTjdWDay4sAbZxa8JWUpi7dAHDgfTGApv5Rfyi8qHwKtztg5
zAKF+f4KxbxliAUhGZn1ytsjFaVtCI+xOvwqR5sK3xUqX24hx3LwbWs8IcO9
iPfL37CN97SvecvSvRzdJeWT336yOjUbvgofrAl/3fCNr47ljx84ODo2Prjt
L+WX8jsupfxSfim/s3tTY61eDchvDUFNec2w7FSMlzJc1AHDxpkoJ9N+lrcg
vKcgvW4Kly/gQ+VMwGvRfL52gV/88tvWi+guKT9+eJdrc40xuryP2b1roMdX
9/IT6Lty3boDx04MaPtL+aX8cGndP6uUX8o/n+V32KrMRjM/nZYlQTMgoDQJ
OcgxbxKiY7yWxqpxjNcRHqu2Sm9rkrs6x3sC9rN5PyvOkLz/uC5gv/QLfuiq
hzV0975LFq977iTsFaQ/aMyeQ3rCTiWDM756K7/KFkIZrPaX8odbfr+1p5Rf
yi/lhxfsS5WRQ3YVMDyc81FYJj8jJ+K0hoJ8iiOrqnTs/qxK9avsKj8Or2PI
7+RH8bcRgofB5xDqoK85t/2VNzVol5Z/vGGkSfxi+TWTxLP6f4OunzNY46sb
+eu3boULoQxc+0v5pfz5tlCl/FL++Sy/prAlvHAsV2Nwzrq9TpGAsVqI7kvF
qENEdB2huBDI1DH/1iEYm4f2U2iXHzPArHt4jQzi+585ZKO7pNy1ogp7kcS+
+tm8QRlf8yT/wMnXV7QWQhnQ9pfyzxP5w/ErSvml/H6WH160eCctLwDfG8Ig
ybycL3AulIUL58G8oqKACq7w81p9+94QOd2gPoOTVFAf+O4c++Gv+cMlE150
94EvPrDlpTdilqkh+5TNCD2ena1BwUEfv0T+tt17xmqTg9v+Un4pf6DbWcov
5Q+c/LhBcl05R0ejudo1FYzhWbNX44g6QjJF7wpHViH4rRvkVlRaiPyibyz0
HdLvhZDYRTev8aK7pFx6yzqlt8CuyJEeZfYg5AvcA3cIxu/BqfqykRUHT58d
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
9Hd+tz1Fbu+7ZPGNS3ZVzs4Se+Qq/NmXloy+dHrB7WMpv9Bd3Xh7S/k9+Wpu
DSJ1c7E6o+wwS68gvWLeWBIH0tJRUk09IkXThNLVtrq2A5urSv5sABpMEQ4y
FhE2EJV2lBo1KAYuQrgL+8LEyh1wIJJMFE2HzLrjuMLa772KrLbJyGnIBzJa
Ht8ixGkZgDFZKVBHOw6pH4QMQ5jAojjQRH0dROspj4a5t67/3LP+YGKjP3zV
I7wzZ38aPZMCP3uO02kRfLVrN4/uP3K0Kq2dYk4DZ+PTZzbvHFu1bl315Vds
VEZUk43rHE2nIUbiqwX6U4Z2oruEoDjoyeXemSpKpKVrnzoGj5iYxVufc9kT
/3TTqqcPnRLt1/X3j6V17t30+6G0v4Muvyx9XoA3Ns+h0L2xFMVVsUJwKkVh
7Wj2ROyj7CzVp0QvS7qxEaKZRUUNtT2Xg5vUYJXRjZyvUy0asm5mlBFbK0zj
6PRYOydcXKHCKra/Ncgbixg5K16uIiCW7Nji0yCKq8u/y2f3yZsJ+10BkmEL
tRdO22/4l+X3I0cJ8jefnrG7JftF0YzK6cGy5tljqZneeeyM3pNlHi9bEM/q
ve7nVNy/bEAZq0GC9w+G9qvHVqxeFas+X3lOB48rR46uWLVq6+69LRIv11rS
jUTPBOG9TPsJt0DdqPB4FsAT8zLEWby91jFfDW/0yBuXwOyJ1ZNxXU2kvenB
XUm1b/5ydMGtZFmMAnHgfDCBpXyv/PwYX8qzX9M/cy5djrLzsnaaN5bNBOks
MsZqh6omkAHhLql6L8C7oc2pM8wGLZqBG8kZrxXglsW2p9SzJjJ4hjkOz0kM
CqTHiK7winMeFGdxUJIHkHtO5QLbI7YtEuuA54Zc5TU9EoLeGP51Bvbj38jy
Ptfldyt+L7uF/CprT2Wq8aeXNsPmH975YnZL3S2VHN57jUmK2PJC8XjZ+G0v
mTI6Nj4+eZCPWZRhkSkHZdLXiE+fbZF4a2vHTwT4FFRNRX0WDOOlGpJivJlZ
CMyAKs5csTOGGyUoP07yz9Jc2nb9mbmfPVWB2RPjx8/aRu3Wpfs+fs3SPafr
Q2B/z3P5vWpJKd+WD+dKfGdAECwhoDs+U+MhuJJDVovmlWeUiN/TY+0k9sxb
Gj6kR3S+MdGW0RrJh+WEmGCzGFmXH2Cfmh1ZF2IEIU2nRdYJYVQh9lQ3shk1
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
7TNN0B3pGxHaifF1CteRsBxuyrhzKFzVTlS9jql2LL4oTj4sxrNAITGRdRDt
xIHYXMtHfK7DSGMxYkWwuWuVBBwSGXsWy+vEpJSVOGoem/f+53HIsfnUx9/k
/EhP/nyCj1TNy4ijlIrmfpqeY19j31bQgcmtbvlngwdFjy3q8Z/Y6tMOK2lT
r5a3vsZKIZSd3LH1oaXadcheLUy4iG6/EuCtwdkT73ROmE6D3kEAPDLTlHu/
FFvdjHSAwwcPN/UNvLX0w9ahBIQufxs6ONU3ucvbhqamld4V3q3qwkgB0qQO
Hic9XaBTj8JBKnHo8BMvvHjDz39+znnnXnjhhT4I/fKWWxq6Nzr82cTBqade
efXW2+8wl3jsdM/99y+vq9dG2IqcMlN84513v3r+eTffcuu9Dz54+WWXn3ve
eXffd98f7n9g9bq2kOss3YlL0Bp+uOmWWwzdbRwd09jg2utv8M+54Ze/PHX5
J85Vx+P2niT3F3aGL8BTYfReoABXj/KqxY6IuxSscILlaINhItdBuxaRm5LQ
pDVe2E7FsAowmzPJ/lzKk/sW07Npq8eKfRGZ2CKWw3NYw3UoNzaIQ6Z9OI+y
0xQ83vPzTLoUUBIw3flfgcx1bqiDrwUwAyOjI7iOKyRmXOZjt5vr+Pius0RI
cTiPNaYil3UqbBlMTZrONm8Yy4aMevznxKG++IyncS8nPfiZ69+R//6pBkjC
5zRND8p6MTMv/vftjR4a3fL3ejMZSdlH10xbSuDZLhvMq5y5p1IIJQOkPKty
hzkXYdBFeU5erStituBnT3TZtScW9QwezmvFUnQFDzNeIfhf6M3YhHRZfeMf
H/zzlVdfZdCisbcfw1hlu/P3d/tH67o3mf5T7irtJit4PuDp/T9S8FJ6VVV+
YWc6e+WVV3pg1uC9ycNHvaM9E1u/8+3v+O/8iRdfJIDnSxzNff2XfutbHpj9
d/nywV17hvcdXFZX/7s//MG/6rd33TW4ey/PsMgUZ2//3e+8E2o7Oo0a07Sx
95xzzvZ2LqutA/5sdPTd5p17zOfv17KT+eFY4ctnfNk/7a677z7V+ef/zuYv
Jquqdopwl5SqoMQ2ZAPVDqGdkCQrz7aksFjUbE3bTND2zsU63g/A/X68B1De
gGpnjQklb4KH28EZK9DE6OUpxHVaVixS/0TJTlLtImb0nBWro0ZBGFBwPqxB
u5S+PiyyhLBelwp8q6Lo3mqxcCk82kaxnEu1g7QQGn/Cug9BhZN4FUIEhomt
wkHKiiKuYlY+qu13HRV5UjxzfhyofRpx2C9mNm4WfYllnnWLv31VzTN7eEge
vNui5pwHSN++6wM2e7LltbVZjHdyW8/G3pFRa9SKircNrAXZ6MHvAhYtaG6m
dYvBeIvb7doT1z2ypi69h4ThAdmfdhRhtxPGhOQjekKtjxrcu68zM3LDL3/p
M8PZZ5+dODpDZsGDe/efcfrp3tGvfOWsitHJo190uksczQ9PTYfbEbIlpqYT
dr85zdvpHTqSnCmIIT3m5pDultXWn3XGmTfefPPw/oMQC1c0Wcdz6dpaDHjl
N997P8hi6O0jEXoPPPIX/5AHfuuTaaKfvP3hMu/Q/1x7HVJXPMDb1Ovtf3/1
Gjuy28Ip6uj/2uIl5k3+/amntdM6Eilz2r+eee5zh5YF2SAHnggl8PO6P/nG
s+FOUbLLgAxZKw7rmyOZgmvUaZNFq6h2bq+WtzVlzkUZDyt+GKsCbd+V1cUz
9/msU9koqpF5rkU71CsCxgNnavobT4xFv4txnRBfB4Q4YsjyVWLhyVyyg5zG
uI7HvNmkD6ariFqKa1zmmJcyZBjWGVaqCpfwHosZGm/E5DqJnebBXU5yAzph
tliubHOV4OAdnJtCg3PmPY30yKcqfP6hIY7jIRHskWxlYLOqmzZfSIXWv3kC
W8b2+ZjUvXs6zTRq+1RLSnVYCOWYZcI8nSXBNgXJyqjoVuVWsi3g1rlj6vYn
QfbEqoSmq2sF8Yxr4HJpNdJjCt7byz/ymeG2u+4i82Jve+v9D/yjt95+e9J0
jHo8Hvx8Hvn7P06b77/6nk2iasdj8Pomd59zzjmnn356z8RWOiodzX/1q1/1
b/j//ngv5LeukdEzv/Qlb/99Dz1MVqGtDItHZ6674Ub/wh9dc016pgjtsJtv
udXb/+/nXzA+msmw+O1ddy3+aAVAPptFqxHCL3/1a/NXe4z6VeXf2Wd+xZy2
oqHpVOefE7GdzPeHK8niHBwg2eFDMJNCM2SdKULIeEV5slGrUQAqc59WAi/4
yW4Mw0WZyDyR9GCsNxNj7dwrSiTF+3O6U2Jg9Fp2AS8JlqtEd4oVK3Adz4ol
aCf5sK58WBhfR4Za8RIy+OrCHdfooNrDDT6ZLuZEcZHqnEh0LlLixIUoLnxN
gBMehaTnrGTiun9BAr94gHe8Wh8oq0K+EU3Hk/JtSzxITwzM45gH83Tg/OLC
W97xYOn9ri38cqjj8aexO5nqHNyc0gJipRlTKJVTHY9UTRGN2qdXDpnsiTuf
bOnYeVicf0ERz+h4pNNgXVAAXQ4vQ+y1/vbEUz4zvLJ4Cb/qxz/5qTka4ZWw
PdeE187j3/CBqajRJNh5z5/u985/8LG/JnE5FP/oC28t8m/48tv/tVm0hfLP
w+JyvdsnxfGxua/fvJmX3loEh9cLLrjA23nZdy6rgD2W7z5YU7Pog6UmvSIy
t8JrX2effY7/W772ta+tbGzyNg/e+HbV1Veb99O3dfsXj3/merfj/10n+v5w
s7OAYlC7OCMVLp7TSrJarB3PwtBqmEDJjtepc1dHcQt9vFwS3uQM2cjsCZHu
iNpm8EyITimY8BVpIzdREuWYQzQ3N1bLivWFgkCsA9IcVxjwPXl8nX+mXWmC
bGYQ5EodhDpRsmNEJ+swGWreIa5z63JuunNDHXEz58Zy7GiuWM4VywKDFQNJ
LSf9FXA/f433KPcPXldZMQ4Nhn/snFQ+dyZvrG9Kr1eTlSrpMT1ZlfJgdR3v
zOseXuPx0hNL+6EqaB5m8GxDBiumw0Io8Ak3czEzx+GMx3Uqnm2RzBdgS1+b
2v3Th4Lsie+G2RNSD0AhU1b1QSdGZT04G1WnrvaSH/34xz4ztCfTxAFp3Zww
ROEdJZ1kZMW8uq6NNRu67dbZVbOhy/u/trP6mm214YuGnl4zKKRoCq0dd7yt
oWeT//bWtHfAwSsVrqnk/YH13T0t/YMQ/FaGOaoeWWXkEsez3vkevxlJLT19
1AQ+/TCsXvLAo4+mp4+B6KlPh/cf7EimTIQ8GNnlDIuuTM58wnfdfY+KB0fz
Rru75JJLbYWNU4p/Trb38xncH2RSKHmyThMWqnZRbmyZ1z8hCBenlp0b4ViS
LII3dn8y+7OrUUS4q/liEityWKnjlU+K1JDVbyvOo/1LDA3CjpTUspNFAInr
ePi0Ve0Uvc6k78XJnuA+bCasdgLSJazskGTF6yDa8YwJ3VZDkVFwJVMl7xWC
WZkQwsKpcxLhQK3MwUjKxvkN7VF+O6I49q409tP24KNuGpwb73GhL06+BhMh
6ffr1PQMvJkHjAp6/Dd6j+UDL633qOl3z7QCSrTX+g82iserPqIDE1taKoVQ
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
67t7SL4jaKclz54k/PPZx7wdz7Yg94fryWbwinLpsDRK2rnimCPijkdy8kyK
+al27i1RMERnGx1T0d1Bsyb8Q27RmNlweSVNsivYOWaCyHfMSIUV7UTPAvaE
Djc2mEFj1Q6eT3pp8rsE1Q5YMFwrgOfwUQZKdukgb0KNHoeRdU6lzgV1nOji
0F1ozkaP77ZWyfR0bzZX19RU09DQk0pV17oq5ULwQMmhbkohkXLAzRzctn35
mrUeyHmvV9Y1rOsfcCtvcyCu6m+Be8J3SPfDo2TPAvJeEKnI3GTyKcmCXpFJ
oDgjg3i1UM1zUz18PCLiM73WsWv3+k29q2vWtm7YMLR9Ry5fJNLxwOTOO++5
94zTv+SvC3/RxRc//9rr5qj3qNendl9vsyc+XNI+ZqJP/cp4JJ1WrJpCIvGY
godKphjGC+d0pQyIsHWkWgDAAxsvdxx2WVIldjjblf1Zt4KXAr0rin6RptUg
yJnqcqCHL4qHkiB6B1KimD+bsgoDlebACCIrFdr4qIWp6zF4gdLCpDx1NJcH
fTW9wgcJwhUBopzk/HMKvZ/I+5sASO7JSsJdQHci2jFDljwnUL5TkymIzixW
+3Hr0ob9gEZH2xFoa6WklCGb5LF27EeeaYXbdXh/He1A3yV5BHnUTSX0vo5v
nO6Q2Wqi4+D8GvfMadTTylwHI3kMGcLxgpew0/Q6n+tYnZNgtCJhcuSGDlqr
cl2ZFK/jkXXaYE0OsZFdyJ4Y9VB5+46Wzs41tTUdvX3pPXt5fQ+iO4ksF/KS
HB3nU1Bm/8HxkIjaBzevqKnl0DUPlhvFe6o/Cudr53AC1JgwPulpEh/6fKq/
RSM9GqdnvtOSHJsn6XVz823ho2Vj847lBye2NLWvX1tbu2Fwc3b/AT8er2/7
5Ne/8Y3T2L/Hn3/Ru3D4cP4xnD0xeOiYFI8nzImA8ibE4/ntl1VKsflQ2KWl
Op5R8CDmQc3f71uoPwsSabUeTCQ9mF6hReuB/nbOWbSYzUq8bzdHbaFjXRAw
nKYdIqMbHr/cygaCN6LgUU1PTp6d9VcocwgvZECXou/oSgdAIIqVQvu588/n
sn2W7wrKp/BLoXwuebJQgouh2inhdkqerOjDumcxSaFp8B9h0ysp6wPStqy3
dB5/a8PtHDq/6ZfQGrIU/CzXiemx/oUO1c72fnrlkzi5sYzuLP6FR1EORezc
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
k+QbF4PudHUuCSYF+NEqkWePpQLxOYtrfuSaNKGdrBxxIZyFYU7jTiucBvL6
J/wcaBCAQ6j4ScqE25FaJZgb/VltphqawrkOFiggbiwEPJAfEXBdtfgJCq0h
GbKG63JBKVRpFIhhxQIHFqt200eaOzpaOjpGjxwbBapdnLVilaxYa8VCvQ5W
MBOHZqPaiSvARuo/hDRiKnIThOUcGh33Wxk1vbN0af/4hM9dIo8ZGNvOXvM9
/CjZyP3hVfA9wD2IANH7hxpj8DpmvoZIeg5ZDwNhnPXOZBVXnCz428ZEoieR
YPF4wjNsYkT//tTTBrpWta4TM2rJymV3/v7uBx97zGtEjb39/oUv/uftsLmh
eilwe+nt//on//zmm3DjLWfZZM1r/smdu2oqonoWBN0JjOcdNZXulqxabfqc
Ne2dP732uvRM8bY77vSPLqtvMp0S6DnRGmeXXXF5cKuPV0OHwpqwuECKFqWs
ZVjArlWtgCfM9PFg4XfvJBoHeExi5XygMEQreHiEcpGbI72RRlIJibdYvisg
jQ4WN3YE4GkZFobxSOasRC+fJ18d5/0X6p3glSlsBeO0UgVF82SjtDvpkPMR
cip4mi7nPio85EJjYflKcrQDb638hkqsXVKKtSPhdg7VLhVmUlQKFwfVS4Rw
OzHWjlQtlmLtrCdr+jqu3aVsrB3KkLViXZyFxqLqFZMfSd0GFGtXKmf27atp
qO9JpsYqJb9sAgX0pPBoaKoTl6APSwrZieOplg/rVmniOLCY7uRqwxAtuNkq
Eh3U5ayv6vRDa9e1NW7oggKaxGyVjb927+GbdhV+Td9JKCF+Kv8JQL7bosXv
IcdZoOUJGomHGE8hOjlaUlvjjJAeZbxqIZTRQ4fBdKNMRDyo4PmP8fd+8AOf
Z770pS+lp6ZJOi3X8T5qqmSnrmxZ57WjzmzOv/bNDz50z7C8tvnr227zT170
4bIcnqOJc7fKocPTTW1t67q7c8fyuoJXvuYnPwmCBnfs9PuczXs+ufzyy7tG
x1JHZ8466yz/6NDe/ZWeavrY8samdDhLNX2a17/1Te7yzzzzzK8M7PkkCcqz
Q18jaVHKlWFBptggY0KlOybfER1PQjJwmgntBoKbOlqJigS4nKpzPPrOP4Fk
OEYiHz85ienObc6KSh2U9dLSyrNkbTL3uhWfF1+dOG6Mv2k17rQqKGn2LYTs
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
li7Ah1TQd+Xxh3/0x+Ur/8nnP48hi3FZysPhBm3f0WPTjx5HgNe6c/ez/+Cz
5Zf815/97Fe/99d4RzoyM1c+NfzH/snrb3TCVlehu+H97U9ee334sr//2c+e
u30XOlKqkWeKvlMGPN1y7CcsUHulr9Fhui6uHbzf2OLA2qlJgn8wa1x4JRJ0
Kq8xUEutZVTyOpp9Vq3mko4bUAMewxK+Yut233GM9+PNOPxYcKCdOxYcdzwn
iz95T5O1xF07Nhj3NNTPJywc8CbgH901GOCnr3yx63H3RIj0RHfxRli7fqur
P+YK3dWydq3VlKRQ0K60zlqXSER38bZWdrlb1i4Sd84M2dG3Z6Fd3mvnarKs
+K6h1y6yducuXhrJOhcvep0niO7mQhIWvXbI1y0O0F+3Zpm6COdo4UlWhyW5
iQwL5LF2ADAi3gjIxPHRKU8apbmUNqqQ0s4jR7fu3lM+dtAaIrr10eHgNPZ6
c6bJs3XHefPHjH+PZHJtx7LTmewhPftr9bXaAWI8fS3dfzgqQnncjU48SiB7
aQuMWuC8lbwNr9wobT08Ekb/jz/8d2lyGXghNnRUn/HV3i/+8q8M3/P/ffMt
RddPj0daHDhxcvuePZ179+P95Oz1m9+amNxz5pzaSJZ3rVMXL393+84z129i
CWch96dnrt38z372Px/+pVsPHWmHZ2OsLG2oiT7bV+iu6k5h4iyl71owwEJ1
pBjYFm7+5hA4MGBOi/EE89AgZ1FHjOgV0y6+BXtgjfHKG18br6D0XcHq7zz3
XQfaUX4S8NUnOot2Q2nZjsPaNQlTYFON47gL58GQ6SH/hteMh/rYdmbQqnhm
9vEJnwv2qVHvU++JxU9uBefgvIJtXgWK1W2rM1KTRcedvkfBfUbNm5CsXZIz
OoKdE/RdfIHttVPlJxk1dibL2sUz1OEj0F1/cLzd3rp9W/vGDYR2XjY2rHFJ
k42UnWHt0us33k6cx3Uea5cz151XoK7OUxdZKZVpzfvZMlzc6cWlr7/7roPf
qoa6i1Uco3pNSGfoM4jT8Ix4vfhO9FcR1DdmApsovBTchjNrF8P/3TjGmsZ4
GbkWf6cep5c/yivq2Llzw6O2O2Uu+T9dClptbcrH4VPDAN5q72///M//5m//
tphO2xsogwTotuQzq7Zvv/G5z/3dv/9fjVIVeos3ZvB6gxOd6a2Tk50bN1XC
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
viFl7fCWZVk7JyRb3TCHb45qLLYWu5Sdj+7yB7B2gwPHj+89dHi+0SiK2LSP
IdmB6jyhauy8w3VEQTajhdnDRmJJMNbosDYxEemgDK4jCqzhl2rwDLraGiut
3/ze947PzDJs5p2xPF4TvMffTb5DjifM4D3KW7qcXvwJmywGVWzxF2qYWNaE
bHi84bHvyJEzC4tGjdXqv2cBdS9pptLOJ+QmnXjA4EUPntpVlV8FPF7owdsI
g2epPM3geTmLGze3TE6evXgx7jfHNyvL4Ik7m+0/KXFguH/2sQSvWNUMnkJ3
JSIqpESrfDiq3c6j77AghTF4nLsrUFoyyA3r79RsMlqiopoo5Gs42ZJn8DKc
nn2l5Is23I5i51ZQ992PkU/7ESDA6CfE4RSdNJ8iabX5jjuPuIt5ilaVcTZY
nQRtFOzPMLoWv+mninQ+23HnM3iqKUixcAbaSSss21vFTzomKewuT42lGFVl
6rEUIiRrc7JYXFyYjSe6izvVfUzdA3EMWdNZY8jazUhrTSYka3FdWWo3t9rb
d/TY7kOH5ru9SNnRORSqr3ihTz1FCdpFgCfcd5LlYOtmDsV5PN6SnjehJ01Q
hkc560CBNQyS1QqZuqrPN0ZxHgu389Dhyf0HLAaTyMpj24YPMu/v4Td8N3tU
r8mgvjzeq1WoqSvP9+bpHhVPq7VHSeItPnj4/sTWpW6Ppi3kmZodBzoN4hXu
7HTW5KdmLTJ48vPFp5WRHrzycy2GWYhPenkHoO672ghtAng3bw0B3pml8+Hu
FPOzA0+hUAkLY04WeTRswCu65MYbKo6JPmtv6cDFNXbfQZSvkNwdrEFiYcp3
8isGL+u+G7AzA/klL+O+a0kMoOi78IIoFBL3nef/b7NqFBOsyLWj/GgSr5v7
t1jIKiZ3WOIO5o4hVLaOOydVQbi7lvzlarbW7AUKc+XUbQGsF7RvL/IUIDKI
jl3n8OGqIe76KierYBva7agfQ+/ygLiLHg+Vk22n99FJipj3b6Vhsr1a1q4t
p1HEkKy9N+btdkpkcTAeufPPd/t7jxzZd+To8EHJA1C+DgVZzFCM21l1ZWvk
97wMhSoozrJ2NZ0nOkQpXXZ20gT113kuryZ9JgSrZPVWhawijrJorXz8wdz8
O9/5jmXJfOSWzpePvcO+m/3aPDKsU3hrOD2L93IYz+FRQTF3u/IixrMTzYYA
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
qgUL2ggGT7Zk52bRgsHA7Tq2Hrz8DIuLwd2aDtBnbU+R05Fimi3NeDJVfxe2
jYS7i3VMaL3LaLIC1Kl7oMF4M724R9buu5n7D0b1d7dudwCbWfed1GftRNqU
nLXuO5nLI+47T5/V2E/zGD3X0SRoEILcmk0li5yGJWeQz3ExAO1VowweS87G
gQui1jjqsxT8EN+dSs5K9x2Ks58oj6dZu374ZlCWlZEKr/uFNd0JzVoRd+F3
VyPCGnAesX3fvMZyuW7TXQnP2LZCXWbpg0BgIS1LMZossG3KXycPVnMXZVng
2BORrhx3JbSzqVhq4gVNtm6krER31mMst7eyOerOnVHB3f2H+ckUpt1OuGhI
Tra+AoUsFkKQNZNkxTQKsU5ha/H6RbmoeV47j7UDr10UZOPiq712Zr1uoMYC
X1c/Ocv0D1932up0N51i6pirrTniQpx258XHb37pS0u3bo3/OCLNJJbTZ9Sh
3q0WB9Yyexbp8dStnKaBP/M8j8fA3vPjZ8+eKgo97cKZUYvXRkaiFSqtxHiI
9JYJzNMqrfInaIBn+lKCEy/5H5ZGn80K43kdKb4+K622Lnc3nl7RW4v0Xdl9
Z+MVYnpFou/6QN/lkJ5g8BwDnkJ3w+PU3PzO/fvHM2TT1lt1GmA7ChTfuclZ
NbeiJbk729Igs7G6+04TF9p9JxZWQfGFv52P9Ux+p4x2FlvvUIzrK2wQFus6
KdakOJUOWBMCNcxeXapinYmzVUXJS9N3LzGLFmGkrFl2ZVmLVxsQd7k8Ratr
Ud/AZ+fk71eiegnyuSzbYnmKKYL0ql5iT5OV1oX0QbCeOuVq4MrsqpenSHY7
k5YddEruLpVY6qhsEZTZVHBH8hR8OEXGcWd3shLpBU22v7b70KFTs3M4+sfY
7dAbo+/P4zeRxcVGk2X1xXosRfxjIhMGazQnG5Ykkwo0yxkrtaupLI6arGTt
rNFOqGyRtbNNxVdVNlb763TVSQ518Nckpg7QXUA4hqbzQJ3PmCW0Fh//1fvv
nyzaCZgNTz5/fufFEPgNH5fH6Aw+K87AefP+r8T70SAGn5Hx/IWCeZbHuyFB
XUTd19aevLd1y6VHj4UTr2ZArdBqLcCLCQuSol3nA1OgKcUweMSDZxIWcYaF
Y3AtMV4UZ8+zjRhgvGrXZrZ1fRRn2d5QiLMLUKpp4xU4vSITnrUYL25s1W0T
6TtQRkq5pL9tz+7TS+fz7ruOvPMXEvgltw8wAGnxCs3GJcCz6E4dbrbCroZI
MlAGL8vakXnunrJGGBtN+1RQgbad+MSdfqX219n4AC9FKaz1zgCnjmTPKnhW
x9RtSuZi2nB3CdfJSEVLgzrF3UUCE6XqxHNaBdz+FgzA69sXh6uF/pYrfBXn
UyQuDq8fTEMw7JepuSvgHWQLSkX0xS+Rn5FE3PFPGSlCIeNm4rtFA0Z03JWf
TdWC0tbEXST39NwxRtxBg7F03DFER1Jm5y5enty5c647gnlxzmNEd+X9E3pH
ozcGWbs1tTe37XZ+/4muL/ZYO9RkhddOcRHrYkWLa1xD1i5WFgNz8kwlZFdM
TXEtayfaceumiQk1FlKxEYEMj9BC/OKmbB6OzFWJbSJa85g6C+dq+LeA0A6c
ODm5axfAtgrR3UqPR8ctcQYRIHwVe//4PSDesyyih0glP4mWPCrXfoQwL3oa
8eevJNqyCAXMeM/FbIuqDc/ifN2G1yhLGzx4nkoLAE8S1H7OQvlULxgP3hgB
an3Wd9/pT3fUZ6stHivAnO9bfXa0f1ToTrWjVO47uI+pCK1FdCjUUvedylYg
g1dcu751cnL60apCdzFVp9x3kJBN7jtcPliz8YDOrbD6rE3O+nMrxMxNrWpB
chaXV5NYNI1kyL0k4k6LsyVakFDQI38q/EC1Wsd6lzi6Vtd137WFTCkzpyB9
xrpgwZ5tRJzdlEPlKSQEXcdv3jKT1otoIhXEx5g4UvZL8WOzNb9N2YXiE3fO
zkJuMXSeQkd+sOlOX//EcUeJu/T54nkKqdiGd7NRWeTnreOORWi1465GkHVw
nXXcRU/yXHcUpmgtX012u4DrqOkOcrIDbYp2JlPEu31tkkJAO8MhXLSTZNdD
EhBHL+UGUugMBSdD1p/YwhNJ3GmHvIfrLF+H6E7jOgnqMnNgcUaYAS1ChKVM
nSd0ElyHnJtEa51Ll7/+7jcpirtlMF6Adt6zAh/qx+E7Kb8r/G4bUnm3nltX
HkxACz/JGtY0snajX9bzURHKzVvSifdc0XeOE080HuMwC6rSLstpZQ168Ahf
rQjtyHJfCB8imqIVE8rMCFqn4tgfQcvQHe4TR4Oqg0ag5s+S7rtq8mxT+o6G
Z72CFCmaDPYfP3Gkilco20y/SNAubeGhztTos+DhQfoOuLuuamlAj1BLLlV6
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
snZTKKTCeTTdWVde/IxIQbaR464k7tqVtUDMp8AS4/KDPNyplS1Jgbur0B1C
O+u4s4ZeG5Wd6ZVZ2h4Sd5ldquwuTiNldx08+MH8QmwV8DruoMRYme42xNoN
MrhuibUxXAisXZw4pli7C4yLSExFEmRzrcXYa2fd7EjcNc3GSkd9w1mxtsUO
3f43JK2E88LGWEVPlCA9ckHHPFYUJYr73d/7vSEc+tq3vvO//u7vLt2+/Vu/
8zvDk5/+9E+dXVxEzs0ityHQGh7l44Xr1//8q1/1nrWP8Yx9TTyj+L3ywS2L
4gB2uvpvnWKb02rh55+ovCdP39u65fLj1eDEe+Fg8hLvPRdCbWDwEOOFy4k0
Yy9D17Eo5Cm9oGxa2TLos5iidfTZ6o+iUGitmmFh4xUX1oQ+e36QKo7r9Nlc
fjaKs0GfHZTxCsvd2XaUqM/OAH1H9Vkr0Y4xnm5HUdAONZThi3fs3Xt6acnL
VtDkbBBnq8FkQgZKbFuCdpHTs/qR7HMQcyvwBWEprF6glFkk9xR9h/qsTM6y
zoq04GpKR54ZmKcEI0eYOvWal2m9G0gINNCgzmYrIFjRaSbObkqPcRhum2r3
BLTra2jn5SnsT0AUoThp2WZ8HWHnaJA2pmVVniLTosNcAcD4AXJz07LokeuK
T42VZdHwIIRaJy2roB1Jy6bJFImgYw3G6TwOpzBDx9w8hee4M8Td6O43dWV5
W2hB8aAd67jjgix6oaEIhcwZp1t+2oKiOASPtUMT0UUtworVjeI6w9rp4VC0
ucLSL94Eisja0bYTvzv3BRs5kfi6W1m+LuAZknv9/rbtJbp7+5vvzq5c++Vf
+7Xlbnf4yiur3b/ZuWtx3E6skJU6EI/d/uj5F15/baXbtRBOYTn1OI/3ajm9
OodeOCPalTeWvKCtKcNf37n5qggl1uLFHkJmqsTJZVylVV3H9kq7KsdY5PVZ
SeIxdEcjSPrzJfRZm143I2hxSLSXrVjT94eBYPDszjFOxuEArw+zyaQqofRZ
q2gkmOeXG8NTSZ8trl7bun37zOOu8t0pdId6TQEebOTukkmvKxg8tN5ZnkGJ
s0jfaS7O+u4yyVk/W5HWX7+dbPS144NyetB2ayGf1fs0zKDcneLoTC8K0lmi
9a5AaKdwVMRXstP41XtRanFgJO6IMutkQ+w/KoK6GJhFhKx8d0Sr9blT+ytg
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
Xe/1X3vj9bvPP1bP2tdXx8f/3/Ag5/n7uzjT1ZSd1C1TbOPPUHbISHQ3v3Jt
5549eIZOp1Up2orHk/Be9+RE7s7RZzMp2hVB37lTaMuPg5phodx3rhNP6rM5
952jz1qtFvRZ4r7LzCZbMOguArz5GBCTk2eVlkFNLGLXLMOzSpzFbEVZcXy0
KA6cPEWbjQPGSxzCeL2IDMAAAR7l7lCcta4h5b6zzyrpCj14JTYrpDgblVzV
VqHWX3iWCrh6fTd4oDrj8UgMXeiCu3gGxdmQIHBrjVGc1dmK1GCsuTvKtr2i
GQ9FXjVe1iu7MzRdBuDxpjsvEyFNdx6c9rhW/VtWUyoE+A97kBYLU8D8WeCZ
89wdYj8myyriTnsbIFJBiTucPiYdd3z6mC1CKdKWkOcppq3jjrF27Kjub+Vm
9ninc/DEyei4sx13IZWmOu5k/ZRsQck67ngLighTsAL8i9JxdwFysgTdsdWK
Qrtgt6uqTkz5Seo/8WZS6BmygXVBQRYpOzY91jbacVynCoprcd2tuvLh64PB
T/3UT/3/tL1pc1zXlSX6y170b3jRv+V96G+e7apylavcdre7XGWJMyWKMkXS
lEhJJDITAAGKBEmBAziJg5ADQIAAOGlwVcTLzHPPPmuvvfe5Cbk64oYilUhC
FJB577prTOju2sOHWnv1D5dz89Hay5e/+od/uLq2Rk8+mR4Wv9UP97/larWK
yos6WAKtNrDk7cCD4sc7efr0wo0b1b6UAvPW9PAc7VkYjLejF2lL0XGkz8Yd
KdtS3lhfsgBvakTflU8f52c1wX4t0GcNb6/2Z8l9l+g7PMPYZRzMVlTCs+S+
E6S3aPKz9NhNzsqJ19xxNyfqy4m+e/gIb9UR4M1jbLZPDADXGvcKp+H0onTW
GbwRwCP6TjMeofuO6btmP73WOht54zNdMzB9tpE4y4wcfNVfT3AToA6emUGc
FVcbc3c6W5Fg2P+NndmeRo+QqlBdKDPEZqvoTjN1qNVamEc/6gq6M8QdsrWF
uKtskGkGb2DRnROpyD465O7ws4DEHVHcbMAzaVlx3MWmu1Fm48s3F3RnNVkv
LTtsL0Lpq30K95Slb1qHS1/3J8Td1HGHRSiXNXFnilA2ME9hNVlvmcLpQnEW
x6S+OKpAqS5TmCPUZGWTAlk7d0aWrpu3DHkyEWQdvi7QZLcdXHdX1mMB3eUV
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
Wfe/5Tr9+q8dHk/+r1v9eF9tv3j34IH7ow104sWzZSGDpyO05vDQHdF3a3Bw
A97+87P1dhSk7wJ0hwxeoe+k3Ni474C+G4XZiuoqGQ+TfeEtz1r6jnpRrPuu
BCsAztW5uyhb4Y5WaO6uyK8fnjt3YXmZelGwIjWjOKcXxQzOJkE2i7OaviPr
XQeuehybdYk73TrLAm5fcXflG9LlWK7vjPHYmmXABhN3VSXRf41uvWtv/aUs
KocajGBaR3d/G3dXnHhRnqLn4dVQmR0wwCvKNbBw5hlG1Kibu5xeRNy1Zm0c
353D3Wn3nXzVq7mjzCy9h3VaFnTe8iWWZTFP0dXozmzLOk13lKdg4q5acye3
nKVx/cHDg0cOL/VHqsR4OFzyhmW1MlurufP2KTYI16FEC+E4Ju4UWWd8dzda
NNktEmRvQk7WLlOsmhYUh7tTauwOj44Z1i4lKepLsmqWwiQp6qzdI4+yM90d
PCgmamxWYB2XHR4I6tIDq3tazVSxasTC5WP45s34SI/fP/XnP589G70SD/s9
E9en/yY1b970L68YPOTx0GGIJB6iu+6VK2c++URPWvidM7PnLPwli4C+gxXa
HW3A273rJXp0v7G/P5sHWbjpMeDuwu47yjTd0PYJt9kYWfrszdhE+s5a79xm
4y9GGy66y+473py9AqoEojtc7dHZCvYtV9x3C8Z9FyVnsfxk7svVox98gH5s
h7vzNmdVtgJ4MCvOdjzfnfYjOcxG8w1R87IHKLPhlTrm7nCPzBJxkT7o0U3M
JrldHzZY0Sv4x4F2PcOMKeJOJ2cpE0FcXGuegrk7Hc4lWdYtu6Mul0pg1gVs
bgC5ApWDLyEws3ysQW7lHeLdEfQ9ak5xd0OHvtPKrO67U8psObwSY1Zm83+0
22yNjQQNZtMd+/G8tOzk4z/+hsazYdHdBLnZIs0oT3FmrnNmbg7zFMLdAbQb
ZneKnANLnkI67gLf3Ybl7nx0lx136ZSOUVlIyyruji4Z2vPTEHd2d2w18w9Z
pVUdd+m6drtc17aYuGN0p7zray+KoR1DsmlJNilucUi2tiRbhsZ4PbZospKh
cCk7Nxtb7SUuxw8IShj0VZ5JiM4enaWlP/zbHy32w8NiwvQ4+i9GjKKL9+q5
WpW22Ht19PjxLx8+zCqt35diuTuZKnM9eDpYsZMl2uy93DUM3gtm8O6q9x4b
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
WputsDSavmvdI+PajVm4u06f9cdKsKKnk7MdjeiQzbOZWRRnfzB3hxu1jO7M
UEUgy1Z8d6JHQxLZ5Czkh+xg4wH+qPmrhqAr3J3l6+otKHNEx9nX6GpivNGg
m5So6U4dEKnIKxWKu8v3VtB0BysVJhXrlt0NpnmKQWPJGBR016rM1rMVZy5e
HN8V5mf8ATLk7q7wtuzIRXemC2Vysr2SHXc1WVZvy7pNd36YInN32GDs1dw5
27KUp6DdMS3L7vDuGNcX76oWlOoyBRF392fbpIjjsejs8gVZb4eCt2IJ1wG6
a3ZgCdGBsa0BdbHwiliuoLUE5zbfvp0c6Znp408uXjxw5DB+B/2n7OPy/YW+
qyI97mahzYtK08uHp08v37y5broB3VHaBLPHeBsxXrxkURIWVp91S/BSfhb9
nJifhe67nKLVmW5Bd6TPkvvuVtV9B9a7526/MfHqhrvbFPedun3TJ4GV0n2n
6LsqdyfHyFajuL0okfVuufQJbAB9p7i7On0nDfOLA8Pg6cUKsd6JT/twTs52
NXdnLyXg/CnQzrbeCXcnnIa9unXy9cv67roa4HXkiqnpO3lNyN3Z63ufn/wB
3F1kvXP/lTBM2BZilFkEUUaZ3SRoB+GI9sUKz3fXwEIXOrorFdZ313Gwa60L
xaVDq9DOQdHe79EP16C+X+tCQTqOiTvwCWjTXcekZem97XehaO6ug5psfs/L
hw7TsijL5pA7f2zrXSgutKM6lADdTc5FB44cWbj/QGruom1ZcdwtN/ezQYmx
2acw3N3oi3oXCtShwD6Fd19fI+4c84847hDaJfpOtz0UXqLacadM6Z7jrlkN
IE0WUxUZ2jFrZ8dkM7Tz2+1QkBV054G61zpGwdlYYvAoFSvIB/iuWmJCDHLC
y2mOLoExwHXTA5+5sbb269/8hr4kX7WoLz8uB7J8s2i1ceZCVNrJj+7us2cH
Dh1a33up/Yq4Z+GkaJ9MYZ6rz+bf5p5qwPM8eA3fqwx4DndH6xXT8OyuvF2B
wdvWyaDM3W079N2tzN2h+063o2x96aG71cp0hZ2KljZLc6jkbNJnp+eQa8p6
h6xdu/WOlVlda0ytd8p9lzuNo8ws0XeLgxb6zrPeKXH2zNzc2blOFneoWSsB
OafTWFJ7vYKmuBTFWu8qyiyju75WwSw2g6twRXGTr7rJC0RxP3ixIqD7igS5
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
uwvfDAPi7uSuIWv9A8Xd5S8FzjpnpYLRnapDKXR3r3zbgSbG1S0V3GqVmvH5
7M2z3B0eiwNzZojvEOX4S6d7rreQxAKsQ7FVxhXujgOzvu/O2SCLuLvrWpP1
fHdRYFa4u+LewYVZqtu6pTN9VIRyS3F3zrZsc6XbfiGt/hXuzlVmeX1MdaGU
f3r7FC8ta0d5CgfRwTgFtuxuqKNp9mjdpPC8dta99u2ux9fJA0u1IZZD/CaP
304PwniHjh799NIlYvbKN4kZPNFqYan2ewrSLiwvn7twAVO0NlciP6s27u6t
674j7i63oxT3ne2+e5LfD3abrAnP7la4OzgyfSc3I5icTY8pHr6mNdnivvO5
O2exQuXW02cTfHeruvXOLlZEDJ747q4b353cLbp5inCSbETKbDnvad+dKUWp
cXczZGZntd6lFoUSx5MrwsGjR+fvl8UK4BaGKMuS7w5KUTg2G0E7AngE7Sx3
R5fs7rpvnao13YkFy+PuuvxNQvBm1Mah3wHi78yG3F1GUzNmZjcrS2TE3dnM
rHyfeavwGpcdKrOI+qaREC9tYX5WMRfHT9qcS8zdOSXVFsVVuNzOekDnykoF
xnbWFbqjpjvEflqr7ds6FDTdFfPeukJ3Wa4tjSiozBpOT3F3TlpWK7OWvsO7
yPc/+mjuxs3i9Q2qjGWlQoYqlMF4GEUqwgZjG5u1KxVqosLbqvAou3Bh9svn
slKx5a5UUM1dkmipwbjehUJpWTsv+yCjO+pCyVdepwvFyrKC8azjDtCdr8zK
kbgjxdqZjjs3T0E5Watgul47ctzZxMRrDe1Qk0V09/avkyM/TjCveeazublD
R4+Qhqu+Gyu/3wGF6OQsBODtfPPt+Dvff/LEbcDLDJ6a8BBs7MmykyXftt2K
V+sqVdH8crH1DnYrwukKGpw1m7PYabxjlVmIze5icbfh7nTFt668E2XWtN5R
ctbn7qLFCkeZxda7cm8Incaavoswnl2bpTJP8t0Jd0foTvnuPNYust5FxB2J
s9p3p/q10nXk5Nmzn69cRyZB0F2+AI0E4Ely1nJ3OTYbpiowMysvUL679A1V
r6xzge6sq6s5IjRzfbevkdwl4ocWNKKJJp+myy8bKnTXd7KxVuUk3sxJVZSE
LJruwl4USFWozOz8MER3LtiLlNlOH1Af/wRCvs59xkNxo7QNZ9IWCtrNafLN
eavgb9y7a5A/7tDCXj4o6kKRep/m9icTd8LdYaNd/hBNjvnJJ0tej/0nrjI7
gDs1xd35jSiTc8WIRmbdKZwDhw9ffvioOfPABhn1GGNH8cRFPGgwW2C6s5EK
lZzlsjtdQDqtMm4WZnmoQkO7MkOm7+5d052AOtGDbpsNsts67odNd7QtiwNk
YkzK3qSd5sq4323ZXUnLVrZlm30KTMuaVdlXlrvDtCzlKWZ03FnWziYp2hrt
ihrrhCOMvw4P4eumcK7guvz4P+48ePAP//jrtwUHOvweKraVHrxkw5NljS/v
3j1x8mRli1aMiNSRIj9Po8823F3WZ98MgL6TpDO475xVMqTv0H2HyVlkg2N0
57jvvNY7TM7uml6Uwm+b1js+dBeKtN6pRhR43PSiFO5ON5mXTmPtu1PirG5E
ofMPFd9J5V3celfQneyRkfVOfMsSm8VgRR3pFetdu+/Or7xLV5Nzvd7ZuY4o
s/maJaUoeoxMdzsgd0edD1Fm1lwxNRfXUCUZTPb1tXjdR3d+xVktWzGY69P3
D9GdJaPqXrKuWWUFZZbYvMKStcItaERR1rsZqoxLPLZnlFnCcjOiu25h8+JQ
ifpZyS/Rsny1nz+A89G0XSRi3rgj0SD8YGQWGDlEiUg718vu8J2sUxVNHQoF
Zo0yO0y+O+HuhLgLTHfopA3CFFSa5JXdybnl8tSbsSTawVSWRWVWuuxS/R2w
dtjcrsvuYKUC0rKRMssrFRKYtQuz6QTOKxUqLcuyrF2psKY703S3xcqsWqlA
WXYb84PJdJeU2QTtWrtQZF42WKmYNKLUfXcecafSstKiNtCyrJOWfS27Y9yC
QssUtCfLgqzTZcfxWDf36mI54esExcGhkN7Lt9/86Cc/fr6zg6+p83geg2e6
jr/99sOPTq3cupURLPbgKfedi+4QMBPAS8pstE2G6O7pSx/d6d0Kp9b4K1Nr
bMRZ2Dtu70V5IcGK6a3NdmGzMTa77VTe6dY7HK3YyrHZbVt5Z7cF6VDEXf5X
achE391VA/B0NdOIJFpxDtPdK9B3U98dtIDayjt3bVZwnaA723rneqfnmbtT
wQqM6aUvXbp+4+TZvxgXUOk0TjwDWu+yMqsaUYS7i3x3cgG1biUrhxXuji7o
JjMrl/I50N1US0agzLr03Vyh9UIU14UXMDeFqYp+QXFu313P4/TqvjtvrqLV
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
eAiGHYLOU2wZd9fJT1nwe11Ax7XoNXvqQjJ7PBlkZmYNdMciFZ1wd1RlnOu7
49AOfXdMmTXrUIw7wfh24wzzSl//ixs2YMdmHt1RZpaPzMq+O2FWabszK7i7
ARBnlZfG6ruLgVmzzZgvkcnMrFZmjVSFg+70dc0cqhDK7DCkKmRadmbmwLRM
y+YXZrkyiwuzNmsXN8jOcWjHnGBeHUokpthQBciyBeYxp8ewCyXuU+Sq7XQe
FtHd7//rv+jQ6O7a2+cHzPaJax/40d0/++3vXqWMbSDu7vrl6n+84cnrvrGg
ge7+4drHG8/85aOvErrr6e9fu349lRsve/m1v73md43nrFy/02i9S7HZhO4m
wH1nV96dM7i7Oufu9B4ZR3enibBFgHcsOjNVoXHi7igzGxljWYoyrFMV3HdH
cxVijIxnZu212d2p6c6rQzk5aKUqOuDu7L47KEU/wXZmgb7jM2Qud+ctkVGq
wmszRvqOtBIT3enyE91m3Ftl0I7f8tf1zmxgCZro7vBRLM83UxVwJbJ9d5eU
mZWNKC3MZhB6BnfHcpRe353lzRP1xYrNA0Tho44MN0VYV1jvOt2q4NEGlZkt
9Nk23F3Wd+dyd8p0p0tRjEiFIOXMgEk7LlR+k/O+O4+7g5+y97LhUF/77oC+
U4HZqn49J04PlFnbd2dyd6OMD9fKLE9V1Lrb+e7kTZ/Td9c4XiqX11R6EnFX
S6UoxS2nGplVhU5N+m5LXW1V2G3Gbmw2nmyNGbLW2yd1HcoOzt1hHZYwY7+u
WlAEfce3KkSkImlMovlB9BiT6S4Qd6TMDk0arF3Ye8rPkKkSY5e7A1xHvruE
8ShVQanMGs9TFGlZm7trHUZaFlcqWFqWtmVFmCLQd86krLE6kVFjEeDhX8Pb
V32tmYT975fd96eX3/+Te+75wtdmzV3Sn7i7t95+eePuxhtf+eHSxtO+efeK
pS+9dvN3F1GqYsHC5w4fP974mo+dmPrKD58PQLGBA49PnJLcHdQaT0ffXfhz
QvWioPturMDS5zi6O8fXZmVmFhcrjjJlViZnwaspR0864O4Ca+cVGlNsdpJl
Zg3uzsvMGk5XEXTaCcPQ5tSs5u4kzANl1hgjCwCv8N0xi4jXdyemZlGZxVQF
+e6EMsu4O7VEZkq0XJytm4XGYquix+Lu6K/zFi6sDO+3lNkapSrQd1chZkNE
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
CtaDJ9Cd3XfXHROyFXWgMtsTgxW26a5t392BQ3MXzAeyrqi8I2U2CApI3G1R
6E5vVYTD36qQTXcxWzGm0Z1uREEez+HukjIr+rIQ3Zl9dyJVwSvvUpsxb+mf
RnS3z0J3aauCa7JhAUqmKgRxN8Pyj95QBeI6b4mMitTMOpTAI2lopxtRRGYW
THdFsMKsQwkYTw1VGI0orMS4ReLpFpTS5uEmNvvKs+/7zEPNKbHPPdK95cDv
le+ucSx76bUrbnzgBz/+5Uh9KkC78Mm/cffyxgd+5YdLwxcwuGfPshUrmgze
tkMhbfGj36wJfCPtkQVOEtCduTZ7HtZmZZtxwngJ3cnKOyxF0X13EeAZxN1R
iFTrPA7dMlCwItN3dyBSzUNxLhlSFazvjgDeXp4oz/ruElVuFhpTZjbTdyd8
dybSa2qydcbdDUSMtw367jAn277vjp/o4tkvbVV4mdmA7sB316bvzuTuvFQF
Z/BqWpkNR9eu3YuWL+9GUkJ2c6ULGaQqosVoxEZ33tqs3WbMlFlG2XWJUK11
fVc9GJmrfwAb4vOb6K6G3J2X8UQsZ0G7gH/svjtvq6JkbVWIvjsdpkhvqCUy
c2c204iifHeMuysBRWlGiXUCpS1HWjJSFZLQ60J4xn/KFK7hm3SZVEXNeK8a
W8k0ouRTFaVRRnQHdFdmjSgGd6d2Zu1UhRBnU99dNTWiCO4unTr2Dc9fvBjU
WDtVIax30HfnN6Jw4i6TqkhLZEDfUd+d2YgiSlFwTDyfqhgMNfjQd9dRI8oE
KrNTkKqY0KmKTrg7c2fWS1VgI0q4amPfndmIQkUoOENmpioQ44VIhQB4ZiNK
BHjnCdpxgGenKmCJjAVmTd8dNqK8bYmzjeMLt8/79aMbtuw49KHPP9oAY392
+YMr17ym1ysuvvnWP1332N333PPgUxuJuztz/mJg/35639rwNSxfuXLn7t3T
5974xI1PNx7/15tmNd4W6LQ5NTs6vnHzvoWrBh55tvunD6775k9XXv/tRf92
65z/ee0TC1cPIHenG1F0qgJ9d2MFtIOdWdaIcgZ8d2dM4i6iO3fiRPbdSe5O
VG1PiVevmaoQDDbvuxONKDjfPC6IOzNVIbZmou8i7dGY3F1y54LvzkxV+DNk
yN1JJcLcmcWtbUxVJHRXQ9NdQnT5RpTku1P0neq7M7YqRCNKee++BYsXV4w2
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
eNcvVgXQde3t83/wy+Lt937u4X/67cobN26+sdSnj0fXrH104fIP3PxUePKn
bpp1uDYZNFnKUzT+nLO0/2PXPxGe86eXP3DLD5oVx393zePDI+Pxm5C2PNQS
mYTN1D9jNqLEn9dZ6iqMXsq0VcGXyE4FqM/77vxGFH5AZja23qklsqFJhu6o
726IL5GpvrvkuwPuTt5PicAs9KLYjSjiyGxVhFOHge6g7443otThMJbIcKuC
QbsqQ3dI3G22uDvPd2eesfO+O9WIUsXMLPruuo+PNtBd9/ER4bsLDB5e3VBs
onJg5O6EPSnRJiBysbQsXnaZ0d2i79RlGpanDI5OtBkLOMfHTNtgOY5YnCeo
AdaIjgyAp6GUxnuizZj67oQy6+zMslRFd+T6vMys8t0JHVmlKnjlXQbyWb67
Gn4brQLkGv8+K8RucLPyCYjWDGjHX5wi3dN2q0Ldv7jKLKUqymBkDb9ZJM6i
7w6NE6bvTlgvevX9nR+paJxV1vdveeGV9UyZFUtkSpndwk5fY2ZmtgNlFssH
WKpiW5GqgJvu1v014jpjq6Jd3x2OzKpjXPnubO5OL5HRXMW+JF01r32h787I
zDp9d94SGQG8SMIYU7NYaIxbFTg1WzX67rQ4ew7pO7CKsdY703cnWDuw3kGw
IqUqCk02KrMNmPemtt55e2SN48CRE+fOX/SQ3v1PbnrHZYlb++uvPHP92h4T
1zWOW0t9s+bN++mrpcbbH//58+Gj/vWmWbXJ08Q6Lnlpx7/eOIvq9e68Z+XQ
0ZOLVu9432ceqmw/2HarQmdmTWU2pirSoTOzkbiz++6OdJiqmJkR9F0nvrt9
cTsPG1FMcZb13UVox7m7tn13cqhiMKUqKBQfrXe8HElvVXCDR7FE5imzTmbW
SMuqvrs6+e76tDLbui/msmwdFRPvYKdxHpETymyPlGWlW7t5TRmpNbm7o8ed
vrt6AGaSjogcV0HfIa1nZWYRJVJmlomzFrQT3B3JuG23KvC9xvU9vcsDdQz4
de67SwBPojhtunMzsxUrM6tTFZV2qQrpu7NMd4TuzL67SoHH2rcZ+99G8zk5
Tk9wd538lK2+uyqJs7LKWHJ38v5Cc3fCeid8d6WRUa/N2OLu4h6Z33enoF1V
TM26qQpHmaW3123evGrjJjDatUd38cSlrXeyBgrNKp7vzlBmizbjJM7qzKxm
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
zui7QxSHqQpxq4Iv8tKI67urCDPDSDH+0vp9rKEyi7+MAtcBoSd9d4b7rsB1
xnmjUGa7SqHNuFeceSBVgb47jEsEINdXHYtzFXllVt8US4C3XaUqWoXGxVna
c9w5sVkjVUFsAMxVFPqsOXzpVd5RpzGlKgJ3B00REKwo0N2MoO8EYSIr72aY
Mqtis0Xrndgjixgv6Xdm5R11GjcOvUdGtn/ilzS0w81ZQd+RMhsAnuhFseMV
FoMnJNrFLw785WebOunHr3/yS99aGN7G4x+ue+LrP142a+Hmuc9vCRjv2uWb
zJrirz8x64obb/77T3zyk1d9/paf/fLWDRXzae9vme7uvGelXKZoEXeYFxYD
ZERviiIU6JxJadmxGGwBsH1uNNbcxYkKmpelyMwZUXYXDsHuhh5sDfDaLMzG
l6gXqeB1KMl3hyOzfINskhtZ052Us0Q2gZQdvD1OI7OI7oQ+m+77rKEK6kjH
VIVezwFo13rbMd0xZZY3oqAsm4IVyXSXW5jdzJVZTdz1VgW0Q2VWyj1kvavE
rYrKvuF45cLSBtmIUsaUq4B2I+yaKOx2pulOXFVLCpWhWBYv0O1aznKJ2qbS
xz+/xG9dVPZySRtkqE52YLojHKXBlanMdqud2czILEOAMngrfXf+GFnu3+J9
Q8rye0U/RC3O5tA1JJoNPJ9+0CTlW+hOAjz1sRHgsb479N3pMTIL+wl0J8fI
uO8O61CMMTLtuyN0l5RZZbrLZGYFwFtdKr8MO7M4co2Vd9E5LLk73OIJTyDu
Luu7G7NOpwZ3NwB34o3zsCDuBmA9HM/zkKqQpSg0NUv0nfDdEcCLPAPvRTH7
7mIjBHJ3QzxYYeizU9NmL0pCd84eWb71DmKzuhflNOp9uFaP7jvg7s4KSTGT
nMVshdlsDCReQnosXgFFx9hyPHnmQgNimQHVj13/xDd+snz24v69h+shZhvs
ef/rS82s6//45lwTtnVy/O/fvRT+X5+65ZmXNu0Wgqy1Ldum5s6EzXpeFsvu
BHFHXsqjXlq2yeB5adkZvTArViqi785YmMUNsqEUqZhOlPXERPNXQ+cpoulO
cHeYp9gF91ktIn2cYJ4lyxoHk2XxHpAvkQ2MSUVAN6IAd8eUWUJ3wnyCVcZ9
1ZqeIZOyLCQmeAOVsRfZoe9ONaKka4rpu5u/cGH38P5yvOJEjg5GZlGZtbi7
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
3c5t3eM711QMHF2ajbWs3YDMv3G47sHjpw94kOLxffHaDfDPqfx4HRFysrYF
5Z60/QiuG3OymqQ4arjunFpQTNk4p2VDTtYWodzZtmHZTgtKZe3qsGy9tMzC
FLiUTS0oVISClhVKyzJlRzV3Ua4NRShrujwPNXdgugvX+M9ODX/7/OjVt94C
u90z5LbFSMWqnIMoKoslxjEtyKY7RHftMeWECKfRPE/B9J3X1LKmu9haHACe
83ptFtJft3C4Avs9WJkNBN2gVE6Y7hDsRVl29N2t4kpFBuEuR9lJ5Z2x3m3C
r6S9KEhRLk4NgrXBipy1M9zpUlrvFqOebum7zWC9s613exHa6bto5uAst95J
sKLSd3S9g5WP1Xo3xGArg1evqtqn76ThOii4a9mKCu2k9a5hv3nJWZOtePnq
1dWXX+H1pmXwOslZuPWyFTo767i7La1XtN2Kkq0gdIfNxq3cGDaM7kaFSNYr
vD6L22TQzH8uJF7wohdtK0tY5CV44sEbJFpg8MYliw66KwzeRJCWdmmTzTKT
q3VIz3f5VkREtNiPXavefMZvjtKqd9afTyi0/69IWDuiOv9d+bquy44yFH5l
DDMUg9duoOzuw626NANr9+gRMcOQpGjLFEjcHTuvnWqyuExxJB+TSdauCLJj
CyXKshiVReLu0DUYI5DTPIVJy5o8RXPcZUUoI8DbAGtXZFk0JBeMJ3xdUiBv
0V0UX0bf9WRa9tkp452PP/ng4Fox8DTujpvuIC27OGmmu85KBZRCBGU2cik+
LbtHfAiff5G7K9PwdJpmHIg/nIarZhF02oLSWDvnH0vhjUM+hPSo7E7Tss+x
ONaj9VCcbQxhoe+yGG8rQuF/o3b6IbTLULE+1frSGE0coB3ZKS1+EziH7yV/
ZRHesRqqbW94NR4E02nKcldl9sS13sVrpTm9KBqeLUeAdR0ms8lZFGev7fTZ
4Y9/2tt7f7Wygiz23ZE+W5Oz2GyMx1XdrbDJ2azfWGNx3Gy8Be0GlNkxP2sY
A19ujB4h6kWheIWGZyf7jQXj1f1Z05Fy37QcM4Nnh2h1yeIbWaStuMLM0aL5
P3HiBUveU3biIdKreIkzp7uFVmX27N7Zc9zwJ2Q/P5Ff6ffHPEXj6wTRRdaO
3IxP2GhXWbuYoSiM65MnWn4SE7JtkwJZO8B1tjcbNikS1u4esHYxMOtzspnj
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
Dcz+GrLuObBfAi8rp3cWf8/xH6W1xpQdbkRoJzybOx4Fe28gL2OyFZaPdW8S
977K33XRMxCsd+y+C9c76/C2B+6O0B1hPLZGhPzs8PsXA17Mz1L3XWP8xmvA
YNlViXbJ4uxWsxU2P/v6u+/+5fqNg4j9ot0uHDOz/KyNV5QL8A0MWJzFW6/i
GBfKdv9lZqC7YcEsRHAWbZHB66m0RN/FMrE2ZqEMXvXgHYHKpv55ceIxHqiA
ocPgJVot4r2eK8/LtQU49ZGeap3o36OkRr+JhbRUe0+HVwwE46wW4nB/6q+L
7cS5DtsWY7PeG5uKxdqTo8jXdYk7F6CQAVmFeei1O5T+E8va3Ykc3aQsm/Wf
qNUWZNmgyWK7HdrtaFK2QDt23CG042q7vAXlWrwW3g9NUxeOu125KCsmlbXT
PMX+evv711//9O7f0XGH54WYpzBRWTzvWBcQ1dxV+KfQLku87kEJ2Dx2rs/a
ETtHNXeM99CjpWSR1Opu6H6AKEZzRDCjFJYRMZOJCvC59bDZnHsuy/XpX0cF
uXJ3TZkteG8R/5n1CRnuXAASzkYr7PO/XDumriC37BVUok9ot+2epK33UPdn
fdZSecMnaPh8uWoU475rnxqqvOvrsyjOjsNkJ+33p1Wy+jNr9924PwscPnF3
dptsP2yTBYlhH1g71GdXX3195fev3DhZ87Vt1GfJfbc7nI5aLQI8O2BBEu3N
HVpL58kU4xUnj+qznrvbBn0WlizYhjeSeKrPno0tx3iKFPqO9dmBxMsw3hfQ
l1LMVHaXtoMNWKslHo8zF4HHY1eer1KBPhCDiB4ZRJfcjE5aGpWfhHmvqp+a
r3soLkRCxl+Pm4c7bc/l68eu4cTosFnVyfyOYjHaVdau7YvtvJpBja1vKojH
hl47m6Hw3J2kxbHru7J2h+WzY712rv+kcXf1Q6r9Jw7anZV2u4buoEnJjI7R
nqwydZ19iojutgfOd9cE2YL0nh2fC3EX5idAT2HHXTlorxefH70C02PLmJaN
xN0I8EC1CTV3pMlax51Jy57iGa27T9HOj8iKhDZjxYe0Pjagu6XU3KmhDjrx
mMmx4EH5Iq25c1JjYOoQ4VQIVGTZttxqm+7+Ez3Gl70httTN2Sw5a0tg+rsV
RN91pNj+dx1316Hv2qfAwbbkHRjfn9h9Zy5Amjjrval74UpqjRSfvbYaL9NC
8d26gkb0XdQfuBwxXvtbNTyLV4hC362X4x/XwYA3g7577Z13P755yzqQU2W2
js9eZn82JizOSJTp5mfTjhQx/yh99xBXaIcUbZqtyBk8W4VHFEpWRAZmvMDg
USFe/aKCBEQL98Kt7+SP9SnOlZchPYP6cmbvq4j0cBRD75+JDG2+Q7Mes/VW
e8OsROQ5oeGkyq+dhMuxw3X48rkMLLcgdtRYuvX7ilN0J+/2ukZhQrLbkDRX
ms5RdqECRcwVvt2O9mRvwDJFFqboJCky7s477uyRMGlBiauyob64XGWHBuN6
Pf7qm29+enhIsiyydis4o2kLStdxF7gFkmWFuEv3Kazjzp4WO7IsECl6smbV
lRYrXBIzsEA2iUmOu8rdoeMOoV3loyaJu1Ug7v5TkYpf3WkMLXyQrcDf3+Zk
450aP6mjFb3Wuw4jZ2+I2/FhSbbCvUvdrbOispR3srLZjX87DX+s8qtyd2TA
Q+4uoLVKCYr7jrMV5edr9x22o+zHy0mbn+30G6/uffXS1asHO/rOelTy9YqG
7lSiDYdok4Nrh/db2zO15WjRsU1YdDSj4gOP6+c7+o42NBHdhcHNyy1ZtKYU
rSarKu2Rb02xPJ5pwwO5tjnxOitmpiVPFFu3eeF783owjxRVYNIm0FqG3xLN
9zIoTpk640tsSdiwNJEiuiwV69ITnZpiyNe4DIUweKZ30TbalT96T2miyUZB
dkB3pU/Sfr763cXZJoW9ssPjQ4F5W3TcXSDAjcV1s2Yp4tFsW9DdmlpQKEwR
0Z1pQalHYAxZtOP/0fHLr766j8dzuN5PNdnTNky2iP0MqslqC0oj7mZospG7
M5tiM1Xa0fLkzs673y1TWg07Zzm6iu6CXNg8Y4FxUuIuK0KZLcu2UENWhPLr
NdnL/l102WmwIrtFJrND3201PNsBb9SM1wnCCBpk4m6vZBOyS4zOxUW2Oav0
Ham0qLTGT5zRZ9F9R+Isd99heDa479o2WV2eRQXWZSvwW+vgvtsxeN12lM1r
b7/9189uk37RZ/MwP0vQbtBn44BFc9TE1cimz7IHzzXguYIUxnih5Vga8GAx
czy14aqm4+4E45kxi8qlmD0Ldk89/LlkaStvc44ADxm8I2HwkMezWqFFIKoz
2s2L6d68rp6bknvhj73l1r66qlziDIz32DF14qmTG1Bz9GQ2BnWmy66+rOC0
/LkEY8fOky5rV7Gcb7TLSu0AyzWvHbZ/A5UX+k+IuPuMNVmfYTdLsq7/hJMU
u+5iClNQTjZ47cBlV0x3qRrr7HZmnEIqUEyeQnfHyAgNNQgXR+xX33rr489u
V48NEndScDfQGlWpOaVTievg8vsU4YxGIYt4WlzGB2SsyN4J/MVyet1jTTaw
dqWbAliacH5vnF5G3DF4WPMjc0zSM91phLbgOts0UnuD/yN1KL+K+osM3sDd
xWDIw6o7Z5HhZXtCUM4WcbYweOGZTyD6FLOndG7G9MK7kbBZzt1hL0qK7sLb
fvhpza2H2qttR8HvtntOVJ/dfcRS953x6C7hyjHTZ5fA3XXcd8rgLe99+dLV
q9dP1orlLLrTC+eA8Vz9XfHSbGKNFV/Fu46UDZwveu47TVigSltJPO1ufXa+
axjvoePxplK0xKt83i2ywLTFUYjT9tZpEUgQosg6kC2bN4X0HteYrWq4l1VF
+6rul6VA2CNJNwQ2j6+bQnSyNDGpwN6TVyHz19Uyw37nyQDzkMvt1tkFNTZA
O/f+NAlZp88Wr13zLdwWaGeVWWuT4GuxbbtkI99FtdvdABtG7S7uCbK5Jtt3
3I1fJB13TNytQ7tUCbsF7m4VNdl9OHpfHPy/aMRdcFDHLqwG8E5aVNauytL5
haKy7dzEsM1Pj4XHJEyI5z0McVcplw57E535OTDIKb7m58+KUDousjncHTnu
kLsj0uz/C6Jbxa/pd4vQbpb7jgvu4lMX7nEMqlNjzSsraM2+9P4yQd5pzX1X
Z2cJ6UHbNntKHX3HTobhcxEcpzFhgejO7lZouXHuvgvd5ouTcOW4gt5L577b
qGlkyn33zkc3bx7IBe+k+w71WXXfDRiv7M/iBO1m8NsUW7VbKEv02UkG77bd
KeMV2jPCeK0KrxAaUaUNpqZkjpbOwr2bqLTnSNwlSM8ogFUf7O/VHkeujxfN
nCtP+b2Kmp6D0+tjswnvX3rP4wTLZblXw9dluE6HJyyPCkWFaR6WkjV1gQJx
XfKG4R0KxXUd1g7/WDMUfkYWWLsE120z1g5jFNZul2myIMhywR3EaSUn2442
KWWn3B0Rd8PqxPCY/QjwiLXbH6+sw8EWc7LVcVdA2vbqG298cuewFtRXno2O
9pksaykCkJBMpi+cqk7o1pNlu2dM0mr7XSj2znZ+j/a8TNdjFohYPunoaChF
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
q4E8hVNqfK3jtExKXwfvIXnwoFKKQHc6RQs8HvEhuqtFxOO5qrMF48mSKZ7V
KV3MpFYrHfsNAm6i20rsF2A8j/eiPXmmgxq2jp6/5QwN2/CXVqXVEqEaJwOK
QwXW6bCiy7CuTtwnbnTH2OP++slZ4uT6BNbumP2l0TJHQjtb+cRkKJi4U6yd
w3UhlmNoZ/67GmftLK5DaOftdm5tCzGK/qmvnjzdu359vu0nazBYYLebxKyd
dOAgtLNTg51lBr5uP6p/ouamgLiDZx0BSI67feoqO5whk9tGOTqW5DgqO0rc
RR0WFLR75WTZ4sT7s1i1xledl9prBWidrUg2rmxsuTubvAiyFbIqDtN32+PL
QqleUc4GUIuZKG6ZUVmM64L7CPeoRZa6PSs7Byu1sL6x12chP8sFUhSDt9lu
fcKirEkjfZZtJzRa9gkLxHhlmP3o3r33Pv74oMTZYn02qYEgauL1rWZ9L1rZ
yULWwaNax8eYopUYr4HB8yqt1Gqpq8UrclJ5Bu8ZVD8e1Wr9Y+KUGKVEHJTB
dWP8XuBY0/69MeTGKC5CbuL8CTuXMHXu723i6BA8x99/9dQNyJz5uqdE2flq
J8PF80QRd5ieaKl5kmdjibU7pq02kH0IN5q223E3CsPaiSRFyVlESI/rn5SQ
bF1gertdEWSL3W4102OdWwWvC7Sb//r76xXr7J8/1TqibjSuDFvFdcYto+QY
t4p3jjuH0zxsc5yen8jK2+mcrOMxoswscSOCndviQMPAOH2tTM2So2M9bkJR
2amHFqHjbjpWCAXVyTnUuBvNU5wFX71VXB8lSnxjMq5sTL673ei7qUV3MaNr
risO49CSwV+ipXVFXbmY3HddPam7oIqzrjeZv8tcmqnqs/5VUXsyna2o+8P+
s7lEO2gKpkAKmO7qaYOEBfawqAkL58E7OFqeFHI/PBReaFUHLzHj8VwgW5U5
Hm87oZiExcOBwbNB2rBnGSpQsmeZrJeS1E55TM3cyU+FlfGqH8/7sjYOHgh2
aLRW3ggrxRpuA9LL/WxtCY7szPL8ybuHHF2ntyorXYjlLE42HF2kzNrfSLF2
x0KNVS47Rc2JpUTK2kW1u0WXsZKNxRXQocFya9eHouC6+2nJ4rKgu69uczcU
uBHDoLvRhGzccQydKsprJ3Ky86P19du3P50vSluKwdJsFJNh8B8G5CNfuNjp
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
RZQdceBGjcXbjSm7RI1Fvq6j2r7+5tv/uXz5k9l8O0qYcnYTLlYM2dgSoPAZ
ipimc6OZFGQdcSc9zIWyIzlGHdk6/o9kY7slv51ixucmO614YznHYyV9Jw3t
ZlYNCtw5AW5qQ7KCuKMSKHb/m+479mYSr28/iovRnXffVQPeGFvrcH6sz5ar
yOuziojTG/LS/CqbodAvV/eaj9DiTR3cv/6xOdIOL1M4eRlnulFx32G8sopU
9B2tYT3Xp8dJR9BVxrLLDtMBRxXjFQYPonYo5q5csRSeLwqPF3AFW2HoqPaz
WPT/rk8qLVy9Mvnue5afynyXTYhlxsQHbV0tov1yrr8/lqMM8xek2yb2vATj
nU7VDRx9Ixgs4tl4D55/wLS7Sa6jWK4guhF0J7Dc8LuY3iWGtUsQXarP+tcy
6hP+utWaqxPnuG6+dEuecu+4ezBDdxiPhZ09ZTesDVfTl6uP9/cvXdmbfP+D
K3vCrF3P+AGuQ76ujDCTYslTCdnyL7N2CQ4kEdb67kZX4kuud5quzfFIcVjt
ScE9yKQUFXvR16OsHZ55atGgzUpITXbDmuyUcrLQT9a3lHUoQqKLtxz/nO/5
357PafvP1lSLiVeA+y7fUtOmsnTSwgSBn7rssxVQcAfxyw3QouWVWrXF9zvV
SOlPbpaW8SjBNVImwQgGK9ZavgmPxNHSAz+Vs4iq4dX6VMM4rxb46IvOMF4Z
1WMzHu6vSO81tHs9p3z09f7iaBUxeMJ9xzBvSfPp7iot+68OMmZv7XCCwBhp
T9tTQ74zevlaOLSL2Mb/lnXYOWIE0cEeRmisvQY8XthpIrl+Qly3XFcp1mO5
sK0YRYc4FRv2jS3LK1XwhFdt60LLz3/99/Vbt9798M7i9+clY+VwnaPsXL1i
UfnErkN9Iixg7Tgey9Zl7bXzoz2hQRi9eZkPXJzAddFcoFi79aTahPScxWQF
z4DRjMmob9z6bkOyzNGFRW7jKih/OfyTn+S8ztlSi++cz89IzzF4RpytyrvM
zzLAkwwe5mcnSwPwcvzGrJ1c7JSk+XCjRQjQ3HTDysg/VccEXq/pzoO6T5kb
Xsz5zRpTD1aI7mwKTOcs3JiJPF7h3CZHKzcIa9vMoNIqjGdAIDmrvVAbOPFq
CJe12oM/Xty8c+fqe+/Nfvm34y4kzFsM+NCju+18egC9nFrm6BbU51idggM1
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
4LXlu1w+Ar27GsanzhtbP3wuRtPWGwM+NNZONOm5Ub9QIRLNKnhn6xqtnJqn
59WujdAhZuOqU9oAwBhGS7y+8CTgc7Viyi2ABJi3FexBFz27bKc//vz+p5+9
/MYb//fsM6+++dbDz744/fEnqOYVdciQDNf3LAFKXjpFW4LZu75teDhPaN4+
z89enfloX+ExITfMcvKopkYnFr3xLIe57vLf2bffvTNfvPDqK1c59wcPT/71
1ZVSp5bosWOBMsqQ/XPu+7+ZPaTu3Dp1Iq/X0TsuLdx5vU7RnZHpxlINyXXS
BY3zgr2DonodG9gC54nHy7HvDZQ66udZBGF1QTghe664rrTNuhDNZ1LI+Ijp
TiRklyZrdsPPpDhkPnlS7TZ9a5PTL/KdWiBljfqkBjmj4C0w4wGJD5EbVvCa
uVo2ahOvlUHvl9z+jYoRs2qTezeswfNeF37KWZl463K1Mh9KfHss4jlZAB9r
lAQlVqCCIlCPp2Mi0D0c6aFcrUy2yk80xxq0sHlbnSWsQlCg6X3y868f/v3L
199975ITXnjllbdO5rNvvl2SvK3fMg8zlfAtwYFSbfPPU4tVQajUNewnz3Au
3m0qckUaXdgrEF2Z1iwJ9YmbPrD8+dePvvzyakmT5+/cffnltz7+ePb118sz
qviVDubF7SrZaZZbjKS36dgnIhUbrV/nVLU4l+rFOlhf51U7LdmZafsiC2CG
kNbtONfkkhSQ65x/azyHQlgotXYR3V0zYXv2qw4B7YxtoNrNAN2xhKyaMeG5
LkjLkkmy28ykOHY+2W+GN94n/1nHaN/3IpefpXQXFOaxW2BhGc+maGMFz9/X
5C11q7L9oYJXuU6tdVzHtjhFi7IVEROOBTDeq7OjaCWeJkOYndFRQKV1koqB
izga88S82rnOTKnHmQkNxIT+3MyLi1jNE3lbFfQR8jForN8FgsfVSsjffPf2
yezFV15+5s5z14LeZ8v/fn+KkQbmIu35G1bhsAfZD1NZa/924+SWpTiuXmKl
rvXrYI3uipx/Ozv56uurH+XVV5957tk/vfXW+5c/yg8/inzooNQta/+xep26
HZxGx0YlAqJWIxLYPGw8eyK+0cw9Ox94Cd+PwIcU2Q1odyob6ybvW8cS+zfg
7shMDeI/h2ysc4Axtq3FGB8QWkbNy6l2m5ii8lMLC3UXMzJ7os11Vb4rzxfw
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
H7z0+uvPPn/nkvfuvfbaGw/ef3d5+tE//rH47j+f/Prb6QquO5flNKawLR2w
sS3+/Dm/EY3ubLX88adLYPvgiy/ePpm99s47G5a78+KLr7751psfnXzwxd+u
1LnfzxBvW6LzqVhZk0l7b6uybj6Skp80YWdP8CTsLPWwCb/Fnm3EdWMdoL+d
rYLXckFa35MTvqibwv4t5fGGSwprXVAJtPTPDPyYx7bRIa7TcwlZLNnN3D5B
yANviVQsKrSLcrLHwg9Pyv7t+Bb7te9HCmyNFFMq4OU72KW9gheIeKLUAaRo
6z27suBna2KzCp70GLK6QzIkG1Fqd+cHqnouLatd4RlbNduiMYtW85jOs4gp
GwkRr0QWEyLzpGdDmNTxzldjQV1cmCd8fjNji1jUlOcZ3hvztjVjq9U5eYbY
vj8fRjUZCpLI98nPv8y//vbhZ5+99fHJa2+//cLLL18i0CXyvfDqK5f/vvnh
Rw8++eSjL/+x+Oa70x9++uS3M09l8vy9zpbfkj//+tbZ6pNfflv+7/vZv7++
pLh3F8v77z985c9vXtcfPnvn7t1Lgn3jwcP3LsH1yy8X//nv8tczztJiBoR9
Ph34TbFS1yQ6A2kuDxuvXxfkYekcczKGknqdsQM/QrOZv/dR/VuR7Dwuhr4F
ToydWX2P0h2Y30o/y1dcr52/tfIaRDUq30HVTr8rotWFBzwRwmx5+dxNKgye
JCvXPxFF7yAPe8j8cLz2j+U8b8K+eQTtwq+Apx9VFtfgsdEQWibFqd8JBS8W
94h8lxwVGt8l90eujHEX8Yqe8SateGz9ZI0RpgbPURPRBgMdL0C4lgWh5vl8
K2W8Ov8CHoi1F3eqkvGY8iM3ak1v0yzpeRppNctFnqAoTZ2tT3/6Zfbttx//
458P/vrpm5fU984791577bm7d//fM89cUtPz9+5dUtMl+/35g7+8dTK7xL+H
n39+ufPJV/9efPvdJWstf/zpk59//eS3309/O9tc8IzSuKG15W9np5fA9tPP
i+9/XP73+9k3386++urDv3/5/qefvrtcvnVy8sb7D199882rh/O+UM/nlTfe
uKS4t+fzyzO5Oo3//necBDFopOV6+vTueHpr8VdpsPLnM7+IGonE+X2Qga2v
U0R3pvq/lK9p/1e3DNAYdbEE0eu8T/DZWOYfhhGTfg7F+QpKdoTQgH+z3kxV
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
4jo31vYTY5e60sa7+l2Eu4OIX93+Xu3v9wy7/Sdrf3Pjb+5xvVgKGPEJ14HX
xINzac10WukPkY7XzmIwEW8mPbDw5NIzV++dpTIZI9bJADF+kI9NqtAIRrQw
Jga0MNrXuVqRvV1L3jO1cDDKb6fsgdeESXzlXmMWgzhnTkpxRlXphOM+K3Zs
y77NLzfPv732SJhjtdaQnUkP2zU5YmENEt1gPy3TtXu72X/zmlXWeZyDfBiP
qrBqt6L+Qe1j2K+SG88siEFo8XsZ1W7uAE89WcypdmjNk7JDZbzi5Ms+Rx2/
uv3eepvaTos3EC5iaXQ8nqJNMp7Pz+YrVfK5Wh8C5ny1hOb2bRuLgIQP6afn
Y7c8SjIeDvENDEiQHuUZTSyGT+RRsUY3+dM50sSZ023spxnVvovmscY24y/Y
/KXI4Su3vh9ksMDy1Z5mosSM3IAzy2DVgn499RazFvJ3t8nGwlxA3gux2RNs
YqzhOq/a8QQKXOigVtntnpPt7fa17YiRHbUvIu32b8I+K8NbiplW8sEWyMMI
xQ+lGNhMf+/TmLc0DlM+o3Z0zgjz/Gi9DrrX0Jln6G6uA8rcbm83Ht2Cj5tA
ejJvi2rzfEzff4tzjmDWxkSmilluyyznY7CfUzsnZLHT7K2b/PV9l8vLgPVe
yPdqX+nK7h0GXdJ+vsoCCONStdO75aDukZwVS4Q7qtTNE7NixRwKnJAtPnmp
nzLZDBa3I351+zed891v6/afrH3Z/DNrhP6fmmcRk55nvPyM2oaIpwEvHq2n
SexiFikP7QiFImM20mUYD2br6vonuVkYcY4ymm87vjvXp8TOkM7a8MRFqsvy
WtmoEOK1RJhymM+37uv845aZ9dyyX9U5Tv5RU/Wo0aMlzN3hexQhsfS9qe0n
71+bWvVoJ2s5wlQsEOs2h4g87MWcAJ5JZJh91MRY8WSxhX+yWOU6mo2V/vyJ
x5du/8naP7Tz6faflH29FB7O0qIZtX8UH2Xq8ZpZWq/gGcwzsy084C0YGeai
CaZBvaWoB7BMLhOthP4AIlS6MhCQobGM4juLjFEON0aOqYfkyWRCdV9mi3t3
b/aJ/raveR/xVWrtZn5fS0dNpc7o1fHNwulrrftwfYsRXVJXB5Vy/IZieh0S
66z+likgEf4HDGb9gLc5KDbCnX8CxVLRnU3H7L7syfHGr27/eM+q239s9iW5
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
    "], {{0, 828}, {842, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVlwdYU8kWx+eWFEISSiACUkJvonQCSO+CglTBRkgCCSWEQFAQu4sKrgUV
C1Z0VcS2FkAWFRG7IqBid0FFQVkXCzZQ3iQB9Pnefu97wzdzfzn3zJn/mZl7
uWOYlBmZjAIAssmwieTM8pFIOHlROPzhm5fDT0IgWKjABqhYcMTidFQVgAxR
jiQyyJc1JT6BRfoTkOGfKmAANoebLfaJiAgD/1g+tAFZQHDTRhbrn/3+a1Hj
8bO5ACARkJN42dwMyMcBwOlcsSQHAEIjtBvPyhHLuAuyhgQKhDwg4xQ5E1Vl
nKRgE7lPdKQfZDYAZCqHI0kBgO4P7axcbgqMQ+dBthXxhCLI6yB7cgUcaKPf
gjwmIyMTsnxyLJJ+iJPybzGTRmJyOCkjrMhFXsj+wmxxOifv/5yO/10y0qXD
YxjCShVIgiNlOcN525KWGSpjKuQjoqRJ4ZDVIdcJeXJ/GTcJpMExQ/7t3Gw/
OGeACfk9j+MfClkXAJQiTYvxGWIzjkTeF/qjvsKckOghjpVkRg7FR1NF6ZPC
FHHQAgE/ZJhL+NkBUcM+ycLAEMhwrdB9+YLoOIVOtCZXGDsJMh1yY3ZaVOhQ
39Z8gd+kYR+JNFKmGa4t2pUsCYxU+GDUjOzhvDAjLkc+lhZkxxxBdLCiLxbG
4/sHKMbFpvBFMUN6MIE4xzdyyD9fnC7f3zJ7CT89SGY3grw7OzdquO+FHLip
FLljbamcCREKzdhLcU5E9JCeTyAM+AF/wAJSWJNAJkgFwqae6h74S3EnEHCA
BKQAPrAZsgz3iJPfEcE2CuSDvyDxQfZIP1/5XT7IhfavI1ZFawOS5Xdz5T3S
wHPIGbgO7om742Gw9YbVHmfjrsP9WCrDoxIDiP7EYGIg0XJEBxeqTodVAoT/
xRYKr3yYnUyLaDiH7/EIzwkthCeE24R2wj0QC57Jowx5zRQukvyknAUmgnYY
LXAouyQYs3vYBzeDqp1wX9wD6ofacSauA2xwR5iJD+4Fc3OC1h8VSke0fZ/L
n8eTqf4xnyE73YruNKQiaWRl/Ea8fo7i98Mc8eA19GdPbBl2DLuIncUuY3VY
NWBhZ7Aa7Bp2SsYjO+GZfCcMjxYp15YG4wiHfWwrbbttB/5jdM6QAol8vUEO
f3aO7CHwyxTnSYQpghyWD3wL81khIu7YMSx7WzsnAGTvdMUr4x1T/q5GmFe+
27LqAXAtgsaU7zaOMQAnnwPA+PDdZvwWPlKrATjVzJVKchU22b8UQAAU+MLU
ANpAHxgDC5iTPXAG7sAbBIAJIBxEg3gwA866AGRA1bNAAVgICkExWA3Wg81g
O9gF9oGD4CioBnXgLLgAroJmcBs8gHujE7wCveAD6EcQhITQEAaijRggpog1
Yo+wEU8kAAlDIpF4JBFJQUSIFClAFiPFSAmyGdmJVCC/IyeRs8hlpAW5h3Qg
3chb5AuKoVRUA9VDzdBxKBv1QUPRaHQ6moJmofnoEnQluhEtRw+gVehZ9Cp6
G21HX6F9GMCUMSZmiNlgbMwPC8cSsGRMgs3DirBSrBw7hNXCtb6JtWM92Gec
iDNwFm4D92cwHoNz8Sx8Hr4C34zvw6vwRvwm3oH34t8INIIuwZrgRgghTCGk
EGYRCgmlhD2EE4Tz8NnpJHwgEolMojnRBT6b8cRU4hziCuJW4mFiPbGF+JTY
RyKRtEnWJA9SOIlDyiEVkjaRDpDOkFpJnaRPZGWyAdmeHEhOIIvIi8il5P3k
0+RW8gtyv5KqkqmSm1K4Ek8pT2mV0m6lWqUbSp1K/RQ1ijnFgxJNSaUspGyk
HKKcpzykvFNWVjZSdlWerCxUXqC8UfmI8iXlDuXPVHWqFdWPOo0qpa6k7qXW
U+9R39FoNDOaNy2BlkNbSaugnaM9pn2iM+hj6SF0Hn0+vYxeRW+lv1ZRUjFV
8VGZoZKvUqpyTOWGSo+qkqqZqp8qR3WeapnqSdU7qn1qDDU7tXC1DLUVavvV
Lqt1qZPUzdQD1HnqS9R3qZ9Tf8rAGMYMPwaXsZixm3Ge0alB1DDXCNFI1SjW
OKjRpNGrqa7pqBmrOVuzTPOUZjsTY5oxQ5jpzFXMo8w25pdReqN8RvFHLR91
aFTrqI9ao7W8tfhaRVqHtW5rfdFmaQdop2mv0a7WfqSD61jpTNaZpbNN57xO
z2iN0e6juaOLRh8dfV8X1bXSjdSdo7tL95pun56+XpCeWG+T3jm9Hn2mvrd+
qv46/dP63QYMA08DocE6gzMGL1maLB9WOmsjq5HVa6hrGGwoNdxp2GTYb2Ru
FGO0yOiw0SNjijHbONl4nXGDca+JgclEkwKTSpP7pkqmbFOB6QbTi6YfzczN
4syWmlWbdZlrmYeY55tXmj+0oFl4WWRZlFvcsiRasi3TLLdaNluhVk5WAqsy
qxvWqLWztdB6q3XLGMIY1zGiMeVj7thQbXxscm0qbTrGMseGjV00tnrs63Em
4xLGrRl3cdw3WyfbdNvdtg/s1O0m2C2yq7V7a29lz7Uvs7/lQHMIdJjvUOPw
xtHake+4zfGuE8NpotNSpwanr84uzhLnQ87dLiYuiS5bXO6wNdgR7BXsS64E
V1/X+a51rp/dnN1y3I66/e1u457mvt+9a7z5eP743eOfehh5cDx2erR7sjwT
PXd4tnsZenG8yr2eeBt787z3eL/wsfRJ9Tng89rX1lfie8L3o5+b31y/en/M
P8i/yL8pQD0gJmBzwONAo8CUwMrA3iCnoDlB9cGE4NDgNcF3QvRCuCEVIb0T
XCbMndAYSg2NCt0c+iTMKkwSVjsRnThh4tqJDyeZThJNqg4H4SHha8MfRZhH
ZEX8MZk4OWJy2eTnkXaRBZEXoxhRM6P2R32I9o1eFf0gxiJGGtMQqxI7LbYi
9mOcf1xJXPuUcVPmTrkarxMvjK9JICXEJuxJ6JsaMHX91M5pTtMKp7VNN58+
e/rlGToz0mecmqkykzPzWCIhMS5xf+IAJ5xTzulLCknaktTL9eNu4L7iefPW
8br5HvwS/otkj+SS5K4Uj5S1Kd0CL0GpoEfoJ9wsfJManLo99WNaeNretMH0
uPTDGeSMxIyTInVRmqgxUz9zdmaL2FpcKG7Pcstan9UrCZXsyUayp2fX5GjA
j+drUgvpL9KOXM/cstxPs2JnHZutNls0+1qeVd7yvBf5gfm/zcHncOc0FBgW
LCzomOszd+c8ZF7SvIb5xvOXzO9cELRg30LKwrSF1xfZLipZ9H5x3OLaJXpL
Fix5+kvQL5WF9EJJ4Z2l7ku3L8OXCZc1LXdYvmn5tyJe0ZVi2+LS4oEV3BVX
frX7deOvgyuTVzatcl61bTVxtWh12xqvNftK1EryS56unbi2ah1rXdG69+tn
rr9c6li6fQNlg3RD+8awjTWbTDat3jSwWbD5dplv2eEtuluWb/m4lbe1dZv3
tkPb9bYXb/+yQ7jj7s6gnVXlZuWlu4i7cnc93x27++Jv7N8q9ujsKd7zda9o
b/u+yH2NFS4VFft196+qRCulld0Hph1oPuh/sOaQzaGdh5mHi4+AI9IjL39P
/L3taOjRhmPsY4eOmx7fcoJxoqgKqcqr6q0WVLfXxNe0nJxwsqHWvfbEH2P/
2FtnWFd2SvPUqtOU00tOD57JP9NXL67vOZty9mnDzIYH56acu9U4ubHpfOj5
SxcCL5y76HPxzCWPS3WX3S6fvMK+Un3V+WrVNadrJ647XT/R5NxUdcPlRk2z
a3Nty/iW061erWdv+t+8cCvk1tXbk263tMW03b0z7U77Xd7drnvp997cz73f
/2DBQ8LDokeqj0of6z4u/9Pyz8Ptzu2nOvw7rj2JevLgKffpq2fZzwY6lzyn
PS99YfCiosu+q647sLv55dSXna/Er/p7Cv9S+2vLa4vXx//2/vta75TezjeS
N4NvV7zTfrf3veP7hr6IvscfMj70fyz6pP1p32f254tf4r686J81QBrY+NXy
a+230G8PBzMGB8UcCUf+KYDBiiYnA/B2LwC0ePjt0AwAha44c8kLojgnygn8
EyvOZfLiDMBebwBiFgAQBr9RtsFqCpkKr7LP72hvgDo4jNShkp3sYK+IRYUn
F8KnwcF3egCQagH4Khkc7N86OPh1NxR7D4D6LMVZT1ZkZ8gdRjK6brwU/Fz+
BVqdcYk=
      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{338.22734375000005`, Automatic},
  ImageSizeRaw->{842, 828},
  PlotRange->{{0, 842}, {0, 828}}]], "Text",
 CellChangeTimes->{{3.649893455874217*^9, 3.649893458437606*^9}}],

Cell["\<\
\[Alpha] - single-scattering albedo
\[CapitalSigma]t - extinction coefficient
r - radial position coordinate in medium (distance from point source at origin)
u = cos \[Theta] - direction cosine\
\>", "Text",
 CellChangeTimes->{{3.617428487341361*^9, 3.617428516514864*^9}, {
  3.62117873415422*^9, 3.621178738599084*^9}, {3.626744515152608*^9, 
  3.6267445586349487`*^9}, {3.627012891843924*^9, 3.627012912866523*^9}, {
  3.649256344957097*^9, 3.649256385822545*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analytic solutions", "Section",
 CellChangeTimes->{{3.627013027925056*^9, 3.627013030948131*^9}}],

Cell[CellGroupData[{

Cell["Fluence: exact solution (1)", "Subsection",
 CellChangeTimes->{{3.627013036155699*^9, 3.627013036987708*^9}, {
  3.62701331063284*^9, 3.6270133130703506`*^9}, {3.649259718336639*^9, 
  3.649259719232292*^9}, {3.650001074975786*^9, 3.650001075075953*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"infflatlandisopointisoscatter`\[Phi]exact1", "[", 
   RowBox[{"r_", ",", "\[CapitalSigma]t_", ",", "\[Alpha]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "\[CapitalSigma]t"}], " ", "r"}], "]"}], 
    RowBox[{"2", " ", "Pi", " ", "r"}]], "+", 
   RowBox[{
    FractionBox["\[CapitalSigma]t", 
     RowBox[{"2", "Pi", " "}]], 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"\[Alpha]", " ", "z", " ", 
        RowBox[{"BesselJ", "[", 
         RowBox[{"0", ",", 
          RowBox[{"r", " ", "z", " ", "\[CapitalSigma]t"}]}], "]"}]}], 
       RowBox[{"1", " ", "+", " ", 
        SuperscriptBox["z", "2"], "-", 
        RowBox[{"\[Alpha]", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           SuperscriptBox["z", "2"]}]]}]}]], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", "0", ",", "Infinity"}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<LevinRule\>\""}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.627013295305633*^9, 3.6270133031837482`*^9}, {
   3.6492066123681793`*^9, 3.649206619804143*^9}, {3.649206663304042*^9, 
   3.649206666622551*^9}, {3.649259737788108*^9, 3.6492597406095657`*^9}, 
   3.649260383663227*^9, {3.649260911843635*^9, 3.649260916691996*^9}, 
   3.6492727254667597`*^9, {3.649894526690342*^9, 3.649894527064891*^9}, {
   3.6498945705984707`*^9, 3.649894570917386*^9}, {3.65000334336698*^9, 
   3.650003344318315*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fluence: exact solution (2)", "Subsection",
 CellChangeTimes->{{3.627013036155699*^9, 3.627013036987708*^9}, {
  3.62701331063284*^9, 3.6270133130703506`*^9}, {3.649259718336639*^9, 
  3.649259719232292*^9}, {3.650001074975786*^9, 3.650001075075953*^9}, {
  3.6500033391328697`*^9, 3.650003339244678*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"infflatlandisopointisoscatter`\[Phi]exact2", "[", 
   RowBox[{"r_", ",", "\[CapitalSigma]t_", ",", "\[Alpha]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"\[CapitalSigma]t", " ", "\[Alpha]", " ", 
    FractionBox[
     RowBox[{"BesselK", "[", 
      RowBox[{"0", ",", 
       RowBox[{"r", " ", "\[CapitalSigma]t", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["\[Alpha]", "2"]}]]}]}], "]"}], "Pi"]}], "+", 
   RowBox[{
    FractionBox["\[CapitalSigma]t", 
     RowBox[{"2", "Pi"}]], 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"z", " ", 
        RowBox[{"BesselJ", "[", 
         RowBox[{"0", ",", 
          RowBox[{"\[CapitalSigma]t", " ", "r", " ", "z"}]}], "]"}]}], 
       RowBox[{
        SqrtBox[
         RowBox[{"1", "+", 
          SuperscriptBox["z", "2"]}]], "+", "\[Alpha]"}]], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", "0", ",", "Infinity"}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<LevinRule\>\""}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.627013295305633*^9, 3.6270133031837482`*^9}, {
   3.6492066123681793`*^9, 3.649206619804143*^9}, {3.649206663304042*^9, 
   3.649206666622551*^9}, {3.649259737788108*^9, 3.6492597406095657`*^9}, 
   3.649260383663227*^9, {3.649260911843635*^9, 3.649260916691996*^9}, 
   3.6492727254667597`*^9, {3.649894526690342*^9, 3.649894527064891*^9}, {
   3.6498945705984707`*^9, 3.649894570917386*^9}, {3.650003378455908*^9, 
   3.650003415832753*^9}, 3.650003530791511*^9, {3.650003566038116*^9, 
   3.650003572734901*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fluence: exact solution (3)", "Subsection",
 CellChangeTimes->{{3.627013036155699*^9, 3.627013036987708*^9}, {
  3.62701331063284*^9, 3.6270133130703506`*^9}, {3.649259718336639*^9, 
  3.649259719232292*^9}, {3.650001074975786*^9, 3.650001075075953*^9}, {
  3.6500033391328697`*^9, 3.650003339244678*^9}, {3.650003765070909*^9, 
  3.6500037652370863`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"infflatlandisopointisoscatter`\[Phi]exact3a", "[", 
   RowBox[{"r_", ",", "\[CapitalSigma]t_", ",", "\[Alpha]_"}], "]"}], ":=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     FractionBox["\[CapitalSigma]t", 
      RowBox[{"2", "Pi"}]], 
     FractionBox[
      RowBox[{"k", " ", 
       RowBox[{"BesselJ", "[", 
        RowBox[{"0", ",", 
         RowBox[{"k", " ", "\[CapitalSigma]t", " ", "r"}]}], "]"}]}], 
      RowBox[{
       SqrtBox[
        RowBox[{
         SuperscriptBox["k", "2"], "+", "1"}]], "-", "\[Alpha]"}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<LevinRule\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.627013295305633*^9, 3.6270133031837482`*^9}, {
   3.6492066123681793`*^9, 3.649206619804143*^9}, {3.649206663304042*^9, 
   3.649206666622551*^9}, {3.649259737788108*^9, 3.6492597406095657`*^9}, 
   3.649260383663227*^9, {3.649260911843635*^9, 3.649260916691996*^9}, 
   3.6492727254667597`*^9, {3.649894526690342*^9, 3.649894527064891*^9}, {
   3.6498945705984707`*^9, 3.649894570917386*^9}, {3.650003378455908*^9, 
   3.650003415832753*^9}, 3.650003530791511*^9, {3.650003566038116*^9, 
   3.650003572734901*^9}, {3.6500037678071737`*^9, 3.6500037946368732`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"besselk", "[", 
    RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    SqrtBox[
     FractionBox["2", 
      RowBox[{"Pi", " ", "x"}]]], 
    RowBox[{"BesselK", "[", 
     RowBox[{
      RowBox[{"n", "+", 
       RowBox[{"1", "/", "2"}]}], ",", "x"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"infflatlandisopointisoscatter`\[Phi]exact3b", "[", 
   RowBox[{"r_", ",", "\[CapitalSigma]t_", ",", "\[Alpha]_", ",", "M_"}], 
   "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "\[CapitalSigma]t"}], " ", "r"}], "]"}], 
    RowBox[{"2", " ", "Pi", " ", "r"}]], "+", 
   RowBox[{
    FractionBox[
     RowBox[{"\[Alpha]", " ", "\[CapitalSigma]t"}], 
     RowBox[{"2", " ", "Pi"}]], 
    RowBox[{"BesselK", "[", 
     RowBox[{"0", ",", 
      RowBox[{"\[CapitalSigma]t", 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["\[Alpha]", "2"]}]], "r"}]}], "]"}]}], "+", 
   RowBox[{
    FractionBox["\[CapitalSigma]t", 
     RowBox[{"2", " ", "Pi"}]], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Alpha]", 
          RowBox[{"2", "n"}]], 
         RowBox[{"n", "!"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "n"}], ")"}], "!"}]], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2", " ", "\[CapitalSigma]t", " ", "r"}], ")"}], "n"], 
       RowBox[{"besselk", "[", 
        RowBox[{
         RowBox[{"n", "-", "1"}], ",", 
         RowBox[{"\[CapitalSigma]t", " ", "r"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "M"}], "}"}]}], "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.6500039306672363`*^9, 3.650003997285787*^9}, {
  3.6500040777783127`*^9, 3.6500040820973587`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classical diffusion approximation", "Subsection",
 CellChangeTimes->{{3.650007125291225*^9, 3.650007128481996*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"infflatlandisopointisoscatter`\[Phi]Diffusion", "[", 
   RowBox[{"r_", ",", "\[CapitalSigma]t_", ",", "\[Alpha]_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{"\[CapitalSigma]t", " ", 
    RowBox[{"BesselK", "[", 
     RowBox[{"0", ",", 
      RowBox[{
       SqrtBox[
        RowBox[{"2", "-", 
         RowBox[{"2", " ", "\[Alpha]"}]}]], " ", "r", " ", 
       "\[CapitalSigma]t"}]}], "]"}]}], "\[Pi]"]}]], "Input",
 CellChangeTimes->{{3.650007131391655*^9, 3.650007161699568*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rigorous diffusion approximation", "Subsection",
 CellChangeTimes->{{3.65000762860603*^9, 3.650007632916854*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"infflatlandisopointisoscatter`\[Phi]RigorousDiffusion", "[", 
   RowBox[{"r_", ",", "\[CapitalSigma]t_", ",", "\[Alpha]_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{"\[CapitalSigma]t", " ", "\[Alpha]", " ", 
    RowBox[{"BesselK", "[", 
     RowBox[{"0", ",", 
      RowBox[{
       SqrtBox[
        RowBox[{"1", "-", " ", 
         SuperscriptBox["\[Alpha]", "2"]}]], " ", "r", " ", 
       "\[CapitalSigma]t"}]}], "]"}]}], "\[Pi]"]}]], "Input",
 CellChangeTimes->{{3.650007640709548*^9, 3.650007668561433*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Grosjean-style diffusion approximation", "Subsection",
 CellChangeTimes->{{3.591233786294387*^9, 3.591233792108313*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"infflatlandisopointisoscatter`\[Phi]Grosjean", "[", 
   RowBox[{"r_", ",", "\[CapitalSigma]t_", ",", "\[Alpha]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "r"}], " ", "\[CapitalSigma]t"}], "]"}], 
    RowBox[{"2", " ", "Pi", " ", "r"}]], "+", 
   RowBox[{
    FractionBox[
     RowBox[{"\[Alpha]", " ", "\[CapitalSigma]t"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "-", "\[Alpha]"}], ")"}], "Pi"}]], " ", 
    RowBox[{"BesselK", "[", 
     RowBox[{"0", ",", 
      RowBox[{"r", " ", "\[CapitalSigma]t", " ", 
       RowBox[{"(", 
        RowBox[{
         SqrtBox["2"], 
         FractionBox[
          SqrtBox[
           RowBox[{"1", "-", "\[Alpha]"}]], 
          SqrtBox[
           RowBox[{"2", "-", "\[Alpha]"}]]]}], ")"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.649273093435965*^9, 3.649273097566102*^9}, {
   3.649273132652021*^9, 3.649273148106318*^9}, {3.649273191337154*^9, 
   3.649273193622284*^9}, {3.649273264439513*^9, 3.6492732764494343`*^9}, {
   3.6498982387618933`*^9, 3.64989824952006*^9}, {3.650001178382126*^9, 
   3.650001181010624*^9}, 3.650003309109735*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["n-th scattered fluence", "Subsection",
 CellChangeTimes->{{3.650001121889347*^9, 3.650001125936187*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"infflatlandisopointisoscatter`\[Phi]", "[", 
   RowBox[{"r_", ",", "\[CapitalSigma]t_", ",", "\[Alpha]_", ",", "n_"}], 
   "]"}], ":=", 
  FractionBox[
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "-", "n"}], ")"}]}]], " ", 
    SuperscriptBox["\[Alpha]", "n"], " ", 
    SuperscriptBox["r", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}], ")"}]}]], " ", 
    SuperscriptBox["\[CapitalSigma]t", 
     FractionBox[
      RowBox[{"1", "+", "n"}], "2"]], " ", 
    RowBox[{"BesselK", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}], ")"}]}], ",", 
      RowBox[{"r", " ", "\[CapitalSigma]t"}]}], "]"}]}], 
   RowBox[{"\[Pi]", " ", 
    RowBox[{"Gamma", "[", 
     FractionBox[
      RowBox[{"1", "+", "n"}], "2"], "]"}]}]]}]], "Input",
 CellChangeTimes->{{3.6500011303768053`*^9, 3.6500011838674393`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Moments", "Subsection",
 CellChangeTimes->{{3.650041931458153*^9, 3.650041934948592*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"infflatlandisopointisoscatter`\[Phi]m", "[", 
   RowBox[{"\[CapitalSigma]t_", ",", "\[Alpha]_", ",", "m_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["\[Alpha]", "2"]}], ")"}], 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     FractionBox["m", "2"]}]], " ", 
   SuperscriptBox["\[CapitalSigma]t", 
    RowBox[{
     RowBox[{"-", "1"}], "-", "m"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["2", "m"], " ", "\[Alpha]", " ", 
      SuperscriptBox[
       RowBox[{"Gamma", "[", 
        RowBox[{"1", "+", 
         FractionBox["m", "2"]}], "]"}], "2"]}], "+", 
     RowBox[{
      RowBox[{"Gamma", "[", 
       RowBox[{"1", "+", "m"}], "]"}], " ", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], ",", 
        RowBox[{"-", 
         FractionBox["m", "2"]}], ",", 
        FractionBox["1", "2"], ",", 
        SuperscriptBox["\[Alpha]", "2"]}], "]"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.650042155560913*^9, 3.650042159202408*^9}, 
   3.650042622465407*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"infflatlandisopointisoscatter`\[Phi]m", "[", 
   RowBox[{"\[CapitalSigma]t_", ",", "\[Alpha]_", ",", "n_", ",", "m_"}], 
   "]"}], ":=", 
  FractionBox[
   RowBox[{
    SuperscriptBox["2", "m"], " ", 
    SuperscriptBox["\[Alpha]", "n"], " ", 
    SuperscriptBox["\[CapitalSigma]t", 
     RowBox[{
      RowBox[{"-", "1"}], "-", "m"}]], " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{"1", "+", 
      FractionBox["m", "2"]}], "]"}], " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "m", "+", "n"}], ")"}]}], "]"}]}], 
   RowBox[{"Gamma", "[", 
    FractionBox[
     RowBox[{"1", "+", "n"}], "2"], "]"}]]}]], "Input",
 CellChangeTimes->{{3.650041940750317*^9, 3.65004201148895*^9}, 
   3.650042612102111*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["load MC data", "Section",
 CellChangeTimes->{{3.617427964847665*^9, 3.617427965662361*^9}, {
  3.6174280073412037`*^9, 3.617428007556081*^9}, {3.640936210100869*^9, 
  3.640936211771452*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"infflatlandisopointisoscatter`ppoints", "[", 
   RowBox[{"xs_", ",", "dr_", ",", "maxx_", ",", "\[CapitalSigma]t_"}], "]"}],
   ":=", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"dr", 
         RowBox[{"(", "i", ")"}]}], "-", 
        RowBox[{"0.5", "dr"}]}], ",", 
       RowBox[{
        RowBox[{"xs", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "/", "\[CapitalSigma]t"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "xs", "]"}]}], "}"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", 
     RowBox[{"-", "2"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.649259548120679*^9, 3.649259580851676*^9}, 
   3.649259648546113*^9, 3.649272737713811*^9, {3.649872151012321*^9, 
   3.649872155817502*^9}, {3.649872287579906*^9, 3.649872295382456*^9}, {
   3.649873946236698*^9, 3.649873946606134*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"infflatlandisopointisoscatter`fs", "=", 
   RowBox[{
   "FileNames", "[", 
    "\"\<code/flatland/infiniteFlatland/Isotropicpointsource/data/infflatland_\
isotropicpoint_isotropicscatter*\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.649258997497517*^9, 3.649259056909771*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"infflatlandisopointisoscatter`index", "[", "x_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", ",", "\[Alpha]", ",", "\[CapitalSigma]t"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"data", "=", 
       RowBox[{"Import", "[", 
        RowBox[{"x", ",", "\"\<Table\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalSigma]t", "=", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "13"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Alpha]", "=", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "3"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", "\[CapitalSigma]t", ",", "data"}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"infflatlandisopointisoscatter`simulations", "=", 
   RowBox[{
   "infflatlandisopointisoscatter`index", "/@", 
    "infflatlandisopointisoscatter`fs"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"infflatlandisopointisoscatter`alphas", "=", 
  RowBox[{"Union", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", 
    "infflatlandisopointisoscatter`simulations"}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.6492592625325613`*^9, {3.6492592978251047`*^9, 3.649259344735507*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.01`", ",", "0.1`", ",", "0.3`", ",", "0.5`", ",", "0.7`", ",", "0.8`", 
   ",", "0.9`", ",", "0.95`", ",", "0.99`", ",", "0.999`"}], "}"}]], "Output",\

 CellChangeTimes->{{3.6492593340730467`*^9, 3.649259345386384*^9}, 
   3.6492728336816893`*^9, 3.649273048786715*^9, 3.649872047826997*^9, 
   3.649893114157404*^9, 3.6500036915248747`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"infflatlandisopointisoscatter`muts", "=", 
  RowBox[{"Union", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
    "infflatlandisopointisoscatter`simulations"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.649259354702409*^9, 3.649259356389621*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.6492593567324333`*^9, 3.64927283372799*^9, 
  3.649273048831053*^9, 3.6498720478446417`*^9, 3.649893114193157*^9, 
  3.650003691549798*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"infflatlandisopointisoscatter`numcollorders", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"infflatlandisopointisoscatter`simulations", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "15"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.649259364357733*^9, 3.649259369850224*^9}, {
  3.649259425898975*^9, 3.6492594278860903`*^9}, {3.65003919983913*^9, 
  3.650039207159321*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compare Deterministic and MC", "Section",
 CellChangeTimes->{{3.617428104753593*^9, 3.6174281129212646`*^9}}],

Cell[CellGroupData[{

Cell["Fluence - Exact solution (1) comparison to MC", "Subsection",
 CellChangeTimes->{{3.649259702897419*^9, 3.64925971462465*^9}, {
  3.649893943340941*^9, 3.649893948401101*^9}, {3.650003121496348*^9, 
  3.650003125748569*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"alpha", ",", "\[CapitalSigma]t"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
      "Length", "[", "infflatlandisopointisoscatter`simulations", "]"}], ">", 
      "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "data", ",", "maxr", ",", "dr", ",", "points\[Phi]", ",", 
         "plotpoints\[Phi]", ",", "logplot\[Phi]", ",", "plot\[Phi]", ",", 
         "exact1points"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{
          RowBox[{"SelectFirst", "[", 
           RowBox[{"infflatlandisopointisoscatter`simulations", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\[Alpha]"}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
               "\[CapitalSigma]t"}]}], "&"}]}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"maxr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "7"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "9"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"points\[Phi]", " ", "=", " ", 
         RowBox[{"data", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "divide", " ", "by", " ", "\[CapitalSigma]t", " ", "to", " ", 
          "convert", " ", "collision", " ", "density", " ", "into", " ", 
          "fluence"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"plotpoints\[Phi]", "=", 
         RowBox[{"infflatlandisopointisoscatter`ppoints", "[", 
          RowBox[{
          "points\[Phi]", ",", "dr", ",", "maxr", ",", "\[CapitalSigma]t"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"exact1points", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Quiet", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"2", " ", "Pi", " ", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], " ", 
               RowBox[{"infflatlandisopointisoscatter`\[Phi]exact1", "[", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "\[CapitalSigma]t", 
                 ",", "\[Alpha]"}], "]"}]}]}], "}"}], "]"}], "&"}], " ", "/@",
           "plotpoints\[Phi]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"plot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ListPlot", "[", 
             RowBox[{"exact1points", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"2", " ", "Pi", " ", "r", " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"logplot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListLogPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ListLogPlot", "[", 
             RowBox[{"exact1points", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"2", " ", "Pi", " ", "r", " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"GraphicsGrid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"plot\[Phi]", ",", "logplot\[Phi]"}], "}"}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
           "\"\<Exact solution (1)\\nInfinite Flatland, isotropic point \
source, isotropic scattering, fluence \[Phi][r], \[Alpha] = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[Alpha]", "]"}], "<>", 
            "\"\<, \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[CapitalSigma]t", "]"}]}]}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
     "Text", "[", 
      "\"\<Uh oh!  Couldn't find MC data.  Try to evaluate this entire \
notebook and ensure the data path is setup correctly.\>\"", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0.95"}], "}"}], ",", 
     "infflatlandisopointisoscatter`alphas"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[CapitalSigma]t", ",", "infflatlandisopointisoscatter`muts"}], 
    "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.649259789611609*^9, 3.649259851754438*^9}, {
   3.649259907663431*^9, 3.649259992296626*^9}, {3.649260050094636*^9, 
   3.649260065849139*^9}, 3.649260129895323*^9, {3.649260309183428*^9, 
   3.6492603094557133`*^9}, {3.649260371404566*^9, 3.64926040211484*^9}, 
   3.649272745810855*^9, {3.649272859097014*^9, 3.649272862208322*^9}, {
   3.649272894311653*^9, 3.64927289769634*^9}, {3.6492730110286016`*^9, 
   3.6492730250756083`*^9}, {3.649273106353642*^9, 3.649273109077507*^9}, {
   3.649273170203189*^9, 3.649273170411021*^9}, {3.649872238500237*^9, 
   3.649872259049232*^9}, {3.649894400589272*^9, 3.6498944384501762`*^9}, {
   3.650002365346281*^9, 3.650002380352285*^9}, {3.6500024298360243`*^9, 
   3.650002446810408*^9}, {3.650002497701038*^9, 3.650002523956849*^9}, {
   3.650002571560855*^9, 3.6500026508115797`*^9}, {3.65000269281654*^9, 
   3.650002759659141*^9}, {3.6500027916908703`*^9, 3.65000282619895*^9}, {
   3.650002862772669*^9, 3.6500028906111307`*^9}, {3.650002926853812*^9, 
   3.650002948093389*^9}, {3.650002982083981*^9, 3.6500030086453667`*^9}, 
   3.650003351221335*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Alpha]$$ = 
    0.95, $CellContext`\[CapitalSigma]t$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], 0.95}, {0.01, 0.1, 0.3, 0.5, 0.7, 0.8, 
      0.9, 0.95, 0.99, 0.999}}, {
      Hold[$CellContext`\[CapitalSigma]t$$], {1, 3}}}, Typeset`size$$ = {
    800., {146., 150.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Alpha]$1005163$$ = 
    0, $CellContext`\[CapitalSigma]t$1005164$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Alpha]$$ = 
        0.95, $CellContext`\[CapitalSigma]t$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$1005163$$, 0], 
        Hold[$CellContext`\[CapitalSigma]t$$, \
$CellContext`\[CapitalSigma]t$1005164$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      If[Length[infflatlandisopointisoscatter`simulations] > 0, 
        Module[{$CellContext`data$, $CellContext`maxr$, $CellContext`dr$, \
$CellContext`points\[Phi]$, $CellContext`plotpoints\[Phi]$, \
$CellContext`logplot\[Phi]$, $CellContext`plot\[Phi]$, \
$CellContext`exact1points$}, $CellContext`data$ = Part[
            SelectFirst[
            infflatlandisopointisoscatter`simulations, And[
             Part[#, 1] == $CellContext`\[Alpha]$$, 
              Part[#, 2] == $CellContext`\[CapitalSigma]t$$]& ], 
            3]; $CellContext`maxr$ = 
          Part[$CellContext`data$, 2, 7]; $CellContext`dr$ = 
          Part[$CellContext`data$, 2, 9]; $CellContext`points\[Phi]$ = 
          Part[$CellContext`data$, 4]; $CellContext`plotpoints\[Phi]$ = 
          infflatlandisopointisoscatter`ppoints[$CellContext`points\[Phi]$, \
$CellContext`dr$, $CellContext`maxr$, $CellContext`\[CapitalSigma]t$$]; \
$CellContext`exact1points$ = Map[Quiet[{
              Part[#, 1], 2 Pi Part[#, 1] 
              infflatlandisopointisoscatter`\[Phi]exact1[
                
                Part[#, 
                 1], $CellContext`\[CapitalSigma]t$$, \
$CellContext`\[Alpha]$$]}]& , $CellContext`plotpoints\[Phi]$]; \
$CellContext`plot\[Phi]$ = Quiet[
            Show[
             
             ListPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             
             ListPlot[$CellContext`exact1points$, PlotRange -> All, Joined -> 
              True], Frame -> True, 
             FrameLabel -> {{
               2 Pi $CellContext`r $CellContext`\[Phi][$CellContext`r], 
                Null}, {$CellContext`r, Null}}]]; $CellContext`logplot\[Phi]$ = 
          Quiet[
            Show[
             
             ListLogPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             
             ListLogPlot[$CellContext`exact1points$, PlotRange -> All, Joined -> 
              True], Frame -> True, 
             FrameLabel -> {{
               2 Pi $CellContext`r $CellContext`\[Phi][$CellContext`r], 
                Null}, {$CellContext`r, Null}}]]; Show[
           
           GraphicsGrid[{{$CellContext`plot\[Phi]$, \
$CellContext`logplot\[Phi]$}}, ImageSize -> 800], PlotLabel -> 
           StringJoin[
            "Exact solution (1)\nInfinite Flatland, isotropic point source, \
isotropic scattering, fluence \[Phi][r], \[Alpha] = ", 
             ToString[$CellContext`\[Alpha]$$], 
             ", \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = ", 
             ToString[$CellContext`\[CapitalSigma]t$$]]]], 
        Text[
        "Uh oh!  Couldn't find MC data.  Try to evaluate this entire notebook \
and ensure the data path is setup correctly."]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, 0.95}, {0.01, 0.1, 0.3, 
         0.5, 0.7, 0.8, 0.9, 0.95, 0.99, 
         0.999}}, {$CellContext`\[CapitalSigma]t$$, {1, 3}}}, "Options" :> {},
       "DefaultOptions" :> {}],
     ImageSizeCache->{845., {202., 207.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6492599960399323`*^9, {3.649260054751576*^9, 3.6492600667267723`*^9}, 
   3.649260130666471*^9, 3.6492603097120123`*^9, 3.649260404452841*^9, 
   3.649260520526636*^9, 3.649261009294073*^9, {3.6492728228080807`*^9, 
   3.649272833844741*^9}, 3.649272870547728*^9, 3.6492729014170713`*^9, {
   3.649273033207165*^9, 3.6492730488975773`*^9}, 3.649273110752254*^9, {
   3.6492731576796923`*^9, 3.6492731709316483`*^9}, 3.649893125231133*^9, 
   3.64989444074127*^9, 3.650002380670837*^9, 3.6500024551855*^9, {
   3.65000251145569*^9, 3.6500025310761137`*^9}, {3.6500026145656157`*^9, 
   3.650002659356792*^9}, {3.6500027078910933`*^9, 3.6500027600243883`*^9}, {
   3.650002803133861*^9, 3.6500028298210363`*^9}, 3.650002894229841*^9, 
   3.6500029521809187`*^9, {3.650002987365321*^9, 3.65000300904708*^9}, {
   3.650003679137001*^9, 3.650003691694615*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fluence - Exact solution (2) comparison to MC", "Subsection",
 CellChangeTimes->{{3.649259702897419*^9, 3.64925971462465*^9}, {
  3.649893943340941*^9, 3.649893948401101*^9}, {3.650003121496348*^9, 
  3.650003125748569*^9}, {3.650003433486025*^9, 3.650003433677327*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"alpha", ",", "\[CapitalSigma]t"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
      "Length", "[", "infflatlandisopointisoscatter`simulations", "]"}], ">", 
      "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "data", ",", "maxr", ",", "dr", ",", "points\[Phi]", ",", 
         "plotpoints\[Phi]", ",", "logplot\[Phi]", ",", "plot\[Phi]", ",", 
         "exact1points"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{
          RowBox[{"SelectFirst", "[", 
           RowBox[{"infflatlandisopointisoscatter`simulations", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\[Alpha]"}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
               "\[CapitalSigma]t"}]}], "&"}]}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"maxr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "7"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "9"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"points\[Phi]", " ", "=", " ", 
         RowBox[{"data", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "divide", " ", "by", " ", "\[CapitalSigma]t", " ", "to", " ", 
          "convert", " ", "collision", " ", "density", " ", "into", " ", 
          "fluence"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"plotpoints\[Phi]", "=", 
         RowBox[{"infflatlandisopointisoscatter`ppoints", "[", 
          RowBox[{
          "points\[Phi]", ",", "dr", ",", "maxr", ",", "\[CapitalSigma]t"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"exact1points", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Quiet", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"2", " ", "Pi", " ", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], " ", 
               RowBox[{"infflatlandisopointisoscatter`\[Phi]exact2", "[", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "\[CapitalSigma]t", 
                 ",", "\[Alpha]"}], "]"}]}]}], "}"}], "]"}], "&"}], " ", "/@",
           "plotpoints\[Phi]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"plot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ListPlot", "[", 
             RowBox[{"exact1points", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"2", " ", "Pi", " ", "r", " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"logplot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListLogPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ListLogPlot", "[", 
             RowBox[{"exact1points", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"2", " ", "Pi", " ", "r", " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"GraphicsGrid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"plot\[Phi]", ",", "logplot\[Phi]"}], "}"}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
           "\"\<Exact solution (2)\\nInfinite Flatland, isotropic point \
source, isotropic scattering, fluence \[Phi][r], \[Alpha] = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[Alpha]", "]"}], "<>", 
            "\"\<, \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[CapitalSigma]t", "]"}]}]}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
     "Text", "[", 
      "\"\<Uh oh!  Couldn't find MC data.  Try to evaluate this entire \
notebook and ensure the data path is setup correctly.\>\"", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0.99"}], "}"}], ",", 
     "infflatlandisopointisoscatter`alphas"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalSigma]t", ",", "3"}], "}"}], ",", 
     "infflatlandisopointisoscatter`muts"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.649259789611609*^9, 3.649259851754438*^9}, {
   3.649259907663431*^9, 3.649259992296626*^9}, {3.649260050094636*^9, 
   3.649260065849139*^9}, 3.649260129895323*^9, {3.649260309183428*^9, 
   3.6492603094557133`*^9}, {3.649260371404566*^9, 3.64926040211484*^9}, 
   3.649272745810855*^9, {3.649272859097014*^9, 3.649272862208322*^9}, {
   3.649272894311653*^9, 3.64927289769634*^9}, {3.6492730110286016`*^9, 
   3.6492730250756083`*^9}, {3.649273106353642*^9, 3.649273109077507*^9}, {
   3.649273170203189*^9, 3.649273170411021*^9}, {3.649872238500237*^9, 
   3.649872259049232*^9}, {3.649894400589272*^9, 3.6498944384501762`*^9}, {
   3.650002365346281*^9, 3.650002380352285*^9}, {3.6500024298360243`*^9, 
   3.650002446810408*^9}, {3.650002497701038*^9, 3.650002523956849*^9}, {
   3.650002571560855*^9, 3.6500026508115797`*^9}, {3.65000269281654*^9, 
   3.650002759659141*^9}, {3.6500027916908703`*^9, 3.65000282619895*^9}, {
   3.650002862772669*^9, 3.6500028906111307`*^9}, {3.650002926853812*^9, 
   3.650002948093389*^9}, {3.650002982083981*^9, 3.6500030086453667`*^9}, 
   3.650003351221335*^9, {3.650003436558893*^9, 3.650003437246954*^9}, {
   3.65000349029865*^9, 3.650003490439392*^9}, {3.650003624274753*^9, 
   3.650003631867281*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Alpha]$$ = 
    0.95, $CellContext`\[CapitalSigma]t$$ = 3, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], 0.99}, {0.01, 0.1, 0.3, 0.5, 0.7, 0.8, 
      0.9, 0.95, 0.99, 0.999}}, {{
       Hold[$CellContext`\[CapitalSigma]t$$], 3}, {1, 3}}}, Typeset`size$$ = {
    62., {2., 9.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Alpha]$1010151$$ = 
    0, $CellContext`\[CapitalSigma]t$1010152$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Alpha]$$ = 
        0.99, $CellContext`\[CapitalSigma]t$$ = 3}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$1010151$$, 0], 
        Hold[$CellContext`\[CapitalSigma]t$$, \
$CellContext`\[CapitalSigma]t$1010152$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      If[Length[infflatlandisopointisoscatter`simulations] > 0, 
        Module[{$CellContext`data$, $CellContext`maxr$, $CellContext`dr$, \
$CellContext`points\[Phi]$, $CellContext`plotpoints\[Phi]$, \
$CellContext`logplot\[Phi]$, $CellContext`plot\[Phi]$, \
$CellContext`exact1points$}, $CellContext`data$ = Part[
            SelectFirst[
            infflatlandisopointisoscatter`simulations, And[
             Part[#, 1] == $CellContext`\[Alpha]$$, 
              Part[#, 2] == $CellContext`\[CapitalSigma]t$$]& ], 
            3]; $CellContext`maxr$ = 
          Part[$CellContext`data$, 2, 7]; $CellContext`dr$ = 
          Part[$CellContext`data$, 2, 9]; $CellContext`points\[Phi]$ = 
          Part[$CellContext`data$, 4]; $CellContext`plotpoints\[Phi]$ = 
          infflatlandisopointisoscatter`ppoints[$CellContext`points\[Phi]$, \
$CellContext`dr$, $CellContext`maxr$, $CellContext`\[CapitalSigma]t$$]; \
$CellContext`exact1points$ = Map[Quiet[{
              Part[#, 1], 2 Pi Part[#, 1] 
              infflatlandisopointisoscatter`\[Phi]exact2[
                
                Part[#, 
                 1], $CellContext`\[CapitalSigma]t$$, \
$CellContext`\[Alpha]$$]}]& , $CellContext`plotpoints\[Phi]$]; \
$CellContext`plot\[Phi]$ = Quiet[
            Show[
             
             ListPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             
             ListPlot[$CellContext`exact1points$, PlotRange -> All, Joined -> 
              True], Frame -> True, 
             FrameLabel -> {{
               2 Pi $CellContext`r $CellContext`\[Phi][$CellContext`r], 
                Null}, {$CellContext`r, Null}}]]; $CellContext`logplot\[Phi]$ = 
          Quiet[
            Show[
             
             ListLogPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             
             ListLogPlot[$CellContext`exact1points$, PlotRange -> All, Joined -> 
              True], Frame -> True, 
             FrameLabel -> {{
               2 Pi $CellContext`r $CellContext`\[Phi][$CellContext`r], 
                Null}, {$CellContext`r, Null}}]]; Show[
           
           GraphicsGrid[{{$CellContext`plot\[Phi]$, \
$CellContext`logplot\[Phi]$}}, ImageSize -> 800], PlotLabel -> 
           StringJoin[
            "Exact solution (2)\nInfinite Flatland, isotropic point source, \
isotropic scattering, fluence \[Phi][r], \[Alpha] = ", 
             ToString[$CellContext`\[Alpha]$$], 
             ", \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = ", 
             ToString[$CellContext`\[CapitalSigma]t$$]]]], 
        Text[
        "Uh oh!  Couldn't find MC data.  Try to evaluate this entire notebook \
and ensure the data path is setup correctly."]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, 0.99}, {0.01, 0.1, 0.3, 
         0.5, 0.7, 0.8, 0.9, 0.95, 0.99, 
         0.999}}, {{$CellContext`\[CapitalSigma]t$$, 3}, {1, 3}}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{111., {61., 66.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6492599960399323`*^9, {3.649260054751576*^9, 3.6492600667267723`*^9}, 
   3.649260130666471*^9, 3.6492603097120123`*^9, 3.649260404452841*^9, 
   3.649260520526636*^9, 3.649261009294073*^9, {3.6492728228080807`*^9, 
   3.649272833844741*^9}, 3.649272870547728*^9, 3.6492729014170713`*^9, {
   3.649273033207165*^9, 3.6492730488975773`*^9}, 3.649273110752254*^9, {
   3.6492731576796923`*^9, 3.6492731709316483`*^9}, 3.649893125231133*^9, 
   3.64989444074127*^9, 3.650002380670837*^9, 3.6500024551855*^9, {
   3.65000251145569*^9, 3.6500025310761137`*^9}, {3.6500026145656157`*^9, 
   3.650002659356792*^9}, {3.6500027078910933`*^9, 3.6500027600243883`*^9}, {
   3.650002803133861*^9, 3.6500028298210363`*^9}, 3.650002894229841*^9, 
   3.6500029521809187`*^9, {3.650002987365321*^9, 3.65000300904708*^9}, 
   3.6500034513148003`*^9, 3.650003495251237*^9, 3.650003644716861*^9, 
   3.650003695199024*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fluence - Exact solution (3a) comparison to MC", "Subsection",
 CellChangeTimes->{{3.649259702897419*^9, 3.64925971462465*^9}, {
  3.649893943340941*^9, 3.649893948401101*^9}, {3.650003121496348*^9, 
  3.650003125748569*^9}, {3.650003433486025*^9, 3.650003433677327*^9}, {
  3.650003844094863*^9, 3.650003844782989*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"alpha", ",", "\[CapitalSigma]t"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
      "Length", "[", "infflatlandisopointisoscatter`simulations", "]"}], ">", 
      "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "data", ",", "maxr", ",", "dr", ",", "points\[Phi]", ",", 
         "plotpoints\[Phi]", ",", "logplot\[Phi]", ",", "plot\[Phi]", ",", 
         "exact1points"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{
          RowBox[{"SelectFirst", "[", 
           RowBox[{"infflatlandisopointisoscatter`simulations", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\[Alpha]"}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
               "\[CapitalSigma]t"}]}], "&"}]}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"maxr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "7"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "9"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"points\[Phi]", " ", "=", " ", 
         RowBox[{"data", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "divide", " ", "by", " ", "\[CapitalSigma]t", " ", "to", " ", 
          "convert", " ", "collision", " ", "density", " ", "into", " ", 
          "fluence"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"plotpoints\[Phi]", "=", 
         RowBox[{"infflatlandisopointisoscatter`ppoints", "[", 
          RowBox[{
          "points\[Phi]", ",", "dr", ",", "maxr", ",", "\[CapitalSigma]t"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"exact1points", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Quiet", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"2", " ", "Pi", " ", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], " ", 
               RowBox[{"infflatlandisopointisoscatter`\[Phi]exact3a", "[", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "\[CapitalSigma]t", 
                 ",", "\[Alpha]"}], "]"}]}]}], "}"}], "]"}], "&"}], " ", "/@",
           "plotpoints\[Phi]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"plot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ListPlot", "[", 
             RowBox[{"exact1points", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"2", " ", "Pi", " ", "r", " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"logplot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListLogPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ListLogPlot", "[", 
             RowBox[{"exact1points", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"2", " ", "Pi", " ", "r", " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"GraphicsGrid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"plot\[Phi]", ",", "logplot\[Phi]"}], "}"}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
           "\"\<Exact solution (3a)\\nInfinite Flatland, isotropic point \
source, isotropic scattering, fluence \[Phi][r], \[Alpha] = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[Alpha]", "]"}], "<>", 
            "\"\<, \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[CapitalSigma]t", "]"}]}]}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
     "Text", "[", 
      "\"\<Uh oh!  Couldn't find MC data.  Try to evaluate this entire \
notebook and ensure the data path is setup correctly.\>\"", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0.99"}], "}"}], ",", 
     "infflatlandisopointisoscatter`alphas"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalSigma]t", ",", "3"}], "}"}], ",", 
     "infflatlandisopointisoscatter`muts"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.649259789611609*^9, 3.649259851754438*^9}, {
   3.649259907663431*^9, 3.649259992296626*^9}, {3.649260050094636*^9, 
   3.649260065849139*^9}, 3.649260129895323*^9, {3.649260309183428*^9, 
   3.6492603094557133`*^9}, {3.649260371404566*^9, 3.64926040211484*^9}, 
   3.649272745810855*^9, {3.649272859097014*^9, 3.649272862208322*^9}, {
   3.649272894311653*^9, 3.64927289769634*^9}, {3.6492730110286016`*^9, 
   3.6492730250756083`*^9}, {3.649273106353642*^9, 3.649273109077507*^9}, {
   3.649273170203189*^9, 3.649273170411021*^9}, {3.649872238500237*^9, 
   3.649872259049232*^9}, {3.649894400589272*^9, 3.6498944384501762`*^9}, {
   3.650002365346281*^9, 3.650002380352285*^9}, {3.6500024298360243`*^9, 
   3.650002446810408*^9}, {3.650002497701038*^9, 3.650002523956849*^9}, {
   3.650002571560855*^9, 3.6500026508115797`*^9}, {3.65000269281654*^9, 
   3.650002759659141*^9}, {3.6500027916908703`*^9, 3.65000282619895*^9}, {
   3.650002862772669*^9, 3.6500028906111307`*^9}, {3.650002926853812*^9, 
   3.650002948093389*^9}, {3.650002982083981*^9, 3.6500030086453667`*^9}, 
   3.650003351221335*^9, {3.650003436558893*^9, 3.650003437246954*^9}, {
   3.65000349029865*^9, 3.650003490439392*^9}, {3.650003624274753*^9, 
   3.650003631867281*^9}, {3.650003849066283*^9, 3.650003865807436*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Alpha]$$ = 
    0.999, $CellContext`\[CapitalSigma]t$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], 0.99}, {0.01, 0.1, 0.3, 0.5, 0.7, 0.8, 
      0.9, 0.95, 0.99, 0.999}}, {{
       Hold[$CellContext`\[CapitalSigma]t$$], 3}, {1, 3}}}, Typeset`size$$ = {
    800., {146., 150.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Alpha]$1042814$$ = 
    0, $CellContext`\[CapitalSigma]t$1042815$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Alpha]$$ = 
        0.99, $CellContext`\[CapitalSigma]t$$ = 3}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$1042814$$, 0], 
        Hold[$CellContext`\[CapitalSigma]t$$, \
$CellContext`\[CapitalSigma]t$1042815$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      If[Length[infflatlandisopointisoscatter`simulations] > 0, 
        Module[{$CellContext`data$, $CellContext`maxr$, $CellContext`dr$, \
$CellContext`points\[Phi]$, $CellContext`plotpoints\[Phi]$, \
$CellContext`logplot\[Phi]$, $CellContext`plot\[Phi]$, \
$CellContext`exact1points$}, $CellContext`data$ = Part[
            SelectFirst[
            infflatlandisopointisoscatter`simulations, And[
             Part[#, 1] == $CellContext`\[Alpha]$$, 
              Part[#, 2] == $CellContext`\[CapitalSigma]t$$]& ], 
            3]; $CellContext`maxr$ = 
          Part[$CellContext`data$, 2, 7]; $CellContext`dr$ = 
          Part[$CellContext`data$, 2, 9]; $CellContext`points\[Phi]$ = 
          Part[$CellContext`data$, 4]; $CellContext`plotpoints\[Phi]$ = 
          infflatlandisopointisoscatter`ppoints[$CellContext`points\[Phi]$, \
$CellContext`dr$, $CellContext`maxr$, $CellContext`\[CapitalSigma]t$$]; \
$CellContext`exact1points$ = Map[Quiet[{
              Part[#, 1], 2 Pi Part[#, 1] 
              infflatlandisopointisoscatter`\[Phi]exact3a[
                
                Part[#, 
                 1], $CellContext`\[CapitalSigma]t$$, \
$CellContext`\[Alpha]$$]}]& , $CellContext`plotpoints\[Phi]$]; \
$CellContext`plot\[Phi]$ = Quiet[
            Show[
             
             ListPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             
             ListPlot[$CellContext`exact1points$, PlotRange -> All, Joined -> 
              True], Frame -> True, 
             FrameLabel -> {{
               2 Pi $CellContext`r $CellContext`\[Phi][$CellContext`r], 
                Null}, {$CellContext`r, Null}}]]; $CellContext`logplot\[Phi]$ = 
          Quiet[
            Show[
             
             ListLogPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             
             ListLogPlot[$CellContext`exact1points$, PlotRange -> All, Joined -> 
              True], Frame -> True, 
             FrameLabel -> {{
               2 Pi $CellContext`r $CellContext`\[Phi][$CellContext`r], 
                Null}, {$CellContext`r, Null}}]]; Show[
           
           GraphicsGrid[{{$CellContext`plot\[Phi]$, \
$CellContext`logplot\[Phi]$}}, ImageSize -> 800], PlotLabel -> 
           StringJoin[
            "Exact solution (3a)\nInfinite Flatland, isotropic point source, \
isotropic scattering, fluence \[Phi][r], \[Alpha] = ", 
             ToString[$CellContext`\[Alpha]$$], 
             ", \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = ", 
             ToString[$CellContext`\[CapitalSigma]t$$]]]], 
        Text[
        "Uh oh!  Couldn't find MC data.  Try to evaluate this entire notebook \
and ensure the data path is setup correctly."]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, 0.99}, {0.01, 0.1, 0.3, 
         0.5, 0.7, 0.8, 0.9, 0.95, 0.99, 
         0.999}}, {{$CellContext`\[CapitalSigma]t$$, 3}, {1, 3}}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{845., {202., 207.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6492599960399323`*^9, {3.649260054751576*^9, 3.6492600667267723`*^9}, 
   3.649260130666471*^9, 3.6492603097120123`*^9, 3.649260404452841*^9, 
   3.649260520526636*^9, 3.649261009294073*^9, {3.6492728228080807`*^9, 
   3.649272833844741*^9}, 3.649272870547728*^9, 3.6492729014170713`*^9, {
   3.649273033207165*^9, 3.6492730488975773`*^9}, 3.649273110752254*^9, {
   3.6492731576796923`*^9, 3.6492731709316483`*^9}, 3.649893125231133*^9, 
   3.64989444074127*^9, 3.650002380670837*^9, 3.6500024551855*^9, {
   3.65000251145569*^9, 3.6500025310761137`*^9}, {3.6500026145656157`*^9, 
   3.650002659356792*^9}, {3.6500027078910933`*^9, 3.6500027600243883`*^9}, {
   3.650002803133861*^9, 3.6500028298210363`*^9}, 3.650002894229841*^9, 
   3.6500029521809187`*^9, {3.650002987365321*^9, 3.65000300904708*^9}, 
   3.6500034513148003`*^9, 3.650003495251237*^9, 3.650003644716861*^9, 
   3.650003695199024*^9, {3.650003856519648*^9, 3.650003874259009*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fluence - Exact solution (3b) comparison to MC", "Subsection",
 CellChangeTimes->{{3.649259702897419*^9, 3.64925971462465*^9}, {
  3.649893943340941*^9, 3.649893948401101*^9}, {3.650003121496348*^9, 
  3.650003125748569*^9}, {3.650003433486025*^9, 3.650003433677327*^9}, {
  3.650003844094863*^9, 3.650003844782989*^9}, {3.650004031499075*^9, 
  3.650004031593492*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"alpha", ",", "\[CapitalSigma]t"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
      "Length", "[", "infflatlandisopointisoscatter`simulations", "]"}], ">", 
      "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "data", ",", "maxr", ",", "dr", ",", "points\[Phi]", ",", 
         "plotpoints\[Phi]", ",", "logplot\[Phi]", ",", "plot\[Phi]", ",", 
         "exact1points"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{
          RowBox[{"SelectFirst", "[", 
           RowBox[{"infflatlandisopointisoscatter`simulations", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\[Alpha]"}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
               "\[CapitalSigma]t"}]}], "&"}]}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"maxr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "7"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "9"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"points\[Phi]", " ", "=", " ", 
         RowBox[{"data", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "divide", " ", "by", " ", "\[CapitalSigma]t", " ", "to", " ", 
          "convert", " ", "collision", " ", "density", " ", "into", " ", 
          "fluence"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"plotpoints\[Phi]", "=", 
         RowBox[{"infflatlandisopointisoscatter`ppoints", "[", 
          RowBox[{
          "points\[Phi]", ",", "dr", ",", "maxr", ",", "\[CapitalSigma]t"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"exact1points", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Quiet", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"2", " ", "Pi", " ", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], " ", 
               RowBox[{"infflatlandisopointisoscatter`\[Phi]exact3b", "[", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "\[CapitalSigma]t", 
                 ",", "\[Alpha]", ",", "M"}], "]"}]}]}], "}"}], "]"}], "&"}], 
          " ", "/@", "plotpoints\[Phi]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"plot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ListPlot", "[", 
             RowBox[{"exact1points", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"2", " ", "Pi", " ", "r", " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"logplot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListLogPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ListLogPlot", "[", 
             RowBox[{"exact1points", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"2", " ", "Pi", " ", "r", " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"GraphicsGrid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"plot\[Phi]", ",", "logplot\[Phi]"}], "}"}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
           "\"\<Exact solution (3b)\\nInfinite Flatland, isotropic point \
source, isotropic scattering, fluence \[Phi][r], \[Alpha] = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[Alpha]", "]"}], "<>", 
            "\"\<, \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[CapitalSigma]t", "]"}]}]}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
     "Text", "[", 
      "\"\<Uh oh!  Couldn't find MC data.  Try to evaluate this entire \
notebook and ensure the data path is setup correctly.\>\"", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0.7"}], "}"}], ",", 
     "infflatlandisopointisoscatter`alphas"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalSigma]t", ",", "3"}], "}"}], ",", 
     "infflatlandisopointisoscatter`muts"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"M", ",", "10"}], "}"}], ",", 
     RowBox[{"Range", "[", "20", "]"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.649259789611609*^9, 3.649259851754438*^9}, {
   3.649259907663431*^9, 3.649259992296626*^9}, {3.649260050094636*^9, 
   3.649260065849139*^9}, 3.649260129895323*^9, {3.649260309183428*^9, 
   3.6492603094557133`*^9}, {3.649260371404566*^9, 3.64926040211484*^9}, 
   3.649272745810855*^9, {3.649272859097014*^9, 3.649272862208322*^9}, {
   3.649272894311653*^9, 3.64927289769634*^9}, {3.6492730110286016`*^9, 
   3.6492730250756083`*^9}, {3.649273106353642*^9, 3.649273109077507*^9}, {
   3.649273170203189*^9, 3.649273170411021*^9}, {3.649872238500237*^9, 
   3.649872259049232*^9}, {3.649894400589272*^9, 3.6498944384501762`*^9}, {
   3.650002365346281*^9, 3.650002380352285*^9}, {3.6500024298360243`*^9, 
   3.650002446810408*^9}, {3.650002497701038*^9, 3.650002523956849*^9}, {
   3.650002571560855*^9, 3.6500026508115797`*^9}, {3.65000269281654*^9, 
   3.650002759659141*^9}, {3.6500027916908703`*^9, 3.65000282619895*^9}, {
   3.650002862772669*^9, 3.6500028906111307`*^9}, {3.650002926853812*^9, 
   3.650002948093389*^9}, {3.650002982083981*^9, 3.6500030086453667`*^9}, 
   3.650003351221335*^9, {3.650003436558893*^9, 3.650003437246954*^9}, {
   3.65000349029865*^9, 3.650003490439392*^9}, {3.650003624274753*^9, 
   3.650003631867281*^9}, {3.650003849066283*^9, 3.650003865807436*^9}, {
   3.650004036444206*^9, 3.6500040556293783`*^9}, {3.650004147254513*^9, 
   3.650004151163246*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`M$$ = 10, $CellContext`\[Alpha]$$ = 
    0.7, $CellContext`\[CapitalSigma]t$$ = 3, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], 0.7}, {0.01, 0.1, 0.3, 0.5, 0.7, 0.8, 
      0.9, 0.95, 0.99, 0.999}}, {{
       Hold[$CellContext`\[CapitalSigma]t$$], 3}, {1, 3}}, {{
       Hold[$CellContext`M$$], 10}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 
      13, 14, 15, 16, 17, 18, 19, 20}}}, Typeset`size$$ = {
    800., {146., 150.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Alpha]$1086955$$ = 
    0, $CellContext`\[CapitalSigma]t$1086956$$ = 
    False, $CellContext`M$1086957$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`M$$ = 10, $CellContext`\[Alpha]$$ = 
        0.7, $CellContext`\[CapitalSigma]t$$ = 3}, "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$1086955$$, 0], 
        Hold[$CellContext`\[CapitalSigma]t$$, \
$CellContext`\[CapitalSigma]t$1086956$$, False], 
        Hold[$CellContext`M$$, $CellContext`M$1086957$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      If[Length[infflatlandisopointisoscatter`simulations] > 0, 
        Module[{$CellContext`data$, $CellContext`maxr$, $CellContext`dr$, \
$CellContext`points\[Phi]$, $CellContext`plotpoints\[Phi]$, \
$CellContext`logplot\[Phi]$, $CellContext`plot\[Phi]$, \
$CellContext`exact1points$}, $CellContext`data$ = Part[
            SelectFirst[
            infflatlandisopointisoscatter`simulations, And[
             Part[#, 1] == $CellContext`\[Alpha]$$, 
              Part[#, 2] == $CellContext`\[CapitalSigma]t$$]& ], 
            3]; $CellContext`maxr$ = 
          Part[$CellContext`data$, 2, 7]; $CellContext`dr$ = 
          Part[$CellContext`data$, 2, 9]; $CellContext`points\[Phi]$ = 
          Part[$CellContext`data$, 4]; $CellContext`plotpoints\[Phi]$ = 
          infflatlandisopointisoscatter`ppoints[$CellContext`points\[Phi]$, \
$CellContext`dr$, $CellContext`maxr$, $CellContext`\[CapitalSigma]t$$]; \
$CellContext`exact1points$ = Map[Quiet[{
              Part[#, 1], 2 Pi Part[#, 1] 
              infflatlandisopointisoscatter`\[Phi]exact3b[
                
                Part[#, 
                 1], $CellContext`\[CapitalSigma]t$$, \
$CellContext`\[Alpha]$$, $CellContext`M$$]}]& , \
$CellContext`plotpoints\[Phi]$]; $CellContext`plot\[Phi]$ = Quiet[
            Show[
             
             ListPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             
             ListPlot[$CellContext`exact1points$, PlotRange -> All, Joined -> 
              True], Frame -> True, 
             FrameLabel -> {{
               2 Pi $CellContext`r $CellContext`\[Phi][$CellContext`r], 
                Null}, {$CellContext`r, Null}}]]; $CellContext`logplot\[Phi]$ = 
          Quiet[
            Show[
             
             ListLogPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             
             ListLogPlot[$CellContext`exact1points$, PlotRange -> All, Joined -> 
              True], Frame -> True, 
             FrameLabel -> {{
               2 Pi $CellContext`r $CellContext`\[Phi][$CellContext`r], 
                Null}, {$CellContext`r, Null}}]]; Show[
           
           GraphicsGrid[{{$CellContext`plot\[Phi]$, \
$CellContext`logplot\[Phi]$}}, ImageSize -> 800], PlotLabel -> 
           StringJoin[
            "Exact solution (3b)\nInfinite Flatland, isotropic point source, \
isotropic scattering, fluence \[Phi][r], \[Alpha] = ", 
             ToString[$CellContext`\[Alpha]$$], 
             ", \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = ", 
             ToString[$CellContext`\[CapitalSigma]t$$]]]], 
        Text[
        "Uh oh!  Couldn't find MC data.  Try to evaluate this entire notebook \
and ensure the data path is setup correctly."]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, 0.7}, {0.01, 0.1, 0.3, 
         0.5, 0.7, 0.8, 0.9, 0.95, 0.99, 
         0.999}}, {{$CellContext`\[CapitalSigma]t$$, 3}, {1, 
         3}}, {{$CellContext`M$$, 10}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
          13, 14, 15, 16, 17, 18, 19, 20}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{845., {215., 220.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6492599960399323`*^9, {3.649260054751576*^9, 3.6492600667267723`*^9}, 
   3.649260130666471*^9, 3.6492603097120123`*^9, 3.649260404452841*^9, 
   3.649260520526636*^9, 3.649261009294073*^9, {3.6492728228080807`*^9, 
   3.649272833844741*^9}, 3.649272870547728*^9, 3.6492729014170713`*^9, {
   3.649273033207165*^9, 3.6492730488975773`*^9}, 3.649273110752254*^9, {
   3.6492731576796923`*^9, 3.6492731709316483`*^9}, 3.649893125231133*^9, 
   3.64989444074127*^9, 3.650002380670837*^9, 3.6500024551855*^9, {
   3.65000251145569*^9, 3.6500025310761137`*^9}, {3.6500026145656157`*^9, 
   3.650002659356792*^9}, {3.6500027078910933`*^9, 3.6500027600243883`*^9}, {
   3.650002803133861*^9, 3.6500028298210363`*^9}, 3.650002894229841*^9, 
   3.6500029521809187`*^9, {3.650002987365321*^9, 3.65000300904708*^9}, 
   3.6500034513148003`*^9, 3.650003495251237*^9, 3.650003644716861*^9, 
   3.650003695199024*^9, {3.650003856519648*^9, 3.650003874259009*^9}, 
   3.6500040565317173`*^9, 3.650004151733107*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Fluence - Diffusion approximations (Classical and Grosjean) comparison to MC\
\>", "Subsection",
 CellChangeTimes->{{3.649259702897419*^9, 3.64925971462465*^9}, {
  3.649893943340941*^9, 3.649893948401101*^9}, {3.650003121496348*^9, 
  3.650003148370801*^9}, {3.650007172824812*^9, 3.6500071827023907`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"alpha", ",", "\[CapitalSigma]t"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
      "Length", "[", "infflatlandisopointisoscatter`simulations", "]"}], ">", 
      "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "data", ",", "maxr", ",", "dr", ",", "points\[Phi]", ",", 
         "plotpoints\[Phi]", ",", "logplot\[Phi]", ",", "plot\[Phi]", ",", 
         "exact1points"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{
          RowBox[{"SelectFirst", "[", 
           RowBox[{"infflatlandisopointisoscatter`simulations", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\[Alpha]"}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
               "\[CapitalSigma]t"}]}], "&"}]}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"maxr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "7"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "9"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"points\[Phi]", " ", "=", " ", 
         RowBox[{"data", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "divide", " ", "by", " ", "\[CapitalSigma]t", " ", "to", " ", 
          "convert", " ", "collision", " ", "density", " ", "into", " ", 
          "fluence"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"plotpoints\[Phi]", "=", 
         RowBox[{"infflatlandisopointisoscatter`ppoints", "[", 
          RowBox[{
          "points\[Phi]", ",", "dr", ",", "maxr", ",", "\[CapitalSigma]t"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"plot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"2", " ", "Pi", " ", "r", " ", 
               RowBox[{"infflatlandisopointisoscatter`\[Phi]Grosjean", "[", 
                RowBox[{"r", ",", "\[CapitalSigma]t", ",", "\[Alpha]"}], 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"r", ",", "0", ",", "maxr"}], "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"2", " ", "Pi", " ", "r", " ", 
               RowBox[{"infflatlandisopointisoscatter`\[Phi]Diffusion", "[", 
                RowBox[{"r", ",", "\[CapitalSigma]t", ",", "\[Alpha]"}], 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"r", ",", "0", ",", "maxr"}], "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"2", " ", "Pi", " ", "r", " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"logplot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListLogPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"LogPlot", "[", 
             RowBox[{
              RowBox[{"2", " ", "Pi", " ", "r", " ", 
               RowBox[{"infflatlandisopointisoscatter`\[Phi]Grosjean", "[", 
                RowBox[{"r", ",", "\[CapitalSigma]t", ",", "\[Alpha]"}], 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"r", ",", "0", ",", "maxr"}], "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"LogPlot", "[", 
             RowBox[{
              RowBox[{"2", " ", "Pi", " ", "r", " ", 
               RowBox[{"infflatlandisopointisoscatter`\[Phi]Diffusion", "[", 
                RowBox[{"r", ",", "\[CapitalSigma]t", ",", "\[Alpha]"}], 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"r", ",", "0", ",", "maxr"}], "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"2", " ", "Pi", " ", "r", " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"GraphicsGrid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"plot\[Phi]", ",", "logplot\[Phi]"}], "}"}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
           "\"\<Classical (dashed) and Grosjean Modified (thin) Diffusion \
Approximation\\nInfinite Flatland, isotropic point source, isotropic \
scattering, fluence \[Phi][r], \[Alpha] = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[Alpha]", "]"}], "<>", 
            "\"\<, \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[CapitalSigma]t", "]"}]}]}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
     "Text", "[", 
      "\"\<Uh oh!  Couldn't find MC data.  Try to evaluate this entire \
notebook and ensure the data path is setup correctly.\>\"", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0.5"}], "}"}], ",", 
     "infflatlandisopointisoscatter`alphas"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[CapitalSigma]t", ",", "infflatlandisopointisoscatter`muts"}], 
    "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.649259789611609*^9, 3.649259851754438*^9}, {
   3.649259907663431*^9, 3.649259992296626*^9}, {3.649260050094636*^9, 
   3.649260065849139*^9}, 3.649260129895323*^9, {3.649260309183428*^9, 
   3.6492603094557133`*^9}, {3.649260371404566*^9, 3.64926040211484*^9}, 
   3.649272745810855*^9, {3.649272859097014*^9, 3.649272862208322*^9}, {
   3.649272894311653*^9, 3.64927289769634*^9}, {3.6492730110286016`*^9, 
   3.6492730250756083`*^9}, {3.649273106353642*^9, 3.649273109077507*^9}, {
   3.649273170203189*^9, 3.649273170411021*^9}, {3.649872238500237*^9, 
   3.649872259049232*^9}, {3.649894400589272*^9, 3.6498944384501762`*^9}, {
   3.650002365346281*^9, 3.650002380352285*^9}, {3.6500024298360243`*^9, 
   3.650002446810408*^9}, {3.650002497701038*^9, 3.650002523956849*^9}, {
   3.650002571560855*^9, 3.6500026508115797`*^9}, {3.65000269281654*^9, 
   3.650002759659141*^9}, {3.6500027916908703`*^9, 3.65000282619895*^9}, {
   3.650002862772669*^9, 3.6500028906111307`*^9}, {3.650002926853812*^9, 
   3.650002948093389*^9}, {3.650002982083981*^9, 3.6500030086453667`*^9}, {
   3.6500031585408278`*^9, 3.65000322873953*^9}, {3.650003318269821*^9, 
   3.650003320052899*^9}, {3.6500071928508997`*^9, 3.65000722830888*^9}, {
   3.650007275595155*^9, 3.650007289546698*^9}, 3.65000735303034*^9, {
   3.650007385628372*^9, 3.650007418967657*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Alpha]$$ = 
    0.5, $CellContext`\[CapitalSigma]t$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], 0.5}, {0.01, 0.1, 0.3, 0.5, 0.7, 0.8, 
      0.9, 0.95, 0.99, 0.999}}, {
      Hold[$CellContext`\[CapitalSigma]t$$], {1, 3}}}, Typeset`size$$ = {
    1000., {179., 183.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Alpha]$1178744$$ = 
    0, $CellContext`\[CapitalSigma]t$1178745$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Alpha]$$ = 
        0.5, $CellContext`\[CapitalSigma]t$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$1178744$$, 0], 
        Hold[$CellContext`\[CapitalSigma]t$$, \
$CellContext`\[CapitalSigma]t$1178745$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      If[Length[infflatlandisopointisoscatter`simulations] > 0, 
        Module[{$CellContext`data$, $CellContext`maxr$, $CellContext`dr$, \
$CellContext`points\[Phi]$, $CellContext`plotpoints\[Phi]$, \
$CellContext`logplot\[Phi]$, $CellContext`plot\[Phi]$, \
$CellContext`exact1points$}, $CellContext`data$ = Part[
            SelectFirst[
            infflatlandisopointisoscatter`simulations, And[
             Part[#, 1] == $CellContext`\[Alpha]$$, 
              Part[#, 2] == $CellContext`\[CapitalSigma]t$$]& ], 
            3]; $CellContext`maxr$ = 
          Part[$CellContext`data$, 2, 7]; $CellContext`dr$ = 
          Part[$CellContext`data$, 2, 9]; $CellContext`points\[Phi]$ = 
          Part[$CellContext`data$, 4]; $CellContext`plotpoints\[Phi]$ = 
          infflatlandisopointisoscatter`ppoints[$CellContext`points\[Phi]$, \
$CellContext`dr$, $CellContext`maxr$, $CellContext`\[CapitalSigma]t$$]; \
$CellContext`plot\[Phi]$ = Quiet[
            Show[
             
             ListPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             Plot[
             2 Pi $CellContext`r 
              infflatlandisopointisoscatter`\[Phi]Grosjean[$CellContext`r, \
$CellContext`\[CapitalSigma]t$$, $CellContext`\[Alpha]$$], {$CellContext`r, 
               0, $CellContext`maxr$}, PlotRange -> All], 
             Plot[
             2 Pi $CellContext`r 
              infflatlandisopointisoscatter`\[Phi]Diffusion[$CellContext`r, \
$CellContext`\[CapitalSigma]t$$, $CellContext`\[Alpha]$$], {$CellContext`r, 
               0, $CellContext`maxr$}, PlotRange -> All, PlotStyle -> Dashed],
              Frame -> True, 
             FrameLabel -> {{
               2 Pi $CellContext`r $CellContext`\[Phi][$CellContext`r], 
                Null}, {$CellContext`r, Null}}]]; $CellContext`logplot\[Phi]$ = 
          Quiet[
            Show[
             
             ListLogPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             LogPlot[
             2 Pi $CellContext`r 
              infflatlandisopointisoscatter`\[Phi]Grosjean[$CellContext`r, \
$CellContext`\[CapitalSigma]t$$, $CellContext`\[Alpha]$$], {$CellContext`r, 
               0, $CellContext`maxr$}, PlotRange -> All], 
             LogPlot[
             2 Pi $CellContext`r 
              infflatlandisopointisoscatter`\[Phi]Diffusion[$CellContext`r, \
$CellContext`\[CapitalSigma]t$$, $CellContext`\[Alpha]$$], {$CellContext`r, 
               0, $CellContext`maxr$}, PlotRange -> All, PlotStyle -> Dashed],
              Frame -> True, 
             FrameLabel -> {{
               2 Pi $CellContext`r $CellContext`\[Phi][$CellContext`r], 
                Null}, {$CellContext`r, Null}}]]; Show[
           
           GraphicsGrid[{{$CellContext`plot\[Phi]$, \
$CellContext`logplot\[Phi]$}}, ImageSize -> 1000], PlotLabel -> 
           StringJoin[
            "Classical (dashed) and Grosjean Modified (thin) Diffusion \
Approximation\nInfinite Flatland, isotropic point source, isotropic \
scattering, fluence \[Phi][r], \[Alpha] = ", 
             ToString[$CellContext`\[Alpha]$$], 
             ", \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = ", 
             ToString[$CellContext`\[CapitalSigma]t$$]]]], 
        Text[
        "Uh oh!  Couldn't find MC data.  Try to evaluate this entire notebook \
and ensure the data path is setup correctly."]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, 0.5}, {0.01, 0.1, 0.3, 
         0.5, 0.7, 0.8, 0.9, 0.95, 0.99, 
         0.999}}, {$CellContext`\[CapitalSigma]t$$, {1, 3}}}, "Options" :> {},
       "DefaultOptions" :> {}],
     ImageSizeCache->{1045., {235., 240.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6492599960399323`*^9, {3.649260054751576*^9, 3.6492600667267723`*^9}, 
   3.649260130666471*^9, 3.6492603097120123`*^9, 3.649260404452841*^9, 
   3.649260520526636*^9, 3.649261009294073*^9, {3.6492728228080807`*^9, 
   3.649272833844741*^9}, 3.649272870547728*^9, 3.6492729014170713`*^9, {
   3.649273033207165*^9, 3.6492730488975773`*^9}, 3.649273110752254*^9, {
   3.6492731576796923`*^9, 3.6492731709316483`*^9}, 3.649893125231133*^9, 
   3.64989444074127*^9, 3.650002380670837*^9, 3.6500024551855*^9, {
   3.65000251145569*^9, 3.6500025310761137`*^9}, {3.6500026145656157`*^9, 
   3.650002659356792*^9}, {3.6500027078910933`*^9, 3.6500027600243883`*^9}, {
   3.650002803133861*^9, 3.6500028298210363`*^9}, 3.650002894229841*^9, 
   3.6500029521809187`*^9, {3.650002987365321*^9, 3.65000300904708*^9}, {
   3.6500031905167294`*^9, 3.650003229752777*^9}, 3.650003701722385*^9, {
   3.650007203146515*^9, 3.650007228633609*^9}, {3.650007276351638*^9, 
   3.650007290144314*^9}, 3.650007356744327*^9, {3.650007394696188*^9, 
   3.65000741932332*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Fluence - Diffusion approximation (Rigorous) comparison to MC\
\>", "Subsection",
 CellChangeTimes->{{3.649259702897419*^9, 3.64925971462465*^9}, {
   3.649893943340941*^9, 3.649893948401101*^9}, {3.650003121496348*^9, 
   3.650003148370801*^9}, {3.650007172824812*^9, 3.6500071827023907`*^9}, {
   3.6500077111192513`*^9, 3.65000771239109*^9}, 3.650007811903572*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"alpha", ",", "\[CapitalSigma]t"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
      "Length", "[", "infflatlandisopointisoscatter`simulations", "]"}], ">", 
      "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "data", ",", "maxr", ",", "dr", ",", "points\[Phi]", ",", 
         "plotpoints\[Phi]", ",", "logplot\[Phi]", ",", "plot\[Phi]", ",", 
         "exact1points"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{
          RowBox[{"SelectFirst", "[", 
           RowBox[{"infflatlandisopointisoscatter`simulations", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\[Alpha]"}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
               "\[CapitalSigma]t"}]}], "&"}]}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"maxr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "7"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "9"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"points\[Phi]", " ", "=", " ", 
         RowBox[{"data", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "divide", " ", "by", " ", "\[CapitalSigma]t", " ", "to", " ", 
          "convert", " ", "collision", " ", "density", " ", "into", " ", 
          "fluence"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"plotpoints\[Phi]", "=", 
         RowBox[{"infflatlandisopointisoscatter`ppoints", "[", 
          RowBox[{
          "points\[Phi]", ",", "dr", ",", "maxr", ",", "\[CapitalSigma]t"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"plot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"2", " ", "Pi", " ", "r", " ", 
               RowBox[{
               "infflatlandisopointisoscatter`\[Phi]RigorousDiffusion", "[", 
                RowBox[{"r", ",", "\[CapitalSigma]t", ",", "\[Alpha]"}], 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"r", ",", "0", ",", "maxr"}], "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"2", " ", "Pi", " ", "r", " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"logplot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListLogPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"LogPlot", "[", 
             RowBox[{
              RowBox[{"2", " ", "Pi", " ", "r", " ", 
               RowBox[{
               "infflatlandisopointisoscatter`\[Phi]RigorousDiffusion", "[", 
                RowBox[{"r", ",", "\[CapitalSigma]t", ",", "\[Alpha]"}], 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"r", ",", "0", ",", "maxr"}], "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"2", " ", "Pi", " ", "r", " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"GraphicsGrid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"plot\[Phi]", ",", "logplot\[Phi]"}], "}"}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
           "\"\<Rigorous Diffusion Approximation\\nInfinite Flatland, \
isotropic point source, isotropic scattering, fluence \[Phi][r], \[Alpha] = \
\>\"", "<>", 
            RowBox[{"ToString", "[", "\[Alpha]", "]"}], "<>", 
            "\"\<, \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[CapitalSigma]t", "]"}]}]}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
     "Text", "[", 
      "\"\<Uh oh!  Couldn't find MC data.  Try to evaluate this entire \
notebook and ensure the data path is setup correctly.\>\"", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0.5"}], "}"}], ",", 
     "infflatlandisopointisoscatter`alphas"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[CapitalSigma]t", ",", "infflatlandisopointisoscatter`muts"}], 
    "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.649259789611609*^9, 3.649259851754438*^9}, {
   3.649259907663431*^9, 3.649259992296626*^9}, {3.649260050094636*^9, 
   3.649260065849139*^9}, 3.649260129895323*^9, {3.649260309183428*^9, 
   3.6492603094557133`*^9}, {3.649260371404566*^9, 3.64926040211484*^9}, 
   3.649272745810855*^9, {3.649272859097014*^9, 3.649272862208322*^9}, {
   3.649272894311653*^9, 3.64927289769634*^9}, {3.6492730110286016`*^9, 
   3.6492730250756083`*^9}, {3.649273106353642*^9, 3.649273109077507*^9}, {
   3.649273170203189*^9, 3.649273170411021*^9}, {3.649872238500237*^9, 
   3.649872259049232*^9}, {3.649894400589272*^9, 3.6498944384501762`*^9}, {
   3.650002365346281*^9, 3.650002380352285*^9}, {3.6500024298360243`*^9, 
   3.650002446810408*^9}, {3.650002497701038*^9, 3.650002523956849*^9}, {
   3.650002571560855*^9, 3.6500026508115797`*^9}, {3.65000269281654*^9, 
   3.650002759659141*^9}, {3.6500027916908703`*^9, 3.65000282619895*^9}, {
   3.650002862772669*^9, 3.6500028906111307`*^9}, {3.650002926853812*^9, 
   3.650002948093389*^9}, {3.650002982083981*^9, 3.6500030086453667`*^9}, {
   3.6500031585408278`*^9, 3.65000322873953*^9}, {3.650003318269821*^9, 
   3.650003320052899*^9}, {3.6500071928508997`*^9, 3.65000722830888*^9}, {
   3.650007275595155*^9, 3.650007289546698*^9}, 3.65000735303034*^9, {
   3.650007385628372*^9, 3.650007418967657*^9}, {3.6500077191209297`*^9, 
   3.650007758672679*^9}, 3.650007809140627*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Alpha]$$ = 
    0.5, $CellContext`\[CapitalSigma]t$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], 0.5}, {0.01, 0.1, 0.3, 0.5, 0.7, 0.8, 
      0.9, 0.95, 0.99, 0.999}}, {
      Hold[$CellContext`\[CapitalSigma]t$$], {1, 3}}}, Typeset`size$$ = {
    1000., {179., 183.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Alpha]$1222628$$ = 
    0, $CellContext`\[CapitalSigma]t$1222629$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Alpha]$$ = 
        0.5, $CellContext`\[CapitalSigma]t$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$1222628$$, 0], 
        Hold[$CellContext`\[CapitalSigma]t$$, \
$CellContext`\[CapitalSigma]t$1222629$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      If[Length[infflatlandisopointisoscatter`simulations] > 0, 
        Module[{$CellContext`data$, $CellContext`maxr$, $CellContext`dr$, \
$CellContext`points\[Phi]$, $CellContext`plotpoints\[Phi]$, \
$CellContext`logplot\[Phi]$, $CellContext`plot\[Phi]$, \
$CellContext`exact1points$}, $CellContext`data$ = Part[
            SelectFirst[
            infflatlandisopointisoscatter`simulations, And[
             Part[#, 1] == $CellContext`\[Alpha]$$, 
              Part[#, 2] == $CellContext`\[CapitalSigma]t$$]& ], 
            3]; $CellContext`maxr$ = 
          Part[$CellContext`data$, 2, 7]; $CellContext`dr$ = 
          Part[$CellContext`data$, 2, 9]; $CellContext`points\[Phi]$ = 
          Part[$CellContext`data$, 4]; $CellContext`plotpoints\[Phi]$ = 
          infflatlandisopointisoscatter`ppoints[$CellContext`points\[Phi]$, \
$CellContext`dr$, $CellContext`maxr$, $CellContext`\[CapitalSigma]t$$]; \
$CellContext`plot\[Phi]$ = Quiet[
            Show[
             
             ListPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             Plot[
             2 Pi $CellContext`r 
              infflatlandisopointisoscatter`\[Phi]RigorousDiffusion[$\
CellContext`r, $CellContext`\[CapitalSigma]t$$, $CellContext`\[Alpha]$$], \
{$CellContext`r, 0, $CellContext`maxr$}, PlotRange -> All], Frame -> True, 
             FrameLabel -> {{
               2 Pi $CellContext`r $CellContext`\[Phi][$CellContext`r], 
                Null}, {$CellContext`r, Null}}]]; $CellContext`logplot\[Phi]$ = 
          Quiet[
            Show[
             
             ListLogPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             LogPlot[
             2 Pi $CellContext`r 
              infflatlandisopointisoscatter`\[Phi]RigorousDiffusion[$\
CellContext`r, $CellContext`\[CapitalSigma]t$$, $CellContext`\[Alpha]$$], \
{$CellContext`r, 0, $CellContext`maxr$}, PlotRange -> All], Frame -> True, 
             FrameLabel -> {{
               2 Pi $CellContext`r $CellContext`\[Phi][$CellContext`r], 
                Null}, {$CellContext`r, Null}}]]; Show[
           
           GraphicsGrid[{{$CellContext`plot\[Phi]$, \
$CellContext`logplot\[Phi]$}}, ImageSize -> 1000], PlotLabel -> 
           StringJoin[
            "Rigorous Diffusion Approximation\nInfinite Flatland, isotropic \
point source, isotropic scattering, fluence \[Phi][r], \[Alpha] = ", 
             ToString[$CellContext`\[Alpha]$$], 
             ", \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = ", 
             ToString[$CellContext`\[CapitalSigma]t$$]]]], 
        Text[
        "Uh oh!  Couldn't find MC data.  Try to evaluate this entire notebook \
and ensure the data path is setup correctly."]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, 0.5}, {0.01, 0.1, 0.3, 
         0.5, 0.7, 0.8, 0.9, 0.95, 0.99, 
         0.999}}, {$CellContext`\[CapitalSigma]t$$, {1, 3}}}, "Options" :> {},
       "DefaultOptions" :> {}],
     ImageSizeCache->{1045., {235., 240.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6492599960399323`*^9, {3.649260054751576*^9, 3.6492600667267723`*^9}, 
   3.649260130666471*^9, 3.6492603097120123`*^9, 3.649260404452841*^9, 
   3.649260520526636*^9, 3.649261009294073*^9, {3.6492728228080807`*^9, 
   3.649272833844741*^9}, 3.649272870547728*^9, 3.6492729014170713`*^9, {
   3.649273033207165*^9, 3.6492730488975773`*^9}, 3.649273110752254*^9, {
   3.6492731576796923`*^9, 3.6492731709316483`*^9}, 3.649893125231133*^9, 
   3.64989444074127*^9, 3.650002380670837*^9, 3.6500024551855*^9, {
   3.65000251145569*^9, 3.6500025310761137`*^9}, {3.6500026145656157`*^9, 
   3.650002659356792*^9}, {3.6500027078910933`*^9, 3.6500027600243883`*^9}, {
   3.650002803133861*^9, 3.6500028298210363`*^9}, 3.650002894229841*^9, 
   3.6500029521809187`*^9, {3.650002987365321*^9, 3.65000300904708*^9}, {
   3.6500031905167294`*^9, 3.650003229752777*^9}, 3.650003701722385*^9, {
   3.650007203146515*^9, 3.650007228633609*^9}, {3.650007276351638*^9, 
   3.650007290144314*^9}, 3.650007356744327*^9, {3.650007394696188*^9, 
   3.65000741932332*^9}, {3.650007731982513*^9, 3.650007760633027*^9}, 
   3.6500078150737677`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["N-th order fluence / scalar flux", "Section",
 CellChangeTimes->{{3.6500387614570208`*^9, 3.6500387653993263`*^9}, {
  3.650039936579167*^9, 3.650039945648221*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"alpha", ",", "\[CapitalSigma]t"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
      "Length", "[", "infflatlandisopointisoscatter`simulations", "]"}], ">", 
      "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "data", ",", "maxr", ",", "dr", ",", "points\[Phi]", ",", 
         "plotpoints\[Phi]", ",", "logplot\[Phi]", ",", "plot\[Phi]", ",", 
         "exact1points", ",", "numorders"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{
          RowBox[{"SelectFirst", "[", 
           RowBox[{"infflatlandisopointisoscatter`simulations", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\[Alpha]"}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
               "\[CapitalSigma]t"}]}], "&"}]}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"maxr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "7"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "9"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"numorders", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "15"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"points\[Phi]", " ", "=", " ", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"9", "+", "numorders", "+", "n", "+", "1"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "divide", " ", "by", " ", "\[CapitalSigma]t", " ", "to", " ", 
          "convert", " ", "collision", " ", "density", " ", "into", " ", 
          "fluence"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"plotpoints\[Phi]", "=", 
         RowBox[{"infflatlandisopointisoscatter`ppoints", "[", 
          RowBox[{
          "points\[Phi]", ",", "dr", ",", "maxr", ",", "\[CapitalSigma]t"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"plot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"2", " ", "Pi", " ", "r", " ", 
               RowBox[{"infflatlandisopointisoscatter`\[Phi]", "[", 
                RowBox[{
                "r", ",", "\[CapitalSigma]t", ",", "\[Alpha]", ",", "n"}], 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"r", ",", "0", ",", "maxr"}], "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"2", " ", "Pi", " ", "r", " ", 
                  RowBox[{"\[Phi]", "[", 
                   RowBox[{"r", "|", "n"}], "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"logplot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListLogPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"LogPlot", "[", 
             RowBox[{
              RowBox[{"2", " ", "Pi", " ", "r", " ", 
               RowBox[{"infflatlandisopointisoscatter`\[Phi]", "[", 
                RowBox[{
                "r", ",", "\[CapitalSigma]t", ",", "\[Alpha]", ",", "n"}], 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"r", ",", "0", ",", "maxr"}], "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"2", " ", "Pi", " ", "r", " ", 
                  RowBox[{"\[Phi]", "[", 
                   RowBox[{"r", "|", "n"}], "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"GraphicsGrid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"plot\[Phi]", ",", "logplot\[Phi]"}], "}"}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
           "\"\<Infinite Flatland, isotropic point source, isotropic \
scattering, n-th scattered fluence \[Phi][r|n], \[Alpha] = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[Alpha]", "]"}], "<>", 
            "\"\<, \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[CapitalSigma]t", "]"}]}]}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
     "Text", "[", 
      "\"\<Uh oh!  Couldn't find MC data.  Try to evaluate this entire \
notebook and ensure the data path is setup correctly.\>\"", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0.9"}], "}"}], ",", 
     "infflatlandisopointisoscatter`alphas"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[CapitalSigma]t", ",", "infflatlandisopointisoscatter`muts"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "8"}], "}"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
        "NumberQ", "[", "infflatlandisopointisoscatter`numcollorders", "]"}], 
        ",", "infflatlandisopointisoscatter`numcollorders", ",", "1"}], "]"}],
       "]"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.650038781957878*^9, 3.650038865081994*^9}, {
   3.650038940318115*^9, 3.6500389668102417`*^9}, 3.650039135168024*^9, {
   3.650039171845436*^9, 3.650039182572044*^9}, {3.6500392331634808`*^9, 
   3.650039271164426*^9}, 3.650039318856196*^9, {3.650039363783215*^9, 
   3.6500393848331623`*^9}, {3.6500394185605392`*^9, 3.650039470436884*^9}, {
   3.650039534236198*^9, 3.6500395903264017`*^9}, {3.650039621803979*^9, 
   3.650039624580249*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 8, $CellContext`\[Alpha]$$ = 
    0.9, $CellContext`\[CapitalSigma]t$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], 0.9}, {0.01, 0.1, 0.3, 0.5, 0.7, 0.8, 
      0.9, 0.95, 0.99, 0.999}}, {
      Hold[$CellContext`\[CapitalSigma]t$$], {1, 3}}, {{
       Hold[$CellContext`n$$], 8}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,
       14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
       32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
       50}}}, Typeset`size$$ = {1000., {170., 174.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Alpha]$1261447$$ = 
    0, $CellContext`\[CapitalSigma]t$1261448$$ = 
    False, $CellContext`n$1261449$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 8, $CellContext`\[Alpha]$$ = 
        0.9, $CellContext`\[CapitalSigma]t$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$1261447$$, 0], 
        Hold[$CellContext`\[CapitalSigma]t$$, \
$CellContext`\[CapitalSigma]t$1261448$$, False], 
        Hold[$CellContext`n$$, $CellContext`n$1261449$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      If[Length[infflatlandisopointisoscatter`simulations] > 0, 
        Module[{$CellContext`data$, $CellContext`maxr$, $CellContext`dr$, \
$CellContext`points\[Phi]$, $CellContext`plotpoints\[Phi]$, \
$CellContext`logplot\[Phi]$, $CellContext`plot\[Phi]$, \
$CellContext`exact1points$, $CellContext`numorders$}, $CellContext`data$ = 
          Part[
            SelectFirst[
            infflatlandisopointisoscatter`simulations, And[
             Part[#, 1] == $CellContext`\[Alpha]$$, 
              Part[#, 2] == $CellContext`\[CapitalSigma]t$$]& ], 
            3]; $CellContext`maxr$ = 
          Part[$CellContext`data$, 2, 7]; $CellContext`dr$ = 
          Part[$CellContext`data$, 2, 9]; $CellContext`numorders$ = 
          Part[$CellContext`data$, 2, 15]; $CellContext`points\[Phi]$ = 
          Part[$CellContext`data$, 
            9 + $CellContext`numorders$ + $CellContext`n$$ + 
            1]; $CellContext`plotpoints\[Phi]$ = 
          infflatlandisopointisoscatter`ppoints[$CellContext`points\[Phi]$, \
$CellContext`dr$, $CellContext`maxr$, $CellContext`\[CapitalSigma]t$$]; \
$CellContext`plot\[Phi]$ = Quiet[
            Show[
             
             ListPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             Plot[
             2 Pi $CellContext`r 
              infflatlandisopointisoscatter`\[Phi][$CellContext`r, \
$CellContext`\[CapitalSigma]t$$, $CellContext`\[Alpha]$$, $CellContext`n$$], \
{$CellContext`r, 0, $CellContext`maxr$}, PlotRange -> All], Frame -> True, 
             FrameLabel -> {{2 Pi $CellContext`r $CellContext`\[Phi][
                  Alternatives[$CellContext`r, $CellContext`n$$]], 
                Null}, {$CellContext`r, Null}}]]; $CellContext`logplot\[Phi]$ = 
          Quiet[
            Show[
             
             ListLogPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             LogPlot[
             2 Pi $CellContext`r 
              infflatlandisopointisoscatter`\[Phi][$CellContext`r, \
$CellContext`\[CapitalSigma]t$$, $CellContext`\[Alpha]$$, $CellContext`n$$], \
{$CellContext`r, 0, $CellContext`maxr$}, PlotRange -> All], Frame -> True, 
             FrameLabel -> {{2 Pi $CellContext`r $CellContext`\[Phi][
                  Alternatives[$CellContext`r, $CellContext`n$$]], 
                Null}, {$CellContext`r, Null}}]]; Show[
           
           GraphicsGrid[{{$CellContext`plot\[Phi]$, \
$CellContext`logplot\[Phi]$}}, ImageSize -> 1000], PlotLabel -> 
           StringJoin[
            "Infinite Flatland, isotropic point source, isotropic scattering, \
n-th scattered fluence \[Phi][r|n], \[Alpha] = ", 
             ToString[$CellContext`\[Alpha]$$], 
             ", \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = ", 
             ToString[$CellContext`\[CapitalSigma]t$$]]]], 
        Text[
        "Uh oh!  Couldn't find MC data.  Try to evaluate this entire notebook \
and ensure the data path is setup correctly."]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, 0.9}, {0.01, 0.1, 0.3, 
         0.5, 0.7, 0.8, 0.9, 0.95, 0.99, 
         0.999}}, {$CellContext`\[CapitalSigma]t$$, {1, 
         3}}, {{$CellContext`n$$, 8}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 
         13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
         30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 
         47, 48, 49, 50}}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1045., {239., 244.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.65003878554291*^9, 3.650038865385459*^9}, {
   3.6500389412689238`*^9, 3.650038967128581*^9}, 3.650039135917987*^9, 
   3.650039172499586*^9, {3.6500392170027857`*^9, 3.650039271616228*^9}, 
   3.650039319684811*^9, 3.650039386526655*^9, {3.650039427197057*^9, 
   3.650039470884982*^9}, {3.650039534940349*^9, 3.6500395907828007`*^9}, 
   3.6500396250166607`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compare moments of \[Phi]", "Subsection",
 CellChangeTimes->{{3.650041676191098*^9, 3.6500416791649113`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
      "Length", "[", "infflatlandisopointisoscatter`simulations", "]"}], ">", 
      "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "data", ",", "nummoments", ",", "\[Phi]moments", ",", "ks", ",", 
         "analytic", ",", "j"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{
          RowBox[{"SelectFirst", "[", 
           RowBox[{"infflatlandisopointisoscatter`simulations", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\[Alpha]"}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
               "\[CapitalSigma]t"}]}], "&"}]}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"nummoments", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "17"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Phi]moments", "=", 
         RowBox[{"N", "[", 
          RowBox[{"{", 
           FractionBox[
            RowBox[{"data", "[", 
             RowBox[{"[", "6", "]"}], "]"}], "\[CapitalSigma]t"], "}"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ks", "=", 
         RowBox[{"{", 
          RowBox[{"Table", "[", 
           RowBox[{"k", ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "0", ",", 
              RowBox[{"nummoments", "-", "1"}]}], "}"}]}], "]"}], "}"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"analytic", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"infflatlandisopointisoscatter`\[Phi]m", "[", 
            RowBox[{"\[CapitalSigma]t", ",", "\[Alpha]", ",", "k"}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "ks"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"j", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"ks", ",", "analytic", ",", "\[Phi]moments"}], "]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"TableForm", "[", "\[IndentingNewLine]", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
             "\"\<k\>\"", ",", "\"\<analytic\>\"", ",", "\"\<MC\>\""}], "}"}],
             "}"}], ",", 
           RowBox[{"Transpose", "[", "j", "]"}]}], "]"}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
     "Text", "[", 
      "\"\<Uh oh!  Couldn't find MC data.  Try to evaluate this entire \
notebook and ensure the data path is setup correctly.\>\"", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0.95"}], "}"}], ",", 
     "infflatlandisopointisoscatter`alphas"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalSigma]t", ",", "3"}], "}"}], ",", 
     "infflatlandisopointisoscatter`muts"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.650041688841194*^9, 3.650041705608346*^9}, 
   3.650042056240006*^9, {3.650042170542794*^9, 3.65004232530101*^9}, {
   3.650042374114872*^9, 3.650042374646285*^9}, {3.6500426332834272`*^9, 
   3.65004266394592*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Alpha]$$ = 
    0.95, $CellContext`\[CapitalSigma]t$$ = 3, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], 0.95}, {0.01, 0.1, 0.3, 0.5, 0.7, 0.8, 
      0.9, 0.95, 0.99, 0.999}}, {{
       Hold[$CellContext`\[CapitalSigma]t$$], 3}, {1, 3}}}, Typeset`size$$ = {
    179., {45.634033203125, 51.365966796875}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Alpha]$1274251$$ = 
    0, $CellContext`\[CapitalSigma]t$1274252$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Alpha]$$ = 
        0.95, $CellContext`\[CapitalSigma]t$$ = 3}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$1274251$$, 0], 
        Hold[$CellContext`\[CapitalSigma]t$$, \
$CellContext`\[CapitalSigma]t$1274252$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      If[Length[infflatlandisopointisoscatter`simulations] > 0, 
        Module[{$CellContext`data$, $CellContext`nummoments$, $CellContext`\
\[Phi]moments$, $CellContext`ks$, $CellContext`analytic$, $CellContext`j$}, \
$CellContext`data$ = Part[
            SelectFirst[
            infflatlandisopointisoscatter`simulations, And[
             Part[#, 1] == $CellContext`\[Alpha]$$, 
              Part[#, 2] == $CellContext`\[CapitalSigma]t$$]& ], 
            3]; $CellContext`nummoments$ = 
          Part[$CellContext`data$, 2, 17]; $CellContext`\[Phi]moments$ = 
          N[{Part[$CellContext`data$, 
               6]/$CellContext`\[CapitalSigma]t$$}]; $CellContext`ks$ = {
            Table[$CellContext`k, {$CellContext`k, 
              0, $CellContext`nummoments$ - 1}]}; $CellContext`analytic$ = 
          Table[
            
            infflatlandisopointisoscatter`\[Phi]m[$CellContext`\[CapitalSigma]\
t$$, $CellContext`\[Alpha]$$, $CellContext`k], {$CellContext`k, \
$CellContext`ks$}]; $CellContext`j$ = 
          Join[$CellContext`ks$, $CellContext`analytic$, \
$CellContext`\[Phi]moments$]; TableForm[
           Join[{{"k", "analytic", "MC"}}, 
            Transpose[$CellContext`j$]]]], 
        Text[
        "Uh oh!  Couldn't find MC data.  Try to evaluate this entire notebook \
and ensure the data path is setup correctly."]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, 0.95}, {0.01, 0.1, 0.3, 
         0.5, 0.7, 0.8, 0.9, 0.95, 0.99, 
         0.999}}, {{$CellContext`\[CapitalSigma]t$$, 3}, {1, 3}}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{224., {103., 108.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.650042202724057*^9, 3.65004232551412*^9}, 
   3.650042413458701*^9, {3.650042639813974*^9, 3.6500426642700167`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["n-th collided moments of \[Phi]", "Subsection",
 CellChangeTimes->{{3.646262916178207*^9, 3.646262920832403*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
      "Length", "[", "infflatlandisopointisoscatter`simulations", "]"}], ">", 
      "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "data", ",", "\[Phi]moments", ",", "ks", ",", "analytic", ",", "j", 
         ",", "nummoments"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{
          RowBox[{"SelectFirst", "[", 
           RowBox[{"infflatlandisopointisoscatter`simulations", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\[Alpha]"}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
               "\[CapitalSigma]t"}]}], "&"}]}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"nummoments", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "17"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Phi]moments", "=", 
         RowBox[{"N", "[", 
          FractionBox[
           RowBox[{"{", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"9", "+", "n"}], "]"}], "]"}], "}"}], 
           "\[CapitalSigma]t"], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ks", "=", 
         RowBox[{"{", 
          RowBox[{"Table", "[", 
           RowBox[{"k", ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "0", ",", 
              RowBox[{"nummoments", "-", "1"}]}], "}"}]}], "]"}], "}"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"analytic", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Quiet", "[", 
            RowBox[{"N", "[", 
             RowBox[{"infflatlandisopointisoscatter`\[Phi]m", "[", 
              RowBox[{
              "\[CapitalSigma]t", ",", "\[Alpha]", ",", "n", ",", "k"}], 
              "]"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "ks"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"j", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"ks", ",", "analytic", ",", "\[Phi]moments"}], "]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"TableForm", "[", "\[IndentingNewLine]", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
             "\"\<k\>\"", ",", "\"\<analytic\>\"", ",", "\"\<MC\>\""}], "}"}],
             "}"}], ",", 
           RowBox[{"Transpose", "[", "j", "]"}]}], "]"}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
     "Text", "[", 
      "\"\<Uh oh!  Couldn't find MC data.  Try to evaluate this entire \
notebook and ensure the data path is setup correctly.\>\"", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0.8"}], "}"}], ",", 
     "infflatlandisopointisoscatter`alphas"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalSigma]t", ",", "3"}], "}"}], ",", 
     "infflatlandisopointisoscatter`muts"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "11"}], "}"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
        "NumberQ", "[", "infflatlandisopointisoscatter`numcollorders", "]"}], 
        ",", "infflatlandisopointisoscatter`numcollorders", ",", "1"}], "]"}],
       "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.650042734229463*^9, 3.650042786470915*^9}, {
  3.650042878498081*^9, 3.650042882999834*^9}, {3.650042915016626*^9, 
  3.650042926823575*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 11, $CellContext`\[Alpha]$$ = 
    0.8, $CellContext`\[CapitalSigma]t$$ = 3, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], 0.8}, {0.01, 0.1, 0.3, 0.5, 0.7, 0.8, 
      0.9, 0.95, 0.99, 0.999}}, {{
       Hold[$CellContext`\[CapitalSigma]t$$], 3}, {1, 3}}, {{
       Hold[$CellContext`n$$], 11}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 
      13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
      31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
      49, 50}}}, Typeset`size$$ = {202., {45.634033203125, 51.365966796875}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Alpha]$1274596$$ = 
    0, $CellContext`\[CapitalSigma]t$1274597$$ = 
    False, $CellContext`n$1274598$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 11, $CellContext`\[Alpha]$$ = 
        0.8, $CellContext`\[CapitalSigma]t$$ = 3}, "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$1274596$$, 0], 
        Hold[$CellContext`\[CapitalSigma]t$$, \
$CellContext`\[CapitalSigma]t$1274597$$, False], 
        Hold[$CellContext`n$$, $CellContext`n$1274598$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      If[Length[infflatlandisopointisoscatter`simulations] > 0, 
        Module[{$CellContext`data$, $CellContext`\[Phi]moments$, \
$CellContext`ks$, $CellContext`analytic$, $CellContext`j$, \
$CellContext`nummoments$}, $CellContext`data$ = Part[
            SelectFirst[
            infflatlandisopointisoscatter`simulations, And[
             Part[#, 1] == $CellContext`\[Alpha]$$, 
              Part[#, 2] == $CellContext`\[CapitalSigma]t$$]& ], 
            3]; $CellContext`nummoments$ = 
          Part[$CellContext`data$, 2, 17]; $CellContext`\[Phi]moments$ = N[{
              
              Part[$CellContext`data$, 
               9 + $CellContext`n$$]}/$CellContext`\[CapitalSigma]t$$]; \
$CellContext`ks$ = {
            
            Table[$CellContext`k, {$CellContext`k, 
              0, $CellContext`nummoments$ - 1}]}; $CellContext`analytic$ = 
          Table[
            Quiet[
             N[
              
              infflatlandisopointisoscatter`\[Phi]m[$CellContext`\
\[CapitalSigma]t$$, $CellContext`\[Alpha]$$, $CellContext`n$$, \
$CellContext`k]]], {$CellContext`k, $CellContext`ks$}]; $CellContext`j$ = 
          Join[$CellContext`ks$, $CellContext`analytic$, \
$CellContext`\[Phi]moments$]; TableForm[
           Join[{{"k", "analytic", "MC"}}, 
            Transpose[$CellContext`j$]]]], 
        Text[
        "Uh oh!  Couldn't find MC data.  Try to evaluate this entire notebook \
and ensure the data path is setup correctly."]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, 0.8}, {0.01, 0.1, 0.3, 
         0.5, 0.7, 0.8, 0.9, 0.95, 0.99, 
         0.999}}, {{$CellContext`\[CapitalSigma]t$$, 3}, {1, 
         3}}, {{$CellContext`n$$, 11}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
          13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
         30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 
         47, 48, 49, 50}}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{247., {116., 121.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6500427957661343`*^9, 3.6500428234872103`*^9}, {
   3.650042878822034*^9, 3.650042883241478*^9}, 3.650042927143588*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1287, 1040},
WindowMargins->{{Automatic, -7}, {11, Automatic}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 354, 6, 92, "Title"],
Cell[937, 30, 113, 1, 51, "Subtitle"],
Cell[1053, 33, 540, 12, 129, "Text"],
Cell[CellGroupData[{
Cell[1618, 49, 143, 2, 64, "Section"],
Cell[1764, 53, 253, 5, 30, "Text"],
Cell[2020, 60, 122, 2, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2179, 67, 93, 1, 64, "Section"],
Cell[2275, 70, 372911, 6119, 347, "Text"],
Cell[375189, 6191, 477, 9, 87, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[375703, 6205, 103, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[375831, 6210, 260, 3, 44, "Subsection"],
Cell[376094, 6215, 1503, 36, 61, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[377634, 6256, 311, 4, 44, "Subsection"],
Cell[377948, 6262, 1598, 38, 96, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[379583, 6305, 362, 5, 44, "Subsection"],
Cell[379948, 6312, 1325, 28, 61, "Input"],
Cell[381276, 6342, 1853, 58, 118, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[383166, 6405, 121, 1, 44, "Subsection"],
Cell[383290, 6408, 516, 13, 59, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[383843, 6426, 119, 1, 44, "Subsection"],
Cell[383965, 6429, 547, 13, 64, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[384549, 6447, 126, 1, 44, "Subsection"],
Cell[384678, 6450, 1209, 32, 59, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[385924, 6487, 110, 1, 44, "Subsection"],
Cell[386037, 6490, 1121, 35, 72, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[387195, 6530, 95, 1, 44, "Subsection"],
Cell[387293, 6533, 1161, 35, 48, "Input"],
Cell[388457, 6570, 819, 24, 65, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[389325, 6600, 197, 3, 64, "Section"],
Cell[389525, 6605, 981, 27, 28, "Input"],
Cell[390509, 6634, 320, 7, 46, "Input"],
Cell[CellGroupData[{
Cell[390854, 6645, 1504, 40, 148, "Input"],
Cell[392361, 6687, 387, 8, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[392785, 6700, 328, 8, 28, "Input"],
Cell[393116, 6710, 234, 5, 28, "Output"]
}, Open  ]],
Cell[393365, 6718, 509, 12, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[393911, 6735, 115, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[394051, 6740, 230, 3, 44, "Subsection"],
Cell[CellGroupData[{
Cell[394306, 6747, 8075, 176, 607, "Input"],
Cell[402384, 6925, 5709, 110, 426, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[408142, 7041, 276, 3, 44, "Subsection"],
Cell[CellGroupData[{
Cell[408443, 7048, 8274, 180, 607, "Input"],
Cell[416720, 7230, 5761, 111, 144, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[422530, 7347, 326, 4, 44, "Subsection"],
Cell[CellGroupData[{
Cell[422881, 7355, 8322, 180, 607, "Input"],
Cell[431206, 7537, 5817, 111, 426, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[437072, 7654, 375, 5, 44, "Subsection"],
Cell[CellGroupData[{
Cell[437472, 7663, 8582, 187, 607, "Input"],
Cell[446057, 7852, 6255, 117, 452, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[452361, 7975, 317, 5, 44, "Subsection"],
Cell[CellGroupData[{
Cell[452703, 7984, 9220, 194, 624, "Input"],
Cell[461926, 8180, 6555, 122, 492, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[468530, 8308, 377, 6, 44, "Subsection"],
Cell[CellGroupData[{
Cell[468932, 8318, 8188, 175, 573, "Input"],
Cell[477123, 8495, 5971, 110, 492, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[483155, 8612, 170, 2, 64, "Section"],
Cell[CellGroupData[{
Cell[483350, 8618, 7895, 181, 609, "Input"],
Cell[491248, 8801, 6090, 112, 500, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[497375, 8918, 115, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[497515, 8923, 3647, 92, 370, "Input"],
Cell[501165, 9017, 3568, 70, 228, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[504782, 9093, 119, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[504926, 9098, 4087, 106, 387, "Input"],
Cell[509016, 9206, 4316, 82, 254, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
