(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    368736,       7725]
NotebookOptionsPosition[    361831,       7493]
NotebookOutlinePosition[    362244,       7511]
CellTagsIndexPosition[    362201,       7508]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Infinite 3D medium, Isotropic Point Source, Isotropic Scattering\
\>", "Title",
 CellChangeTimes->{{3.61742787362737*^9, 3.617427885266508*^9}, {
  3.619592656668026*^9, 3.619592662680479*^9}, {3.621178701559973*^9, 
  3.621178702944907*^9}, {3.626744457954844*^9, 3.626744459455998*^9}, {
  3.6270128566699667`*^9, 3.62701287183559*^9}, {3.677299024329054*^9, 
  3.677299024855452*^9}}],

Cell["Exponential Random Flight", "Subtitle",
 CellChangeTimes->{{3.619594484416584*^9, 3.6195944880949802`*^9}}],

Cell[TextData[{
 "This is code to accompany the book:\n",
 StyleBox["A Hitchhiker\[CloseCurlyQuote]s Guide to Multiple Scattering\n", 
  "Subchapter"],
 StyleBox["\[Copyright] 2016", "Subsection"],
 StyleBox[" ", "Section"],
 StyleBox["Eugene d\[CloseCurlyQuote]Eon \nwww.eugenedeon.com", "Subsection"]
}], "Text",
 CellChangeTimes->{{3.6174286022468777`*^9, 3.617428710592918*^9}, {
  3.6410039396211576`*^9, 3.641003945296226*^9}, {3.645060407236547*^9, 
  3.645060444609275*^9}, {3.6772990291112137`*^9, 3.677299029295004*^9}}],

Cell[CellGroupData[{

Cell["Path Setup", "Section",
 CellChangeTimes->{{3.640928920990849*^9, 3.64092892141395*^9}, {
  3.640928986491934*^9, 3.640928986905283*^9}}],

Cell["\<\
Put a file at ~/.hitchhikerpath with the path to your hitchhiker repo so that \
these worksheets can find the MC data from the C++ simulations for \
verification\
\>", "Text",
 CellChangeTimes->{{3.640928926126832*^9, 3.6409289600754013`*^9}}],

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"Import", "[", "\"\<~/.hitchhikerpath\>\"", "]"}], "]"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notation", "Section",
 CellChangeTimes->{{3.617428538130481*^9, 3.617428538753331*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvXd7G9eZ/73X8/z+eN6Cs7/stVnbKet1tqXY2U1PNvEmcYkTpdixYqfa
cYudohSXJI4Tx7Ekd7lLsmXLVqFEEpUFIIleCYAASLBXAKySnRfwHGCAwZnT
5j4zg0KKvm7zGg6GwNFg5nzme7fznlvu+uoP/5+/+7u/u/f/Qz++evMvP33P
PTf/6vr/g375zK9+9oNb/l+0cTV6/Wvo/8q2r7i6a7u2g81fNXVj13ys7bZ/
TR1rgfGCzTvU9mHsmuXmL9V+qhud81mQ43fHvzt+fPbWzPPY8ejXQIkBgtpO
4TFWWaD+EQHYZ0GOl31PA6Dc8deP+HgEPoS/7Tv+7X7+O2f8nfC5u+PfHT8u
W/A9rTQ4d9RjBHt479/s8avc92Mfxzyfbb9gWn/9B2cXuhzOJv3bL+T790Kw
7X5+dsffOeP3Y+NvMeNUo/fomtTxuu/PHE8TjeIjfv7bfnk0+/rvj0S8o+nt
O/6223Yf/+652h1/m0fFFyNMLWPGB8hjkCzyzFiwtIZM9q/o8bfMOvz6MXb9
B5aLp3ptgaWVto/K2Pi3+/lv9vit+qx2+WZ3x79Tx8/TII253dAMT3PNQqiJ
maW8pB5jgG7id4bAkUfGAOCZgXwH/vnvhOvH/GeNpMdcwdD2Hf92P/+tHP+u
7Vp7zXI9gs/hVoEGQKKKQY4RHwl5H2PWbIWIf5ttv6iMXoprXU5XcGa+7SPZ
tRYbj6fbRZPujn+7jL8Zcy+tdODiiDgYE2sKjEjtRlOM3uYZj4P0ZwU54+cx
lDhY/CvBRMuMEyvcFtd/oDDVMzC4e//ujr+jbHf8O2D8/vpPq5QdDTsx1yC+
R2NEa76t1X9q+NsMhWgtENXrR2Vix17/tuGRkdx4867/Ntru+DtzbJ3w79od
v+XjJ0jn0/7KxBnOMqamI6gnJXCazLIKjELlNWQYqkCG/cka9qtBI/51xL8a
8oQgy8TGVybMNfJpr4ROu/5DC4unbfZAsbx7/+7s8e+en93xN3X8FgoHJu8g
EzVxMM4XKTZZZQrUVD5KMc7M3+IEhHOQpp4ZeRgw4QttzfU/GI0PxhO79+/u
+Dt5DLvj78zxMx/ypfQdT+vpcY2hdzqQXxh522jW+E6ZDyeGre3Xv3+lfMpm
Cy42vbShk+/fC2H8O+nfsjv+zhl/7cHeqLiTgp1V7DPGslBpLVQDGeP4+qsm
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
Ovl519xWLbp+Tj7p6L5k9KqyOP7YxQvMB3sO8igFQfX4gsfyJli/TmC/GuCd
mFBiAx5G/5XgD5kjkUXhOPUrfdK+cPthZIKzTfeZGdfEBM+ZjAm6h0fik5MK
BBH+kEwbnZ6lCMjoI6Rew7x8LfatsbQSzuX7AsEum623r98biyM9mFpaoSCo
uRN56s8Y/lzZ+W/85q1Kn5abn3/RlVKfpdXkzw9+88mv3HusPvmsDyVTZ5yu
2HKR7v+J9x+WDfyZIWDL5n+rUNVis+r80PktNPs437spb6dmEaJqhBpe0aDK
PTq/RVi3zsjtNOHnFOVzCtbXa0ZXFszDSWoKY8jj7ZFFHpxx7TXDelCsBJHo
Qyojvw76CgQ6nfy6hTXyDd/mchFpsew6JgOnZ+0DHgTB9PxC3e1JXqUZPQ2o
Xv/qT7r2IV3tGxPK5pEePOtyne61OUd8vlQqPjObKq2mqPuRF52Xol60tP7Q
keHLvl7JafnpQad/scysef/Mj15y5eYr6XaTUz19/W5/ILZSirLmK570w3Vf
kKp5b03O5zbiY+eOAZbiwiRgCKvdU+Ue0MmpZmERfk7D7g4O8kAVfLpCz2gm
Z+0puhkeztzGFt1bkulJM+DPNAC7tvOrc7Consy/vjqCBIgzMQMA3xbxK98v
Cr08hmOJQDpNX2bxwmS3y4WolC2vEkFAHIWQq133lqndYqXV+NT0SHLUNTx8
qtfW7Xb3+QMIhbHJKUUV4unWcALisY83AxOf/0klp+WLdx49FZmMq7OKNoaC
5pwT/lwgm0PU6+0fDE9OManHxB+86E/MwY6a/3cSy0wij5Pfou/zlM1sYXg7
DS9Bq7Kvnt/C6krNiPTRQs+wq1PAPmA2C5x9WFxPM0MSPjRjBmdf26nU4QRE
dmIoh2bjQ11R2W9BNyM3x9KDGlvbOGO358pr7FDg+kYwM3bGZg9ls6owhPUF
lSAgpwPMZmq5iKjnS6Xdfn+3y326p9c2MDgYifjTGbQ/ubicKq81bme9298/
X7rrQC2n5eFXffHVDTICiDbQ3DK3MJLOOIdHTtlsfcFQdGZO+yjOZR9OQDH4
iMCfLvs6zTqNX80bDyTGx3N4GvBzxrCfzMwWw4qP4+pkxta5rk6Bb7Pu4dSt
VefF9aypXGB1YtmC67sJ7Cfh1TQ2sbcGOpP1n5PYrx1iuqcosbCK2PfLJ1xA
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
flPtWoxURuOKxdaG4F3qmcWlSsuXYllwp+BPlWdChS/8pJrTcseRs5FJIu1T
TEDa+VnfYNe8N8J/a41g33ve80/xlZIyz9z+03t6PEPKCfEXpni6T5nchnPj
F4H/80/P8ir+VJ9nRYH+5VGi4k8xezCMfv71qWeUw1zROD3/f/hDH674qB+v
ZWBqKv7mF+/59W9qzsynnhaQoj+VqV0P+Ql8f18yrew/1t0D4VfnmIX5LVJh
Ps0aDUYjfRDqMSN9xgJ8mO4japQ2xWvOSrIPlMZJUw/u4VTnScsDec1Tdria
q2ysr+cWFhDjAsnkoD+A2ITA1O1wuAY9CGf+RCKazY0WJpGsm1hemVpdm9nY
nD3/zsy5t2fqbzVDvSfvJXwMFfKubyIZmF9cQvIQDSAylh2JxQd9fsfAAGIr
gixiJcIigm+yMIkOm1rfFOhBge173IVm/vTyOuFhNsnBSC43FIngvlAm/j7x
yU+iCQ39pC+/b3y7UsV8/Z49zBocwdUeyeUr/a7J22QT631duaGiS2v3HnQq
OS2PHB3hdZOAez61VQ/6dX9KsO/r3/yW6u08eOg5JPcUtVvZuVIKz8w12Ifr
PiT6RjP3/fFhiD184KCu2/ODH/zXi6oVhQPpDCH97v/Tn3pG/P5qSfu7q0E9
or90xRZX/vHd/4BeVZH324f+eHZoBD9m3/0PXlQNbopgsVLLcSWyYm7+wQ/R
zgce/jMIN52xfh8zv4VapoGxNh+zf4uBgj6In1Pcp1oc2jPm5wQntxhZi0F9
KlYmihzDz6mfydnKHE5IbYIxHYcLOh7p6vb27Na5/OJiPJ8ficXcHu+Z3l4k
vhBuEOPi+fHs3DzSXMqRBN1mz1f2KJqxuqG+ih/5tmqKfmQd3zhSeww5fjRU
RFuExUi2wkSkLhENEZT7hofRaJFCRK8yfae0R/S501HEvtMjefz8y3qn6a++
1+XKLy3T0UDculx9ysP8/Q89RMcBFV/o3b/4xbi2BpD2f9IycBAp61hCcMtU
c1oOKX1ahiaWWRFAaO8Xlv8TD4to1jzC7Sd3310VSk+gCad3aPj7P74V7byz
msa/774H0eTz69//wTehWQZX0/Oz3p2Yt95fRLjGn+pSU+zl428q38Xl//rB
Ey53YKWE5mTf7Py+B3/38/seUKfufQ9U+IVA6ZuZx+f/l986ifbf+5vfqPM/
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
RNDsz5N2f/GLX/zTX/yCiH3s9IyORdo6ZvIk34uO9xk1vRQ49me82k+h+sGO
FxveR5b8TFU/leJ2dHNOXOwzmnbKuQYZ/hLrXqWvgoPaOeeQ900LPu20G3gi
lQsw8B3at4iL+Wxlvm26v6UseWwXwy0tQ9MpLeq5K/lMXJ3YpnUj7NPNNj1z
ORDsKMBHAzsZiQTcKf22obGpf2zc/SzjgIc0sPpI5x7+8PfLf2rznPvZc86n
TLmhBRMEcbD8zd/dqw2FlgvbKk3wui98wcG+yfkFnr+7N9wf+tlwhD3s05/7
3LKUd2BnYHLqiWfP/PK2250n1Whm9jfHjnX09S+g7Wf8Uze5sFgTbbrjN/cK
2NfaE2/p7p3NFbzaX+m8/i/f8MWvfNWDfdwOFDf6x7/62hOJvokJou8Fz7mb
LHaHfS+qrJ+c+FN7PsW8Ax37BAR0c2o89vV5r/9xGPt4BHSroTeRnPsRzTlx
+JPSDVB/tV2RCzftpFA/XZ69vK1Pl+nLq0lfnks3AJvZUYfnkSXZrfYTdSQS
HfEEPcpHhD9kzqkiffhuWS/8iXO2oIac9Klm5c7qbysQdu7wnI8PDUdaWl1E
U+Gd+3jkHi8mlm+jSIexSB7lZdync8CxVKoznlD9RJaLOy996UsZor39ne9U
vZ9xfu7zuYIjCzZ1xQQDTLSz6zvf+55jFn33e97D7mnsjL3sZS9jv33FK14x
X9jWsj9Gx75y/fUOBL/jHe/gqV97Xz+7k32Rs/mC7Pn8u79/17ve/W564s9J
PbC3kQNT03TfC3QKjhkATDpACJjnJp8a6iezP9ztabTXb5DDu0ConzbscKR2
l6CmnVXgq9g7XaxXYZ/7PoEvMTN61wHJfNXbdqSP79Cjkz4O9Y5k2klvq+Yz
7OzFPpRKh5pbZgua1jKLHJ/RqNN6zqniemvcdds35Om5nhenyjcyyytPPPkk
BHYg3hkc95/gb5urihgOUjhguKk5s7LiFQGrP52mzi4HcW66+WbQAuqex556
yglBqPyf3/rOd5y/ZySd/vC11/78l79iv33DlVfSJ5/vv+oq9kd+cNNNrn2L
ffzBT37C7vzMddeBG97f+KY3MVjUBt6FV2JqfaMmFEouLvlQ/azT7rznE2Z/
KllHq/oF0nLmqH44Avqvtj5S7MNJn6rIhRJpRzJ91lVmqmlnIJk+LeOr1FaX
mqsdLRtxeQUi8xGmnWWJf3pllb1OMxubCOPj55x07As2wYf76lUsLwiuByOI
zMVUiHb/8eMbe/YYpwBNPYba+WSMpqAzyyvR1hYkB3HzIUKxX6GWVtEC6j1f
+drX2MO++OUvqxIQn/j0p9kDaqKN3/7ud6eXltk9zbGembV1Yuadnde9/i/Z
3/BMQ9i9ZzaXf/WrX83uvOfYManypXTDIa0T8wsZqPWl8nIrv/r4F+P43Hxt
JJIm+F4ohk9D4BNRj/d8urY9MvWzz7mXsY+/etN4X0LoN/P6JN1Z4lFIfpRc
Aw37sA7PBEf64tz417/LhZhroLV3enzC1i0u3r4+ZW11UIxPgD93UbX4zjZf
qItE+K18SFenEepVZD5gL4ORuiehnr6hhX71hlBP5HGypmYKVU8+80xqYcG5
vXW+dOTb/JHvVz2SyAoJOCjeI+ueMvCxjx09vWPpGcQJ8+73vpdhx0te8pKl
7aLggfGMPXd2nRnmPffdD3pglnZ2X/7yl//3P/qje48df+LZMyrbJ8L+Bqam
2d//4he9KL227j6fHzp50oHmntGxStav+hqZ2co5n42PJ8G2T4T6Ob6Xpo5O
Vdsnhfpp9ztAk0/P2JNO/cB+sxF08klhfAOQT4OS9TM1fAp6X+zI9D4K9lk4
PJViXzAOTyzPTrR3jomMT8w1oN5OTa6BMvCkxNgzCuonWLhLxWVdsd6RUX4r
HwJ8RtNOo/S6H7onkD4i2NG4nniIuCPgVHNHR+/AoINfMvZpDxExVUyQUwZd
fZDqh9F9G8+v7ig1VvZzmVlZeeELX8iw41Of/gxoAXXPRDbroEx7PCFjH3vm
tPb0ss+++a//mrE/3POpQsDjjz3G/ob3X3VV1e1Z2H7jm97E7nzta18LFX4W
h2cyzleVXFxSTVEQ4Y/9tqmzq2dkxGryCThejEwvPvf6gbyP/db/2DMQt6ec
dBDgL/ghJ8cHq/AKdXhqTZ4g8MnwJ7e4uO8lkDw7BHwel8sI53Khox6HfZjS
h1K/6ns5F++sA31V1JO8ZzrgK726e0dH5eIyepqvcqkBKqfMbC2k7B6g8VlM
ON0Lu24S6FHQdCNHAJV48BqenKoLR4hIZ3FMeaiDjBXLKFUNNNIBnTckT5x+
xsGO3zxwDPlpsp9456Hh5I//+E+Wijtg/OGXt93OHsCQtDnWw40RPLv/DtvP
9lTwd/2NN7K/4ee//KX7fD7+2OOvfOUr2Z1fv/FGL/aVXyNP1dWzz/63F74w
e1j2QlnzJ748t/K10eh4do4If9quM8rkU4pfCU0v4vyTbHrhsn5u0Zl3zqa6
JguOF8fCQWm3lt2e/E4H1/ZJnHwGsr9Pa3Tx0+UCpBsIeXY+1zDg1ngCeh/Q
YAYiIEHmMwC+pG7gaU36nFecm2tALC68nJFcWKyLRBxvm7XFBQoyGOyfNaR7
niZJu2kn4mPZ9DhGDFwoWh63sLH58GOPHR322UEhXQcUyLLW/eKeG7/9bQf7
+icmVMCXWVtbyBdqIlH2sCvfcKXr7xWeKld96IPsAVd/+MPWiT9H7Au1tjlP
5tTK2re++92/fctb2J0nTp0Cu85+9NOfsc/+7Vv+Vuj5hLGPe//JvzynSnp6
eHp93dbw6dFKiKofIelgYXqxb7cWPJ9BuT2RjheXl/0huFx4b6fc4YmhnrS4
QQOCsMtFfA9jDnzlOhc3RmqS6dt27MqIy4WHPBD7KNNOgrfz8HWdy9dHopOL
S3aot+hdvx6sq5M+3vQNecD1X5gTWiAdeI6deGh1u8hu5A7P5YE/FArPcSAI
qoEAJqq0PxUO/sVr/6djxZT9n+753Bc+P5KeYZBUyi+897188MG9Mbu+8eIX
vYg94NEnn5L9nyoE5EHQEfv+5E/+NJvLO+6XG7797UhHpwPNY7NzQubdeUP4
vv/9PvbZf/nRj1wp0NXNDSIPhe2+5GS0rZ3db5r18zhenCloRfuj5B14Z8K4
17eAYB+F+vnLuZd9+wLvw6gft9sI7zcLxPHih/dp7Z24w7O/8p3p57f1kf0t
pnl2osNTcLkcgqA49gRj7LzSF6y9s8L4iN7OqoGttbunZ3hEYHzZoqf3SZvj
E6gfwvvkDHtQTk4c+/irtJbjECme3TlTWzc+M6N9WK7yMcf99jLQQBn3/eiA
zg+ld3jEQZbvfO97qgRETSTy9+9+N/vRM/hzZEFh95/zbHmqps6J4M3n8gj2
CfAni30f+djHFirTzrvuu5/RPXbnW9/6NnZPZis/tbTM153NbGw5gHs2EgWb
rgXgy2yLugP/Uo22dyQmkhZ5B0rOPcldfxDVzyjs4HwM0O3pMb1I1I+XvZCc
u0AAvXrfpkAAAyd9hGlneQzLY7TdwLMv4EwfCfU4GzC4n91sV5F31AnDn58i
F5q301PVy64z4ZYW4o4GLeQZ0T08xaCddlr4OdWXcZVvU5x2mmINiF8dvb0d
PT3gg3kmmJPuOTpWCCFg1Q+jwsHyN3ZvfylfwL/zt919t4N9jz31FJiACLe1
v+IVr7j1zjsPJb9dBjRC4ad7/ulfvu+ocnLw4cQTJz987bWn6xs41Q+wvnzj
xm+yv+HXd97Jbjd2xr74la/OF3e/+Y+lwOD3f/xj9jz/0U9/Ojab5anfqZpa
9tmrPvhBedetTvUDXqepjc2aUGhyZRX3fE55P/oJOzgd13ztMHHmiVacwZ5P
/toLdntWsY9bTyDrfUcR9PODgLIOqLV34nqfKtARSJeL4HKRAw4UpQ8V+4xd
Lnh757QX/kDIoww8QW+n7G/JbJZeg+m1dWKFi9bb6V5qqPCnCDi73j9I4BN5
n8svcMaHUhhB3QtmtqmCwomZzLO1tTkvuqmQTr7/KNBQ7YGpqp8qphzr6xud
nkaAjyHjm978Zgf7vvvP/zwxm13MF5YK21MLi/HRsSfPnP36DTf89z/6I/bZ
vvFx5+f7xje96Qtf+hLw3Njbe8OVV7JHnq6rl3N/zlj1Na95zdKOyPt4BHzP
+0rTy69944bbf3Pvxz7xydTKKrvz3e95D7vzV7ffcdPNNz8bigg9nwz12Gdb
e+Pgjj9Tzyc7I5lMfVPTjPQaJ0t+fM+nOPbUuj1NVT9FvxnQcmYz9oRUv0Ak
vyPtN7Nwuci8T+7wxHMNBsk+pdJH5X06hycQ60uSUM9+2klhfLRQw060rW1w
atqdcAq7rQNkfEYaHy7z2c05cV2PMuf0jy8uhK0Vd46deAjBPtNz1DiIOGFW
i8W6UGhtd48XAfkfwX3HH3zr29/+AsKv//XWt7o/6I9e+7GPf/KT8hNjcHLK
kermtnJy9uHXd9zp/FWZ9Q1E9bv7gQccx+aXv/a1zGbOeSbfcGjFueKKK55p
CPHPfPbSaIr1sE9941vf4iMP7g0K8IGJv7Z4IjY4aGd68fR8VrsyPPCnSLvn
cQQkS36+Ol6E7auH1Ma9QVP9Lnu1NYX34WKf3cATXNgnnMGK0gd6OwV75wh1
5okrfUqHJyz25csbSbRbihDg4+GP1xF4byeKfeXXb2J8vKWzS5b5VGsatNin
yrDDcQZOx0Gxz5efk8j1rFEPwR0crR55/PGFjY0A4Q/BRCI+6vww5zehtrSh
ZDI+NCT0gppaQN0hduUnvveLX/36bW9/O8j7VirPH7Dv5f3vf79T8on4XuYL
xXB7x9TiEv9Mzua3GcZlNreEZz57OVz3xS8xTBydzbqph0rm3YOAuOkFeL+a
y9dFIuPz86aqHzf5xDyf8tiTY395SPXz5B3Ubs8tPOduR/1U8Xah8yTuGl2q
8OciYDXvoMS+QHut1ai3yZVsi/AXV3d4wtjnj/RJG4uqb10QpY/v/BGO8w5K
eFKho07PLhKt0qfyt4C8j+LtFHhfaqW0m282V/A/57QgfUS6x5kiANKnlfYg
xgd4OMH8gjWnI576SHRoIsnfkz9/wI58273HPwIaUT+cA7o4WB8OL25tmTph
FMUv1Zl2fGSUkbvl4o6cfOfNn8JJr6y+4cor2xN9Xp8VYHpRZR/kJ39fcvKP
//hPng1HpCVHZqofiIDJxaXaSETe8afDvuo7Z/dNtXnOHd7qTuF9msmnN18G
Zq7BjhdtxM+U99l1e1L292kHnhaRduXM06q/Wl3guSWTPmhrAz7tNFjSZ6r0
WQ88CUpfMbtdjLS0jsxk6JsagvK3XJ5Rp5rxUbvI6JDHf6Sf+OBQc3u7g3Eq
1MM/6wcH/cw/eQScnl9o7exUReAR+EN6z9zz9ne+s6W7h8+84wg4Ppv94le/
2jUwaGr7ROCPkcFrPvrRJ2vqwLS7sOddK/yBL97Y0FB7X7+54VNQ/eimF43q
p035aTc70HnfgI73+Zx5+q+2VubfCWKfF/4Mpp3C7FdF+ty1fe7AUwt87s/O
h8VFWeAJjjqTKOr5SbKD2KeddvYnJ8Fp5/wONdcgAZ9JVyd0HYOcnHugs8V2
yOmiXjB4Zwp2PJCxM7O4+OQzzwh3WhzwLw8QBPF3CEPJ5Pz6Bh6HNx2Buj/9
k888+4tf/1pufRFw0H1qPXzqVGp5xQ3RWMOf84R3nv//9P3vP/r0aSHux3ed
CTtQ5LFnxpNz35bzDjP5QqnsZWHBR9yv2vEiE0AF/FXzWZW0slnWT5t3MIa/
iurXx5k/9aaXdbEjWgV/3Vz/mJ85J533yV8bAn99XvjzbCwidLnoeJ9mW58C
+zz91XIrLNnbadZcTQyzay0u0mtzZ+bQX80+aitcKDk+Ou+zijOYCXySn7OK
d+491h5OFzKMWJ4Ss/ZLCx1y55QP8ImGFOzzB4LlWTE4T+a+/xj8rUHwV/3p
7+599frrZeyjzD+5Z6CAg3t03vdUbf3xxx4HgY8++ZwhUL+x7Fx9tDGVL2ip
37QH9QoS+6OofiL1owf9XPjzel2wamt37KnvNyOofsSww9HFHBDsM+oxk3VM
sM6lz7uZ3RT1wBIzuy4XL/aRVtPKeh/F3kkceJrLfKXXKWN8jPcJGXbQ56lC
PcrA07SnWmJ8BqinjjBoJpy8sOVT1xPQhwJSp55+enZpKXDs84mGVkzwXEU2
PVfZcyFin9H8030mzOfyAuoR4Y8YeNeofsVd2ffCN71AO/5sVD92Wnt6e8fG
KFk/6DgdLwVQ+8P1PnrYQV3w4rFS2Gw14oJ+btOLNfDJCBg49oHAhzo89QNP
UO+Te8wo/dVq4NsCxT4t9o0TBp6mmT5Z4zMifZRpZwX+yi/SkZlMKcm+rd9L
q5p2usDnzDmJVdX+NT6ts4Xm5xSD6nTGRyF3ONcTTmNra2J4+DJgHx0EfU5B
vfkR6vBzTQJB3uBE5H2g9cUa+0DTi4L9ibvACHE/6LW8uVUTCk2trpnmHbwO
Oork56lhBKPuowZhhy3+o+VGP0PeF/f2YTqzRN5RGaDkB+p9ptEGow7Pfk7v
s7N3DlSBLycofdaZPudJ4j5nKKTvMNGAKX0UhyeXayhyH8Vcg9bbOZsr1IbD
qZVVZFMDAnl0i4tS5oNyDYHOOV1Fz13T48vD6WeqiZ2D0sfB8fFQU5Nzm53C
wQV25AcD9x8cuH/q6JigHwR0yaCcCiSyP87oC4CgLfZVe/aI8CdnXWXJj595
YsNPrt8MpH6DU9ORtg6t6ieDoEdPUdg+8aCfUcidm3wKWpKG96k6XrxZv/Im
9wBTfkKvdbfvXmuLVLupw7PcXx1MukHJ+0ywT0P60GhDQWXv1Ha5EMU+NfaV
X5ud/f3dQ8Oyv8VPoM+Pt5PO+Ow6W6w9LT61PCL8LaytP3byZEGBYux+B/Vk
7PPcY4uDOZ1r1E4HhGbOeuBTOT9N2Z+MfRT2R/R8gtjHCX8Y9lGi7uxlzrCP
ISA++VTn3JVbjbSTT3rHCz75tOd9hD221h0vKsnPDv7cnKCAp26yr1vq8NRi
n0rp60NdLnKeHcI+eGuD+zYGSvblhA5PfkJu1N7JzzztMn1K1OP2pMiod+hv
qc5kppdX6qLRue2itcUFZXyeS40W+IyCDGRjJ++4EFwZGtSTr/n2SHfA3eBQ
iUexQ1w72D648MCDxzd2d3mM854D7sj3VxFQhZL+OSAoAi7ncmPTKRf7VDRQ
5f80cn7K/QYiCErzBAr8gX0vlLEnZPgseqEQUx88CFgQEXB6bb0mFE57437k
nLsy7KAO+uW5hk/X8GnXb5YTVL9h7zXZaOzpuhz1QT/aTgejfjNt/v0y8D48
3YAf9/tv4XJR630Y9qnhT9NjBmJfWk33ZN6nn3ZuF6Nt7UKgT/XStg700eec
dPizEviUvM8P3bPgVg6nk/CrevvZmprpbBb6LIZ3+OMBbhgEAvKnvbt7KpvV
ul84k+15a+xTyX904Y/ie/Gj+nGTT7HjRYg84LzPOZ0Dg+wEi30S/MlbjWTS
B3e86BwvPuwuXNKBwvt01E/f8fJ7cXjyHZ59CtSrDjwPeZ/wjRpQZPogl4sw
l7aO9cEOzyRK+uiZPjrpo0QbZqvwV3o9js3ORlpbecZn5O2URp1iiM/I4hJI
el3naTFAPS3eUYBvJVdo7Yrd+8ADzR2dDujURaIPPfro2nZRTesutMe6Y4kE
hHQq1KPcX/6s3XQ0p+6QKZO+fKEhEhG+pZu6HhhkCzyIhtDYM1jtz+PX0ns+
ueO+ZCAE9FVwXXrHu5U7GwpNr4rLbZGwQ8Xq6amNIk8+XRCEJ58E6qdU/QbU
8DfIQd4A99E9Au9D+s3c3UbywLNnDZD5TOFPy/u0dS6mM88+zvJqsbgBYnyA
w9NK7MtRSswqRhdnQS3sckHsnVreR4g2VF+MddHo1NLyLGfvpDM+HvIM0nyK
eZR/xqfAPiHLIJI+FeqpENCI3/3q1lvfe7gagP2qC0e29va/dv31zm/v+e1v
ETY3nkrXNIRU+LWN/lY9HQUZYgBTUOcb1TcyMjg+TtD++J+FkH3QcEDZ+akS
/hDsWyFQP6Ln0zWA8dRPiDzIRfH8fltV3gF8afclJ5tjMXPqJ6p+Ro4XIu9D
qV9A3Z7eehOi6if7KrW8z4L6gX+JyuTJZ9tlbyeIfS7iH4HRxRj4+Hk4sp9d
Z3TZVpk8TXkfOdC3474G+yaS7b291t1lFH+LrbnF09+CAx/iabGbcFrqehx7
4vDlwlQ2y5DuxS960Uou/+Obbrrj7rv/5m//prSu7tQpBLnWC4WHHn4YIYa+
D4y5FCYIw9/+ufpQaL24Y2iAgTPvdOcn5/lUqH406ifgoKz60dkfJe1uR/1m
Ctt1jY0T8wt0+HP0FAvVr3JlM9joB0l+Yrdn9QpM6PYEeJ+324Qy87wM6/zc
WpgYRySNOjzBOhdY6TPs8FSUVwMuF8Tooph55t1VfcR0Q7L6NkyZZ59CgQ+m
e5y/xbmhUfq2cmcbGmY2toLq7SQm2YlpPueCFsicU9XZYoR9ygmnGiMcNIkl
+hjSvf+qq9q6u++69152z9zKau/AII5NDBAffvTR1Xx+m7tHpnso4zPFQQ77
zNnf5EwmFk+ABhgE+7TWF0MEJLE/sFqBQgD9YZ9IAGHs0+UdxrJzDU3N6UIR
nHyqJb+qyEJR/XjjupoA6uEPRMCjTvnJmILDHx9Cj1n1mxmRPuLAs89LcrUd
noGQPpMuF82mWnnUSXG52HV4EkINnq7drv6BnuGRWdTeiWT6iMVlAvyRZb7q
Bc3Q0mmv8eUgyDOYc1ZGiMJc8Z777mPY9+N/+7cvfvnL+XOIDCfiWm0oPD49
vV3BOMohYyJJQzTCwaXNzc29cznoWyrDn0L+M4i9K6wvAO8jsj8E+yyEP2ns
ScI+iumFvfaj7R0DXN6BMvbkCKBF2MEg6KeeeQIb/SioJ2AfuMkdR0Btu0uA
vdbdCt5nUeeiJH1Ql4trdAGAD/B2wg5PordzzPOOSDnzRBgfF20oqIAPxDs1
7zvMsytyDQLpS62u1YbD2cJ2INNOsLMaYHw0jQ9kfDTSB28jotC9nBr7tHgn
cz3+fPLTn2bY9973vS/U1CyzNuT09PW3dXUZYR8Oi/wNHPXce6x1QAT7JAJY
7RmAMoBKDrimYH8CAURsn3LqAaF+WslP3u8sJ/5csY/C+1TYN7myWso75Ap0
+ONzxIbwlx/36juc5KenfnizmU25GUT9EtyNOEgAvd3RjtUTaLTmcnmmvdYE
l4uyv9r5UhPrGp+nsNfJgvR5HZ5ic7UO+Nzaak9/Ne8Q5u2dAPULostFm2QH
qd9stb96p7W7e2Byym2x5gV69yWMkD6v0YXK+Gi8D+jtBMFOpfR5h5xif4ud
nxM/EHaUb2/u7v7pn76EYd8nPvnJgheDtCc9N//0mTNBYR+NFYL/l0MOSDOC
UjKA6PBT6fykUL9Vbd+LYr8tj33L3o4Xou+FNvn0bDjSZf3ghk/nCtCeSMTH
JxDVDxL+sG22hMmnT9UPmnxC+T6340XwMfI6l8Xk05T34fxOQEaLWJ+Fw7PP
UOmTp52g3udjaZHrdaE5PDmlj7K1wSzSrp55CqSvPhKd9VZ3Bhdm9xtqCCTN
5z/BR5twqhhT+URb2xxXZ0tnl4A+2pPbP/fAgw+6vy1eKB35tn80pKmBB1oa
SMwAotYXwPFiNPwEUw8I6aNQPwvgA3mf3G6tK7hWUr+pUtQ9lM7lVUkHVPij
73PHDZ/0safHUS9fkA0kvwoDkseedKsnCH+mM08eB906Fzvs0wJfv5PsO1zk
RNH7+F6XISDSXt0yjLtcVEofr/eRpp1crkGFfabRhhl32lnZ/6UDvsN9DbHu
wemU6/YkTjsXvWsaXBGE6m/RdXW6Gh9d5luHd6+TBL6cAvXyXJBN5WlRpctl
NPm3n/+cAd+b/+rNOAY5WCafJ558cmFtTfUY/M/aDUXVU1CqDmg0/wxE+1P0
vQDUT8BBGfuQphdB9RNwEMz6uTlZyPSyo1rqR8w7lKifd78DgfodfnQSf9A+
96SIejkO/kDqlx+tfNTZXTyZMtOxJ9/qWb7+64CvGvFbr449Zd0NYX+BRNph
hyfXOaPKOMjphj7Daadi5mlmdEH0PqNog8v77KadxDw7LvZNr6wKpG+OG3Wa
8r6KGcCG9K1A+4lA3kdhfLxaRCwrs6F7HvhTOkZcQHnHO9/JsO/2u+6yw75o
c/Pg2Jjqs5Tj/v0+OKCIgMGyP/rkE38XZDD55N6M2TW90IvOtG5PsOEzQ6B+
qfWNMw0NKRPqZ8H7+JknkfrxpdYjat7njj2J/WaC2kXhfbqCl8BiDn4i7Tjp
66+Svmq16YDVzFOadorwZ5FnN1hTm8eUPusulzS3tUGNeuXXXUssxkifXa5h
UdrQF+i0k+pvUbk6jbIMIOopsa/iaYEYnzjzdNEks7TkDDwn0jMUpJPPwOho
Y0urH+xT4SCChmozDMD+UvPzXb29phyQNv88L/18DTb9gZEH88nnHo99FoZP
SsuZteGzPdHHUz8t7/PmHUyxLxDJr2q34Hmfiv0JPkbB4qiV/Iywz77dxY76
WYh96LRT7q9WiH2+0g2UbX1q0me/n92/0sdIX20kQgE+u2jDslRYTUzzgYyP
pvFVUW9D2kwUgMbHgRqEfUrGx87jTz7FgI9RPzvgY2d+ZfXkU08GhX0u6mlp
IIp6HuxramubXV4mYp+R9cX5aWrdnujkk1r2EpTqp/J8eu0uIvvThtxVyx2m
19fPcqofDfiwjX6uPU+Rc7eR/LwzT/tuT0rKz7V6uoZJrepnzfsEvU/4G+jA
F5e+Zun/5Y55q4stTAee4LRzeNND1WXgG5WAz2t0yQl4pyxyyVfTfNoaT6rF
xZtnBzN9PPVjpG8olZYDfRRvp3bOSR91CtgHvmlXVbgonC2ivwUfcoIyH2HI
CTtbVAhy/Q03MOz71S23mkIed5574PjxwrnzAcIfyARxGqg6ixsb4abGo3O/
IKqfFgGpk09F2h16eldtn6qxJ8j+ELdnxXcNFFzzk0/l2JNRv77+XrXqpza9
lPeHGgb9ZPgz7bVWOF4IHS9eya88CdROPnVuz/JeIT+91j5JH5JqB02e/sQ+
ceaJ8D7wfc6Ydw5AXVarq3OxIH3aVLtA+uoY6dveEbBPpn4Ue6ddjB1hfEio
AWV85dt2dA+bc57nO8pI6p41v0PO02fOzCwsCHfuXHjOPYEwQXMdsPTd6Onr
m0ilLLCPLv+p3u0QJ5/WHdc470MIoDbpAKbd7caeJQTc2DAyfHrbFCkVZ/lx
SeIxLXgBvS58r7Up75NLrSl6H1hq7VPyIwBfZU/fOpzvA79snvSVd/aZ1Lnw
7yUgn6eY7FPwPk+Wk4v1YR2eMO9Tr+qjRNpx1ANfO877SXdPX3s8Pjg17QAf
4m9RmTwp9WUA/FXy7O41R07zUejeOpBhB1DPVOND5pwV1KNOOAUOxQ8YtUeF
YuzOts6ueP8AD3YC6sl3+sdErR10uxRd3KsLhXL75/mZMB0HEezjEPCcCgeJ
vhep8NOLgJLt09T0gmCfO0uRlzsIDUvOAbDP22/GIWAxXUm+s+tDWzyRSCbp
kp+r+qlSfuqwg9LuonW8yAjIw58NCOoifvJOB3rBC99v5o435XyfnGvwL/Zh
pM821c5hX1Xm0+p9WqOLkb1TtaLdMM9eLE87va8LXOyb2dw629CQLWwLsb4A
M33WvZ0+LC4A9hmRPp2NE3C2aA2TFqQPwbKxqan6cBjEPvwIf79/1BM44NTs
7Ehykr/HfbcABuGJ7I+QetCUvVCEPzvqR8m5U7J+/PzTeXfqp+Js8lDEdxo+
nasHyvs8AygZAUG9b8Kz0Q/ueCEH/XxLfm7FpST84dQP5F98zCFw3qdCWwT4
El68c3gfhfQJc2PB6yLofXK4z9DoQnK5lGN9ZIuL+wTG2R8f/yEsbtjpHhph
x9reSanu1Gb6vMAH9LfQUI/K+HJqxocxFHEXA4nxWXArIoSt5fKPPPaYBfbh
aOgHB/HvjPBt1FI/FQJC2GeQesARUM76qeEPm3+q3ihq+83knLud48WBv8b2
jpFMBpx5opPP8kiKQv3wUmuy40W/zdaV/NxFfqrhpxx/A70uuNuz20fIvcz+
1PCnVfqIvK+ys6/K+/AOT4XYB9s76dgnzTyN6lxE3jctYZ/W6DKj4H1IuiFb
KDLSl9nKIbXVhvbOau+TlcWlOomysrjwiQaqsZPubIFSDHpnS+Co557jJ05s
7ewgD9h9zgD+jHAQUQMhF6g+/06X/1TTTtkDQxP+SOxPyDuoc+5mBBAkfW7J
p0/elzpc7hBpbQcdLxLwla8/ZfddpXADxT5B8ivzPl4PIscc4IQ73bzhGh1d
LHAKT+gxB5f3uQvc/Uh+2oGnjIDlVPsagNEy/Amkz1+Np5vp8+h95qSPWl7N
RxumdD1mRpk+l/0pGF9VSR+cmmqPxwXgk/UIu1yDQPpW1PBnbXFZF/tbzFrL
6KRP5eQMBPWs+VptQ0MyPRMI9bPggBTtT3bC+Bf+dJNPA+rHNb2Ikh+o/Wmr
remqHw9/UtiBz95S2Z/qUlDX2JhcXCJgH0D9yHqfL+on8z6Xj6i6PbWOF1XY
wSjlhycdKMAn9GDbDTxVLpc+L9ZbiH3Cuw4t7+O7ytWRdsLeIm+Xgm+xD3C5
gPDn+FscvKuLRqeXVygFntYuF5z6gUl2K5eLR+4JzNyiwz5ryOOplsVhhI6d
7niis6cnWOwzxUEE+6AMIDcClXCQbvsUtD+B9QuBd1z4s876ySBo4fbU5dz5
nnkl9jmvehX765+cbO3ppVA/r94HS36I10Xt9hSbzSSrJ4B9NpKfd3+rEfYh
wCcIfzwOBqj3aVcXJbg5Z8XiEgjvE/U+20g732aWx4Av73zUMz4/5dVqma90
Y3xuLtrWRpl2gsDnfKyEm4A3w1rgUzE+ir/l98H4DPycWtSzBj4H9ZxhZiqb
PVNb597DH/6R9MmnNQ7StL9qCt7I+UkR/nxHHoyzfu4zXNb+Aup44d2emskn
MvZM5wqlirONDdDtifpetEmHvIx9dLcnvtMBxz5wpwO+y8805iBbPYnUL6bg
ffqBJ63OpZpuUDs83e+PW+qCK32yy0XAPregFTV56hlfkntnRXR44gEHR+Or
Rtoh4PPmGkqnsaODwZ+d0mcRbUD9LbzSp1nWADE+ke4ZaXw4/IHM5XKKegKK
8aewt//Agw+qPotAoYuG/Kd8sr/iwYVUdq5w/oCMgAbaHy3xB3R+yrzPJ/uj
5B2Ehk+EAPL6giT2VXlfhsu5K2aeipTf4ekZGYkND5t0vFTFPkf7IycdwGsj
0GutKHjJgaqfRcyh38OP9L3WcUWvtTLmYOLzxIGP95eWS7YJu9rtpp3SzBNA
QETsk6mfUOSiDThUn1Tozj5T0ie7v2TS5xpdSjtqI5G54q6g9Mk+tAUv/Akv
ap/RBgH+ZOwjMD7noqfHPlVtiwr47BJ8fiCPxykc9dzz2MknVjY3KfCnQr2g
2F8yne7t70c4oDAFRVIPRO2Pm3yqttwaeD5Xvfttgacr1HFtMfmkxByErt3Z
ShGTkvpxPjce+Mrwt3HYbp0vaIN+wgZt4uQzqG7PEZT3uRb9QY7aiNjH4QKl
3UWS/Ix7reF8n6HJU8v7QJ+nn519UKrdZ6wP3uCgMLpUn2kW6QaF2KdJtbuv
ptjgYHxsPBClj5JroCl9pIGnwtup7y6jMj64swUjfYEAHwXp5BNpahqZSFr8
QT8TUfD/GG1qWt7YIM8/zawvNNOL8I7IYPKpejbaUT8L1U/R8YJ1e2bIvI+d
pq7YUDpNdLxoiz3VET+DghcF74NVPyLpG/COPcFWTzuvi8HMk8u/q8aeRukG
wegCYh9licPQRrXORd5U62NZbd4FPsHroo02yKhnZHRx3+l5SF9BHHiC0QYt
8NnlGmT4k98/C9NOVZ4dxT5jpc/K3+I3vhcs6u09d5Ed97f9Q8Mt7e3One6R
Hyn8KZ+AKP8f55aXm9vaEPeLav7pn/0pbJ82wp9F0dmSd5/7UqXek9Jureq1
5iafZWeao1P4DTu0dYDYpza9KDe5gzl3PtvOxdvzoN1F0e5ig33AKgd0n5Hc
Ee2Fv2rewe3zNGr1BEkfkffJX5uK98lNbr6NLls49mnrXEw6PLF0g22BpzbS
XnpNDadnWmLd/I5aVX+16hiRPnDUSTG6EEjfOXlFETjqJEb5vCwPcCce0ZwT
BzsVArLDQOepZ54RsE91iDhInIXy/9Ounp5UNmvufsHYH1H12/IUnQmm3+q7
I7rkBwbe6W5Pmfr5c7xQU34u9vFjT274WawJh6dW1yiSn0f1o1I/jd3FIuXH
13sa8z6az1Nr9exRiH2abLt5qQt94MnrmAZNnsDeInhbH33myS9wNJh2crva
cZMnPdlHW1pUejU1d3ROzM1rm6u1Lhfuxb7HA58Q69PKfFakT0iyG/tb/Of4
fJI+OsvDzoXn7j9+fPfgAhH+ZBz0Pwjd2C42hMPb5w8AAwwGgqTMO137s+B9
1tTPVPUjhh28QT9R9cvQQFBF/XrHxroVjhdJ9dsWVD+TlJ+B5Gdt9QR9nqLd
JQjJz6LdRZtqtwg4SP+FSpCfUOMp9FcPcasS+fcb2oEnnnGgpBu8Pk+40Ex+
ZvKQR8E+BfAdFnhubNaEQlkJ+GTs05I+A97nzQtbMD5E6RO2sVMGngrgU+5l
MBL4/NA9gZ1RDuN9jP2ZYp+Mg3YIyP6/yxsby5ubiAWU6PwMKu9glHZXY98+
gn14x4vM+xYV643IYQfqRj9k7Dm1tl4TCrv1nsSdDrw9T1fwkvct+QG91n52
OghcSRh7HpHkF4Py7BbAF1egHjLz1Ot9imW1PPyNetf28fNqVbRB5XLBU+2B
xPoQ1HMN0u7LJz423j007FqpibE+1NtZljmWyT1mWn+LLtfgXtmMZT61unck
c05whGjD79Snpb19YHjYz99AmYhae2BA9qcZfupi70TqJ3NAC9ML2PEi8z4Z
BwNxvFD6zfCgH/+eOdzWNpadA8eeSNSd7HjJCXqf0GuNYx+Wc+d6mOVL+iCE
epSFDnCz2SH1U/WbEZvNrFPtRIenp8mT/MYAxT59k6da73ObPPU1nkJ/ApH0
0QeeCqWvPD+pi0RSq2tutUuwXS62eXajfQ3nvS4Xvb2TjH2+/C0+6Z71GUsm
w42N/rFPSwO1OiDylgDFPg/jBoHPFP5UUXcZ/iDVD5h8+pT87DpeZN4HIqDA
+2QEdC8dA1PTrb29Wt5nh3284dNC8pPdnrJEZcb+zLEPpH5yxM8O+Ph9uNVY
n7fD07W7aAae1nUugM8T0PsUwOfxL0n2TqLep1nYh+t9IuoVilqxz1UNppdX
wi0tjn8M7/AMbNqpAT4g00d3uWhJn7677IAnfeIULihniy9FT332L5bO6ubW
YydPOreFz7qPMcU+BAftENDI+UmR/EAEVEw+Xd8LlfpxBHBfNfOk5B20jhcZ
BBVhhx13nzvM+9z6+nLQD8a+dC5/tqEhnRODftJVSEz5gT5PYexJK3hR9ptx
++M8gpQN8FVokdB+KYw9ZZ8ncexZBUEXCrl8n+f+owv3BeDwrPJrHvKCarFW
Ax+cZ6fMPJW8r6Acibi8LzY42DeRlF0uFKMLpcsFizYosM9tdKE1mCldLlrs
Q+MMMO87OuwTIAYHOB7pwHPsoYeK+/vIA4S/KhAOaDH55EFQofodgPBn7vkU
gM9v1s9n0I8CfKqOF5z00b0uzmnp7nGCfgSrJ7HZDDA5gB0vuN0F3GRk0e2J
zzwR6udWu3ADTz3v03pd6A5PrcvF6fA0TbXLu9qHRYqt4X24w7Mi9uX1yT72
pHKeV5DD0zbaQBl4spfSbm04nNncrPzWxuHp5JhMi1wgi4uIeubTTn+MzyF9
ijmnEfAZ0b09mpsFATL5nK2tS89mtQ+T/2Y7BOSlzKPQ/oiqH8j7trxNL3LB
NQ3+gH3u7nPYLXihDD/dVw2x40U9+STlHcCZJw+CI5lMcyymbfV041d8vxmO
gLzepyB9WruLmLn2AJ93Byuyn05utBa8Ln2asae+2QyBPzkKQYQ/kPEpSV/l
P8iD/gDU4SnzPqTRReXwVBtdqNuLtLsbfGGfmvc5L5mpxaVoaxtR6cN5H/gu
FyB9ezjp83hdVIwPIn02YXaKy2XbqrlF5W/xOeSkMD7nxHp7ehIJI7i0GIQK
Z3v/XHtXV/EAhn5z4c/TogNin4CAWupHlPyQrJ+Iejreh+fccexT8z499aPz
vlS+cKa+PrWVM1L9iHqfEHI3jTlIQT9jya8a8Vsvf/wD530C7ArZdpC38rzP
dNpJ3F5EcbmMmUw7Za+LduBJRECa2FeMDQwOTE5pY31apY9S4LlCpX4Wy9nF
7bRgmN0kzWcZZzB1thipeJRzvnwuTc1kauvrD++5dHhK9weOg0IecDSZHBgZ
NWV/ZOGPFHmg5B28k08q9QNBUBv0k0mfdvJJKzcDsn5K+Kt0e6a9IXf3AtIW
TwymUoRSa16ggTtekJC7BfXjFwqAQT//Xhet40WbcKfwPnWyD/j76WKfo13y
AUYzo4uYahfTDej6hqpfV+J94sxTDXxwpo9I/VImqOfGHJz+ltpweGZjU3C5
EB2epkYXQpcLydspu1wEYydx5ilPO2WuYQR/gZs5ywDE8GL/3NZ2cXVza3F1
Nbu4OJPNTqbTE1NTIxMTw6Oj/YOD8f7+WG9vVyzW1tnR2t7e3NoabWp88MRD
oUikIRxiIFhTV3e2tvZsXS27UVdfz+6pa2ioDzXUh0MNkTD7yA67p5Yd9inn
8XWVxzccPiwaiTY2NjY3s7+8pb2tvbOzs7ub/aO9fX39Q0NDY2Psi3nm7JnR
iYl0Nju7uMi+1JWtrc3tYn5/34IAguyPovpp2V9luQMp7Q5l/cSdttaSH6L6
IWNPd6eDsIdFPfaEZ578BcQZe5JTfqZJh7y31szjDxTyYoqZpzD5tNrl59fq
yYOUp9ZMa/W0Jn3UgaeX95mWukDfYWyDw5gu2Udf116J9XnCfaYdnkbw57xd
nFpaDre0cIYxM+BbEHvMgA5P82iDTXM1H92id1YTeZ9/c4sS8i48l9vZXdnc
XFhZmZmbS6ZSDD4YkPXE4wxZmlpaGiKRukMkYrjDQKeto4PBDYO5/uGhodFR
hjIM/qZmZjJzWQaIC8vLK+vra1tbG/nCZmE7v7PzyGOPrqxv7B0cnHvu4sEl
h/pd4s5F9x6MADIIZv+1c+e398/ld/dyxZ3NQoH9K+zLXlxbm19ezszPT2cy
yVSa4SAD00GGxUNDPYkE+1Kb29rYl90QDp+tq6upr2dAzHCzvaurO5HoGxoe
nphgf2pmfn5+ZWV5c2trd5eQerhQjjygwh8t6wfsNsKpn8bx4sb99vxWnGn1
PrnjxcLuIrg9z9TXs4+0UmvlGnfZ7mKXcMcdLyDwuZIfuNNBCPpd5kV+AvY5
H7mAg32bGZBqVywwciW/qkgqTjtFxuf+FCClD+d9YrLPdNqpNXmmIfjjvc0q
4HPeKPYMDyfGJ/z3mFEGnsve64PM+OTl7BTSd9jWaJNrUKOeyP7sGJ/rANkq
FpfW12cXFiZSKUaOGHJ1xGJNLc2MSTFK1djUxBCNoUZiYIB9Njk9zUgTA5TV
jU2GMozu7V94Tphb8pgloxj/GAad7C9U/1n4HutBKPuPsK9cZfssHlzI7e5u
FAql78bi4lQmMzY1NTAyymijg5KRxkYGkQwoG1tb2T29/QND4+MT6ZmZhcXF
jY2Nnd1tdd5BVv10eQf3yXMkHS867NujtFsvcJKfBH/V3l2k11pb8MJfTBjv
Y+wPz7Y7SYfq/FNtd0kCM0+Y94ExB22zmenYkyd9/CI/GQF5fc27vw/gfcRG
a7LeB+T7ElJ/dYL74j1LCcmkT210ETMO9FQ7z+4ppG/SeR+Vdzb3AU2ePpU+
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
HynaYGfvlMQ+s0SDHeRdfP53wmzTuWd4dLS1vd0O+/ivanVjs6myGALsezE1
vVgbPgsS+6O4PRHeh0h+Ur+Zxu6CSH7USs/t4sDkVKipKdLSOpRKzW8XdbVm
mk1GmUrGwZl/aiW/5lhslLO7IBkHld6HY59Vyg/b5mCm93ERP8rAU0X9unXw
Z5TvM/J5eja2e6mfyuej1vs0GxxoM09io4tnWu4/3aDFPucV0RKLTczNgWv7
5GSfaaEZ7/N03vTOrq11xhM1DaGewaHsxsaKZ30DaWef1+iib7GmmTxteB+e
Z/fjcqHMOSmQJ+PdxdKN8u3l1dWnTp+u3Fn6aEr9nK8t3teXymT4sWcFBMX/
Fw5/Fi1nOuqn6XghR/wA1U9ndxFVvyr1U9hd6Ck/RgPbe3prQqGeoeHZzS33
pSoBn6D6GcccBATsGRntHRujzTyJY09hia11vN0z+ZR9nqpZn0+9jyj5qdye
pqUulHBfnyHpq8Kf2GlmucFB9roI+T6V10WFfZRsO69Wu3lVLe+rj0RnNjbd
AkA/TZ4q+HPO5PxCc0dHQzQ6mk4v7+wqTZ4G2Ff1n9uTPo8t0JPv85NucK7k
BNJHYnwXvO1kNOCrYtzF6m+991y6dOzB489dvKhFPWTsubN/riEcOv/cRbXq
R807BOL2LFRBkNrxgsMfMeWHJx1wnyeHfVWfmDbfl83l4yOjDAHbe3tTyyuK
bQ7KXhfX/EafeY5kZlu6e9TYV/XpTea33VmWH71Pm++Tm83sKz0V+/u0kp9d
vF2n91XyDqjYl/DMObf6vDl9fk8TovchLhct/IF6XyXmAOxxAMS+cv1d1Sd8
1MH2MtLlC2fq6/k6CH9tZnvci7eCfTt7DOzCTU1Nbe2Tc3PszTBfaKZtM5OB
j9f7HEWGHmlXsYBAOjyNlD6jNB+d8V2s3hBZnveU7z/97LOLy8su75Ono1oE
HJ+cHBoZQR0vl3hu69P3EnjKTzv59AIfXG6msHpCbk9O78PHnpRms5LSt10c
mp5uaGxsbO9Izs9Ljda07e3lt8ri5FO4wkytrddHG/FWT479EfW+HOf5BNye
hIifmHEYhvb3IXqf6fZ2fn9f+aNC70MkP9NOMxz7gJknOeOgGHsCeh9l4MmT
vqBKXUz1PmE1M0j6ppaXo23tXPG7WamLJPmJr9zh6VRtONzeE59ZWZWtnlrs
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
m3RQ7e/zaXdB9veZ8j5M71P8T/n9fUOk/X2Y0QWHP8rMk7d6gk8nE/gDjC4z
Eu8bnJ6ODQ46Gl8547C909jewZ7qxDprKOJH7XURAg7uVYJA+jyoZ5/vO+B5
n3J/n5b3yUm0YHmfbuYJ7G4AfzkY939+03z+/HMPP51ghO5tn78/Pbv+Oy7r
9+0fPnzD9+6qaxq/88GOn9wW+cuP3/PW6+4fmVhi/8TsXPZnt51hoHnPw11C
v1lt4/hHvvnYWz5336v+4Xb2AAavieEFo4yDhc9Tm20XMg4WwKfAPmyDLe7z
9GAfLd7uZ38fiH0o74MvI02dXQwBBd4XbmubWFxyeR8PgtqMAxpzMKZ+crrB
dbwg1A/f3+fMPFV6H2V/HzHjIOxxwCN+2my70GUd1P4+04wDPdvuzsP5/X3O
9MCP3qf1uvQlkwzmeN7XOzLSHo9bAJ/rx/afbTf0upzjeZ//UhfZ6inAn8p3
YRjuuyigAA58AvxZ+DxdfseAz7nR0JJkIHXlx+9JDM07j1lZK1z3vZOv/OCt
jiZ4xVW3ODfYeccXjt10y9OM8X3024/L22wPnrv087saX175g2ej4zqTp1m8
fUexuh2BP4jOa4LtaKUnP2fwgCACf4Fn201JH9HrktHt70vnCozljWRmefhr
7Owan1/Q7u8j+Dz5Ps/fz/4+kfQZ7u/T8j7c64Lv7zOdedrt71OMPfX5vrEq
/FX3OIyJPk/NzFPrdTGN+GmxjwFf30TSfU+YXFisi0SyhW1kjwOCgNRsu+98
n2mfZ+D5PlOfJ+R10ZA+rd4nTz4p+T4h3ZAYnGPYxxAw1JKMtk+95iN3MuR6
49cffO9dtZ+qaf98a+/nGruvfaLp7T996tUfu8txyAwdcsCLHAqfbhh55xeO
sc/+5cdKUfc7H+pU/Y8Qn6eF3mch9mn1PrnQbEus9NSs8IP0Po/qp833mep9
PAKqa80sBp6eM7WyWhL41tdd3tfS3TOanbs8+/tMZp5wqycV+45mf58Mf0e6
v0/I99n2uhzV/j5dtj2Y/X049nUPDfdPTpZfFPlCfSQ6tbRM398nzzw1vM+b
aQqi10WEP5VN3brXhb7DyKrTzH+vi0HCnTG+QnHfHW868JfKrL/t8/e/9AMl
lvfqj9/9kUcbr2vvBU5Lz9t+cuolV93yri8e38zvOl9DqHXy/V8/wfDurz99
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
A3+j/X3tVzLr63XZA6QvuNpFY3/SVs+qtr+PX+Tn5H3WXmZL9izUatnd3ejB
Yja7Xa7KfZ489bv8OJr9oVZPSbwdsj+U9LVHq2zdvE8oe/Zc22y9qB8EPrHt
k9E/E0PAdu+TPcvTrmL1+s/+lX/O0j0bowNQL47DU1hi5kv6TN7HmTzbtuDp
6PB08b5PvgGHk0eb9IGttd5Nng0M/hY3cpulUnTmzC6tVC4u0UlfTdvfp3Jb
As1TGnDQw31ott2318UY9r2gBozLeRldnOE+uMdBPu+j7C55k/cZjhdA/ay5
p/r5UBkHPeUn530l0+epIi2ukd8DT/2ClhkhjpfDk5OljdyzHnLXmUynj9p3
KO/zHflRMg5ud9HOB+h4YZRPlvfFyjuAehAP5VPC/oJsnwa9ghJogmTQunYO
zqnhI7WN3WlukXg7hS4X1TunT/pgsg+VuxmXizPPDlDPevWKHJ4aAn5CeR8z
70Pz7KDNzO3zFJK+0snJTGah0etHZ87k7GzE/hiXC8w40EYXMtknG/YFNrrY
a/u0kZ/VaQaBT63t28T29wmHfcHZ9gH86dl2Z9IhyOsy3u3tzmGfZOTnq3nq
L/7GzW1qYXFQ6bnXaMwtr5w8fkSpH1/wcmEu8gtbZoRRP9HUz0q4w5A7b/hk
qR+50NYL+Hyj7pD9AQIYdw44uG7uOsXDQ+eX0cA3Iqdx1E4vlwuhdnJb2gNI
nzXva4NtfeMzulx6NnmeIJqnO9g+Gvb1BZv77u8nUumI6z0fOL3+jyYm6O1F
eLIPHfbx4T4x9tm8z0vwLGh+SLTUxcvoIsk4uLLtneFCB4+EOxlvj9vqicue
GOlD9k8RrZ7cyI9vNktw3nfSf/hicmrw7og+LudyG3v7er/Z+FJ+cuXTs9d6
tM1BOPIjgA8X04RZv0dsxYOQ+vE4CJwwNvvzQsDV9bXzqysx2JGYK8/xJWVx
AXRP63JhBc97d4fn10Pq50j20ekGzusSp8Ja5nIZ+VuCU+1N4zx5nF1e3SqX
B2dO9fp2KpPxTbXTmueI98H9fYJh333MeZ+1sZ2vMiNKXRROIfv7JLwvptcF
5X07puxZcCHgHoA/3u0pnvdx1S5e8fZ6EtRPh7/JdLp1333VOfsPM/PzB61W
APDRSQek18Vn5OcVdhjdq3tpniwCfts3D1sd+MZheqHFT9z3wnNABgo7/f7s
/Jw17MPcLCjmenO9OP4WcazPva5I5vBENE9nsg9FvRtT2/dK9gnhj2h0EfA+
WaQ9u7e3sJ5VhWYHJ6eZbJYweXptbDdarGN4XRDNc3SYu3pdLH7kW2gWHGxH
sS83QlKO90nhT0D91MhvtMjPzvchpI9lfz3tNsYqeOkKfJ7SbQ4em4yG+oYd
8VtZrV1dtYaN1s32XYSGjavr+M1mTsOnlfnVjwu55ukc9sUxvSSb9YsPfyAC
zxA0BAEtVljY2yvX6gx6yj0twYxPrnay9k6O8aHJPmLYN3rxOGN9xLzP7q+W
OTyNLheJ5nn6iMOfmtQP97a761x4+Nut1VMLC81uT50229Vadm8fbXQZlrqQ
Js8Konnq8z4P3kdl20NIn2JJWC+08nbmh/v71MhvWDg24n0bJu+TYx9L/Yad
ZkS+D/N5apeP/EsE/UY46NXqeUj4PCvmR9Pn+eqVGgrpnNUzQPbU3wir+e39
ZlOfiVcvLiP4a97cogn3wZtOt1vDS6t2Qe5sE5c9AQK+3rqrc4xCPafyiSJg
cNghfuZdkAGEKIbj2qdvv51OzXz85hsB3o2+g/rbAxhfsqSPEqV9J31gxod3
uQjSDYjJ8ya0wzOM9KlJvajQrD+qc0GxL/pYbB1Pzs427jqjbHvvYa2wu1Or
MY0uFWJrrVewnfETUqn2Ee8zfZ5Uh6eT94WRvpxG+hD4M/N9wjrrAN4XMO+z
4M9qCJe0u/CyJ2x3Qe+RnCm/mKXWCgG3y+WNvf3WcOQ3uA5PT7+YmmretuMk
HTx4H4t9kl5rSAAlvM9p+OyBpENSCChJPTj9n8QEUMQKq41mvlCgVU37MUNC
A3ROxt4ZJHWKMn3U5BfCn6V5yupcPKINYY0ukmGfpM1MWGG922hMpNLV65tG
3zht5lZWD8/OsWEfOenDBE9D86SmRT75vlhNnjtYo8vYNc9bm+7JR34WAuJe
F9VsZvpaqfsBi/HpvM/ZZa3ZXVDgw1s9nXYXC/6crZ5A7Xywel2MmMPp2WI2
q83HXyOx9avrH33xRfXySgGfr+PF6XUJ2+lAR/yg6eUbhvq5TS9DGY3faiSP
POgHPqr+BYifmAVUxP6++vYn3/7R/yfjjG4E9BI5fXMN6A98aHT51m5x0fp5
AiZ9GulzBBz43Q1Q9rwCwz4+1S7kfVbAAWTb+WEfSfoi4PvRxMQA+CzsiwCx
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
Cu92ldqpinHYHe6hU78ek3dgZE8q78DAH5XlgdSvcdse7HDHCl6QfjPn1A/J
+j0+HUTv1sXF6Co2GtEv8bzDJ8TzGax8EoZPw/PJdJ3JqZ9z9gdx0As4AnAw
NTvb7vUCcDNx+BN2tqitfMwPWQh8NOPzqy9jGB+Kel6ZPqfgiefZ77v5Umly
dnZhdb18di7r8OSOAkbwbHTusV3tjvUNzoBDULpBb67uWpH2kBZrItWuHmwB
6ucc9nnN+wYfoS+UGflB+FOy5zaGfUPN08Z9f7sLnnAX+jxLJupB3qdeM2jS
YfCSc2Kfn9tzOO8bvE0i7GvetgnHC2L4tHqW1HuWqTgbzDsal1erW1sTM6mN
wm7rth1k+PSgfhj780j8uStfkNmfSPkcKwdsnZ+vrK+jfDC+sBkH9YjouuHn
7IsbO13GTh34rEzfNz65Br3DE2Af0eFpQt5o3hfscqmeXyxtbHyYmdnY3Wu2
74a5hicVbOf7qyH14+2d0VVoNJY2txDG1/Oa9Ompdj3dYOTZ+fUNXJuZoMPT
Wtinkn3yNjMM/kb7hsaheQbInrTdxcH7XNiH+F7iuD3LoNfa6XgJhj+C9xmG
z+zu7k6lirV6km5PyP6YcjPL8Hnef9itVGbm5zOrqxENvHx8ijn18yn5/Frb
7ude8Hcvpn4g/uDe9h4HBxlMXFlbP764iANz8Ps/anGMYOCjuN5I6hT3VDNS
pxZq+FpTO0VJdqe90841BBW5eOTZ73vb5cpMJjO7tLTfbJ5iE3mU9LVotVPi
cokOlsXc5m6jaZG+IfWTRNp7Q+CLn2pHNjgExvrE6QYLaHjB00vtFFe7dKx8
36YqFBUon68Jd1/SN7yXGJLrrgl/ErtLr2TuI1Z7isvEIj986qflaJwFL3LN
U5c9B2+T8tnZ/OqqKkSC/Wa60UXZXfxkTyziV7+4XNvKf5ieWdvM188vrsC9
tH7U8OwvGPV4+ENPXb71xURAROWLA3xOJnjb7abn5uJQPPj9Y0KebmuhNE8v
qZO5UZG4XKCxk9U8bYcn7GGQ+Ft0+OMtLs8usofHg1ZrYW194oXoNa5vQK5h
5HhBUA90WRyNXC6PEt7X6D08V5l1uqjmid6lS7wuKClwel2slTqW4JnIylor
z658ngNTpaTRxRAwb0fCJp7vI+AyTrMZx/uG7C8G9RvRvRgjP99dfo6pnw/v
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
a9/efXIgYFfDvsAhoMEHeSeMWxH1vSwuSSAd/lj+76KAzykps8CHMD6hv+X6
8eno6vqg0cgVCpnllQ9TU9Et0OrmVqFceVYy+w/+0QYR6kHgUz6xU07tTLLB
DEbad5tHmfUsPenzAD4+2eckffzeIqHgaZE+3uhi9VcrL6VvukECfM55nzTe
rnW8QJ8qnPdZjhfhD5Bye8L/Mv9e657l9qTgT9fbGceLF/Ub9Fq/PtDePht7
+1ulQ7rfzKZ+p/R+B4nsKS97GSEgOe9Dpn7itPtIQ7t5fGxFp2K9sblTWFhZ
+TA9NZvJrG7ktovFCA1Pb27bTx+9xE8vBFTsSYBxr1/D8DUXrom+P/M4DupZ
9wwC7Bsxcfi/xjO+iOk3L68ipNva21taX5+em5tMpRbX1qNfHjSarZubq6cn
fY4sAT6tuvNTTPhjM31PyuKCwx+ba0DhDzoE5tfW949asM7FmvcJLS58hyec
9+moVwTammV3GZ3Mw7V9aIdnQU369CLrGLE+Cv42fPLsMUd+wW5P331GLPVL
pNfar+NFbxZKMOxgKZ/N23ZE/Y5x3sel3RnrWsDUD8KfmPoZbr3QzLth/rzq
9Y8uLg9q9QgNl1bXplOp6FpYWd3a3S1Wq/Wz8/P2XfvjJx4He8MEhD8TpNCH
Akd3hkKGbjjr9MW7ALoHpnsixje4rh8fj29uKsfHu4fl7Pb2/NJSxOkisIsg
7xnp6o0IBC/7fYm/xavC5dIsrOYDfXy0wZrxySd9EAGdk77oqt62P6RSdU3t
1DN94iIXe1OtxOFJk74R4wtI9llqZ/w8+5gEzxHwgZz7EPiefTVWxtCr1FpN
OZ3lZnCnAwZ/uOZ5gPWbaaHOUY/roZl0CNpqFFhuxmX9hv1m8yurpZNT9f7S
9vqp/SnIyC+O6cVUPnHZ09P3gk/9xPCnB6WR4/f26ePZ7W0tOmBLpexWPrO8
PJVKRVf0IPrl3uFh9ajVury67nY7n74O1j9hK5qJhr5IR32NQ2Ulx5S0e1My
3ZMgID3d+/o2enXddZrnF+VmM18sruU2518MvVPp9MLq6sb2doR91ZOT03b7
5qP9YhjeIGFJ9k9aqQLG+Dw7q/0sLifGriIDB93Y15cuq7VcLtn9YnZ/H5I+
Jt2A3q5r8z51sjny7Niwz1iWamxwCO3w9HC5aD7PHPB5OjRPoGdSOqfE9JJU
0oFif3LpeL9jkT6y38y/40WadwA5d4fb08I7ivRB9lc8ai2uZ4mRn13zwu82
kiOgJPJglL2IB383sl0PPPuTpP8i6hcRwIgGHtRq+d3d1Y3c3OLi5PT01MzM
/OJidDjnI95Rq0WIeXx1dXV/f/fxE1NrKVdHBWiIuFOYr1HfU5JTkCuckume
BXk3D09n7bvmxcXh0dF+pRLx7uVsNp3JTExNTaZmojuN6Ke6tbdfrNXq5+dn
d3e3Hz9JvJ3y/hYJ41OvXl7nlGOflSpqEYsbnJM+Z5h9gH0R6YuoHwV8kjy7
NuajBM/R/X9Inj044BDE+zDqN9rjEN/hGcfrAvcZ6fPKPLbOb7TLD/A+Ub8Z
qXnGX2XrtdHP4H1Uy5kv9bOVk/7DRCp1dNeBbzfe8EnN/njgi7jeBbLhiDR8
ygLvo7t6edk16H7RC0P0qZNfBjCifhHStS4vIzIYUcLczs7KxkZEUmbS6WeL
xdxcdIavb25uFQp7pVKpXq+dnBxfXl6027cPD/dffY1yrugL2k9PQ5ByouHo
or5SxzjfWV4Y6kW3CpfdXkSfWxeXldZxdFewUyxGP5zonuGZR6fTX0xNzrz8
cFZzuc3d3b1yJfqyiE1fdLtCY6e8v4WCP2LGRyHgJ17wDMr0jTHaEF0Hxydz
q2t2rqE3usdGgY+d9+Gyp6TOhe+v5sHO4noU6VMpAD3T5/S68BYXL+xDe88C
HS8077PgD825x+B9SU79KAHBlXN3K59yAqi/jzYPDrK7uy7qh/d8yqd+wrwD
MvgjTioqriUJPjgJIKz9jNkA83J92358uri7i5CxdnxSqtUKxWLEbiI6s7S6
ms7MR5wxwscIJWcXMhEKRKCZ3cqvbmz86Msvi5XqYaMZscijs/Poj5/d3EZw
ed3tRogZMUocNBnF0pPZvSLd1990v/qm/fTxpv8Q4ft5u31yfR1hWf30tHLU
KjebEVnbfkG09a2tpbW16J8QYf10KhURt+jjbCaztLq2FuH+7u5uqXRQe8b9
Z3TrdG6fwyZcaF2YZQhrq46jdlKodz5EOn3/lxD1+Dy7nPRZ9s7oml1aKR6f
BDg8KwbkGbwP9bdAl4szzx62qH3ochlZHK2wG4Q/VY9Jz/s6avoGETDY5SLR
PFXKD/aLyu0uxi6/lx9FmN3F2W/GAh/s9tRz7j3d8OmifqKlft5Tv8HV6X6Y
mWn1+tY7DnZ7Bux3iJ929+o681I+AQIaCTL9NNYJ4P03Ug7IoyE6MosoWIRl
N/1+hAin19fN84vM0tLK+vp+uRIBZX53dyO/vZbLLWezEVxGdDI9Pz8zOzs1
PR3hy5eTkxF0Ro+nXxL96UxmbnEx+poIgwbX4spK9KcWV1ejj9F3WF5bU7+M
fmvwNYOvn1tYiL5zanY2+lbGN0+lor8u+q3oyxZWVley2QjLctvb0ROLeFxE
1kr1RvX45Oji4uT65uKuc91/gL4gcC+h/JxWgs/h56Swj9rKJ3R1KtQD3s5P
EqlT4m9B1c7gaIMz1/BaXn1xOTU3X+/bSXbN6yJa3FAez+4GCHxq5EdpdPrW
BqrC2jfSLuF9IZCnzQGV3UXM/oJ2OgBS7At/8P6kKKi2huzvMNDtaViwUMOn
xO0JIg/D4MPwDbWyld+uVASyZ7jh08v2iSufYNcDBX+Q/fHARxNAXQL1rgB1
5iCgMdKiWhEORmSQo3Umg4uoWfTF0Z9qPz1FlPCm14sI2vPVuY/ANKKcEVs8
v22f3d4+XzfPH6NfRp98/q1OJ/qy6Iuve73oemaUER17IZXdoBpqp6FFc7bg
LZ2hIqdubvlKQV5Mf0sciwvINaDdubjaOYK/V39aSK4huhZzm9vVGkb65Gpn
TxhtQFHPDDjY/SEBjE/nfeikT2LyZARPCwHV+gbKxzK+mAPqeIHDPivhvo0l
3L0QEPI+H+pHIqBz3gfzDlS/mRMBHbzv4bF2fTM5O0u9+8y0u4GAp9rs70zb
z8LcFQtDf0GBd7vBI4byaXNA/ooPgmgm4qBajShV2DAu2RFeTDcLD3yot9PJ
+OTTPeGMj0G9S6K7TFjdKRc8A0if0+XyfES07567XLo9G/vU2lCsw5NmfB55
doHmifM+D6NLexTuS6rLJWGXiw/vc2KfkP3tmFO/AoGDil+PSuQM6oc3m/mv
dXB0vODsrzdifE7q5yF79h91EJxbWT1oHUsMn2EjPzj1g6YXy2aAi59gx59X
8EGsf+LOzzuw91auf3bFIDi4+t/+JDU3FxGxN0M9J/zd+2MfhXrYPYbfjK8N
gM8x4wO8L5jxyc0tyt9yald3Wo3xKltkAJ8Bf5po4+VyiY6I9b09K9qgN0f5
d7nAHjPD28k7PNFkXwDpEzo8LX/LFqZ5DgMOHX3Yl7XKq135hTjsT0/5aUZT
G/62BB0vcULu2MjPUD6LJvXDgK9XwnY4loaMT5M93RVnvjl3IfZZ7O/w5HRu
eQUG/QDvs1vOYMcLL3sGUz954s/yt3shIKN8OjcAyp0wEjJ48/DQurzSmSDU
RaFMKqF1ARSviz1/f8jT7xy+HpZUIwjoO+Mzx3yi5UTUNbz1+kQxPgoBGf2f
mPR5bGaPU2JWv++9FHh27FjfK+lDXC5soE/fUesmfQTw2ck+1V+tOAg64yto
FEZ38qsqMyX3xZz0UaSPp37U/j653SXY7UmpvnH6zWDlDkw6+FA/D7cnGPwl
vNNWR8DWw9PMfKZ6eSUzfEp7PoXwFwf7ePcL5QAMRUCRCiofgXmJonAyGPa7
YaiXkMLpYHy+kOdUO4VpPiHp80rzYVInbEwSCZ5hgb7Bla9Ulza3zDFfnx/2
SVwusQXPJCZ99KbagEaXhHc30DzRH/482l10myvF+6xea6tDQAGfpNda6Hgp
sY6XCsn7dMeLd9KBBz6d/RXq9eXNTfRtCGxpiHVN7+k90w4EV+IPz/p52T5d
5k+R/qmbXgD8WSf2wACDc8Bg+AtAwDe4lFqrPwgQOc2hXniioW1CniJ9FALG
8bdIzC3669zKNaAtLto7yNA58WjD0N+i/Gly0qfOh6m5+fLlldzlgsKfuZGt
qxW59NBQgyDSrrW4xBn2DbHPWeNpr0UwcwQDjRGHP21OF0fnlGOfkj23bj36
zXDDpz/vw+wuBgEU8D7jtaFUAsrxIvB8Spc7BCLgc8493bi5JcIOjqxfwPgv
oOozAP7U2ejF/vRzmHKBqrlVsgj4ljjoq2RSYEdDHtVKPa4EnxfXY/0tnyTA
x/A+OtfgsZk9Ju8r1Bvza+vYpI8r8DSBr2c5POX2TmeeneF9Vn/1LkQ9Nt3A
Yx/f4ZlgukGOfV6OF2uOqTKMiScdqKmfk/qxsqce9DOoH8S+RDRPp+z5TP1q
taWNHG31RPY76AhIzf4kyuflRw8EZA43AgGR3J8vCDJ6ndMImggOooDohZKJ
IB1EPVbkRBRjCvu8Eg0Brk5U54xP+s6fbJ8zjX225hmmdgqxLzoWJmfnyheX
GON79XkK1U5JusFn2Bcrz67D33bb2N2TVLLvs8Cfc+rnu9Nhe7jUaQfonzwO
shv9kpn6ySvOAjyfcuo3eIs9b/frP0ymEepH5x2kU78zAHmo6cWLAMqwz456
hY3/nE4YJweMj4AMJgo/0yW+JgDyCIpno56pc3rLmwzvA/+/DsbnSfpEwCdk
fGrSp/VFuCtcYjK+6DTYqdUza1nA+Bxqp8vlontdev6kL6FtfT6MT6HeltFf
fcf0V8dHPd4XKgc+SccLVexpsT8n5BnAh/eb4Xv92JEf1fGCZ/3YwR8Z9wvI
uUPqt1PFqV8L2+8gyfrFS/xxux582Z81JAqNPzDanQgB712O0NVc7vL+XoJ0
1u9Chpgs1PIUjxjqoWNTBPisX97SwOfB+Mx5H2R8KPxB1KOqO60swxm2l5Zq
cRHZO9XaTcGkz0n6Rgg47PAUwh+GeiKXi55q3zfmfSMeEafDUz/nLdK3FU/w
tD8mkWvwHPkh1M8eWcrZX7ypH9pu7QN/VM2LdKtRRaB8xhz8DaZ+EfWrXd+I
c+522YvX1C/m7C/A+TlgCmH+T3r2BzngKw4684DWL1tXV5nl5XFgVjDMSSDP
ZHmckzOY7qnRbXxLZ3xjpw/jezq23zivb6Wk7J1ImH1A+sz97JIuF97biQqe
Ynsn0o0cK9bHrmiPE2mHvC8pyLP4oB4hVDirMoZJJR308ah1L0H1xRHAZ/iU
BhVnB9g6P5XxZGte8M0OxNTvoWLYXQzbZz2G7Hlk7vUr1OtL2dyRQ/b0dryc
Y/CnnTO2tcDD92Lml9VJCCAvxP8pgz/cyyGZA1r4srqRqx4fvyvUo4HPQHbL
+4rdFYggjzG3oDpnDIuL0dWpgG/w+bBQgw5/cD5upoRCAn1NTcBh4K8xIH22
vZOzuGDw17MYnwl8nM+TzrObmqfWJaL8LUy+z2ppVrsb4PoGFvt0wXOUJZdP
+oL39/lSvwDeBxGQ2mqE4J3589/rUNTvXkj9+HIzr4ZPKH6G8T6W+r1M/WZn
61fXNPbZvE8++3N6Pod7jpBzKaHon73PNIwAUjjY0XZADHifmYvHmeDguur3
p1Op+68QPvhuWJ79/CUsT8j1WMiTSp03tM7JD/jkM74g0ueQOluazvn6ESyo
dSbZGdKn56QotTMg0+cUPAneF+JyoTTPmKSP0jw3tP6xBHmfHP4Q7BuO/FTB
ixP1tE3uBvvz9XxC3ieZ+oFXiz7y86R+A6Fe220kUT7l2Kdn/RazG9TUr2Xs
dyBNLxD+mMME2j4Z52fMwR8/+1PYxyDgHZd9QJ2N6FIkGwS3i8VCqST3xki+
hvqD8PvQYMfpnNT+hQCRs42xPOvxmKRO1HbFAJ96oM+1nUl2FRdKMNeAwF+3
/zLpIzJ92n40F/a5M30o/Fl0D5C+8FS7RvqeOzwtb6cb/givi9PeGQZ/zvmg
0/ECQBCkFAH1sxLuO+1R/tEJfDzvM8VPqdvTZ+rXY3LuYOqntrr3Gd4XEHmI
3ozT8/Pls3NU+QSyp/Eej+N7eUHAT6bmyd2re4EgOwSMSwDbeBqCQ0YIJdPp
9M3Dk1AdZTga/zUCvPPCOM7TEkfhHKKeZ44Po3u+rk4+0SBkfAM/5zAKJC2s
lu9rgMA3OAFypRJW5NJneB91710eFjCOlfRJsM8mfeykD+43N0kfZ++EvG9M
pI9CQGG3p5fXhel4kdtdCPZHAp/e7xow9QuTPSEOyj2fesNnKpOJ3rmMSoNN
NDzGfxLPZ7j1Zah9YbM/D/dLvDmgbYMx54NcR+jnvaCKK+R3CvLuzJ6cMNQL
sLXEZ3zqpeg16SMET2tjkQj+5IE+xN7Z7jy3d7bvbNLn6e0sjzazx8r0oYxP
Yu/c1SAPYh91wgs0TxtHEuwx4wlgQL8Zb3fxQkBrTioEvgLSb+bXckbbXQw9
wYq6O7J+4p22ATUvAxDMrK7tNRoC1LMeu0d+cgTUlE/En0DFH/zTf4YfJg4C
AgLIZSLQluwwt4zPhc8cqb9RQ0D4/MPlTUbnDPa0oMCnbpNQf4uX1ClBPdAC
4eisFno7ndg3eOOvbO9k94uEvVMe6OsJ9rNziQYi2afxvo6f2lnAulwslwuf
Z3dO+ni1M9k9DnLZk4Q/eqcDNfULY398x4uw3pPAvq6uLQipn3OnrXDqxw/+
6te3E6l0q9enPJ/mbvfRva7E8eJFAOXUL4b4ac+Y4kugNBlEpoHMZywkYmZw
ofwO1S2dzzAE9Vxcj0M9J/ChXC9mcwsDfLq2T3eXcQ1mQsbnNHYOrsrV9YdU
qn7f01BvVAjM3EgTvC9kPztL+uwuFznwFTC107fDM6DLJRmASyjnzrA/hvrp
vTcQ+KxeazzvgOfcvRo+KcHTkfUjou5kzp3KO+gI2JTB39pOYWO/yOYdkD3U
OvYxsz8U8nS5CSOAuP8zAP5YIRTffutEwDuzm0sXAH0u2Pmse0dJTCR4osEo
le9U/27D33r9DIuJsSgeA3/8KFYBHw5/mreTljpt3hef8WGhBtFuPpe306Oz
Wq+tnltZLTQaKOOrDkNSLOr1NOAz/C2H2F42/zC7zfv8UM8z1pdXzhZZl4s1
8ntr3mfOGVHgk3S8yLN+AfWe1HIHC/Xokk+741pHQPgiFMier8pn2HY/LO6n
CiUejjrdDzMzzXanNVymCQyfuOPF2nMUQP0Y/6eQ/aEIeMNlAC3GwbE/3zkg
jYY857I/M4Snr4egZv+uhVwQMWUsj0PnBCFPzviSsnRSrk6rxYUCPqu/5dSk
eyDMLmV8wUl2dR0cn8wsLNT7I8ZX6/Uh79PtnWUR45OuaCekTiPJzkfaFfVQ
wz5b8NS9+klH2hPvMQuWPSXUL3CtQ2zHC7XZQSJ+0o4XiIBO5bNv3deNIe73
mC+Xl3K5I4B9xPiPS/zFr3zh9c8w56cLAd0TQC8tFNLAq/7DVa8vUEe5WaEP
ukk+z6GeL/zJUC/Q1oIO+HjguxSXt/Ckj3a2eHaXeaqdkPTVX3YVHZ6dYxUu
fu2dVq6B8irwwFckSF/M5mp+RXsc7Esq1yDUOb3gDwU+Hf7QnQ55+0d0/xpy
N3f+Fggc1PMO+nwW7TeL026tfC+M2RiHPzbrV5c1vTiUz/7DzHymfH7BYN+Q
AD4NtB3N100Cn7p/5hnfubHs71NS7M9L/3TOAb0mgPCTU+n0Va/niVBy7ibh
dCKu5wV5KE0OQD0S/l7kTVbk/AjkcUTnpODPOae2Auwg1+DqLtN0TlXdGejt
7D1slcuLGzmqxYVyeIblGiSTPlPzjIt9BSB46v6NvHbgw1wDbXTpqAIxEv7G
o3M6sQ+Qvk5Yt6dD+QxifyjvQ5VPie8FNuaF5h1exY1EqN9I9uw/lM/Op2Zn
j0ZL3hHe1wJTP5T9BSifvtQPJ4ACBuGaN7mdML5+mOiqnpwuZ7Ntx7YI/pKz
PCmzi3P5410yfk4+wUdJnTzjg3NqKGVgcYYn4Xq+YLqnA1/1tv0hlarddXTS
N4o2DMPsEuDTN6z5ZvpYi4v3xiIk2kCH13jNU9jlMg6Xy/hkT332h3a8oMA3
on5x3Z5I0sEpe8KOl5LR8cJhH2v7dMT9JNjHsL+VrTxjemlptRVU3iEO/KHO
Ty8CeI1yQLP/ygV8IuzzRYqF1dXGxQWliIaioR/YJYt6sokeN9cLAz4vnTNB
qRNoHeSMTz7mkzO+gcVlu1rDcg2O6k6IgE7sO/BzeCbaYzY8vS3I28Z8/vGH
fZ8d/tiCF++Rn6p5UX04XqSPgD/vvAMte4ZN/fSOFzLvIBQ/KcPn0X1vIpWu
X9/KBn+27VO3vlB9L76+l4Dxn1D/5HFQneTxCeBZ+y41Px9xNEYmvQO7fgIw
UX19G/PbjBv1hE5OTuE071XiM74A4EMZH5phd0T5XnXO1w75mKSv0Gikl5aV
xQV6O8VqJ9VZbdyr630dAuCL22AG1c6gPLvBlQZ9KTz2JYBlnnqpa+SHd7yo
eR+V9cubpA9qnhQC7g6nfkSvNfQyOUZ+TMeLon6Duy8v2RP6XnjN0zftPmhY
2ms204tLrYen6J2LzvuUl9vc8efXdA0RUDfgebE/ZghInau0/xNV576yANEX
ATe2d4q1mhNZeMxCGRyKa4nAnAI7OdfTbxXgjw4nfeLd6yzwjXIN+rzYF/io
3XzWy1txwBZR2inRPGEECcW+wfu60el+SKUqV9cY43Nk+phhH2PvdDo8sR21
yuQZy+WCdniiPWajaINsWx9F+t5s3idUPsOCflD8RB0vvtQPlL1I9/oJqJ9f
y5mv8sk4Xhjl8zlAVKvx1K/F7W2xsc+r8Yxhf2EEkKeBnjjopoEWFN5+/LRT
Kt1+SgaM3uC6Bb90AZ8otRescCZL985YqZOge1DokEqd8XMN0dt5eWtrw2xx
8d/X0EOT7GG5BjDswy0uHtRPi2a/mb1zrGonv/8IrRVNNumg9vzutIOmfkPb
J9zGKF9oS6Tde5K0u+XzfHnwYNq63Fk/CIIM8L2+K9vtiVSq2bln4A+VPSH7
4/uuGQRkUQ/vrdKt7wH6p1MChX3LPPDFmQ++h4snevoD3s0S39lChRq8EnwQ
Ac+f7NckAXzwHk886Rs5ykZ5duqOFJ30HZycTs3N18x3unrjo/4WF93rUZvZ
nS4XlWdH1TB72Ddcz2d1iaDVnZTmmRfAn8TlwuTZw/ArDk8M4H0WAgqtnlbN
ix52cHS8kIO/BKZ+TvZHaZ6VodrJF1xLfC8MAuYPK0sbOfUWZtmfO/MOeZ91
/viyv/FNAF0gKHWBOjHxs0ObnNn5TvR88S6I8Rk6p3DA58X40BmfuLHzIb7a
+Xx1+xHwlU7PqFyD3N9SNlpcwnMNw3XeCewqQhEwYNIH4c9tcVFr+95E57SA
bx0AnzX12zB7XYTUL6/jHSB9CeXcpXv9mP0OYY4XbernaHqJE/eLruiNPLu0
vNdoqFySAP7gTGRE/ZxBKi/90zkBhAQwEfYHofBW0A6qwO79IKAv0oEpHuyj
xj0tAXM9SYBdfxkk7urUvJ3KwRWwl/ZhuKLIvZ128A6FpG9le2d1p8Ak2WUO
z55J+hxjPmhxIYZ99zjdC15TC/yKCvugtx+gng5/9or2cbhcLHoYk/c5c+4W
9XPm3HWjrJKULfanCKAM/kKmfhT7030v3lO/Ya4nJu9jpn4D5bNx29Y1HNr3
onu/Ed5nEUDdV6CPYJJyflLuFyQM+El7IEZAa86FsiE5B2TGhRZaSXBT8v0T
wjv7Xy2/wbginJzO6d7wtscOsCfF+MzWMqmxs6Ugb0j3GNKH8j5I+g6OT6bn
M7Vuz8S+4A199owP7qgVkL6R3kXl2eXkooChnsewT7Cjlhz2va2/BYc/ottT
EnbgeR+VcI+91A/nfQd0t6dg6hfQcmZfvlM/yexvt16fXVpqCZTPFjL7Qyqv
g3N/NALis79AF2hcJvgVxQSDZVIUDanPBF/g2apB3hgVTmq6J8E+OeQxwGfN
ozFjZ4Da6edvQb3Zz+/fu/sPqZRay67jnY56rjB7b3BpuQZ80sccXITFhVxQ
G1JeTexnp054V5fL58n0xcw7MO3WctOLI+fOxv34vAOWekB8L5j4yUz9DN+L
tdrPhYAeUfeQ1MPD42J2I3dQcg7+MN8LvvGBR0DJORZ/9pdsEtBKxKvPl1ut
2tlZsFP0jS+UzwphLoD0hTE+yt+SiKVTKZzQu0Utdz4ygY/xjzHeTjTXML+2
niuV6DSfX6ghbNJHtHfqAyAw7OsY5yelpxU0b6fS4qw8eyIWF1/g+1z9ZnTH
C7nTIWSzQ7ymF8zdJGx6QfaDHI5mf0E9n67ltsLIAyd+3vcm0+nq5ZXqJBRM
/eDpgXS/BA/+KAOMfPYX3wnjJINXT0+TqZnLh0eLElKscKyYiGmYFIIbGy4S
YXn87iFmqCf0c4YxvjO8pBqhe6L9RII0nzzUsF2tpZeX671HdNLn5W9Rgqee
6fPydjKhhrAWF0D6HFKnNdtydnh+riKX+Dl3p+yJUj/1Y9lmsE8gfkLeJxA/
w9falgzsQ3Yboaind/dZSkitZwfe9Y++ZS+D6/D0bGp2drDclmd/ZubdNsCc
mPoSmndQ478A9icZAvJMkJr9Qci71spJUFA4aDTW83kndvgiIPM1EvS8Cc0m
eOOdJ9e7cmnXmsHp08WTNL2OYp+rucVAwJZwTcMwy8C0VfMzPnVVrm8+pFLV
2zYx5vNifEaLS3B1J9VcDYFPyPuscxgyPv9Yn6DLReDtHDfvg9+fQkD1b0E7
XgK3Gvm3nDmnfnHyDma3nnffS8B2P5ny+foWHryps7u7a9s74sgD5IB456e6
/UbZH0UDGeonnANS1E//6HtZAJHOZFo3N6guarEwFIMoUIMMzvxK+ztgzC4E
7yD8jXCQ3jPr9HAGKJz6a4CBPEbthDM+bBet0d+S7IyPJ32pxaXdRlPP8Zn2
zge0ttrlcolVW01l+hKwd2KRdnV6w/4u56TPyfsSx6/ElU8N/pKZ+o1azjSR
WQ5/BAJ29ZFfnKaXkoGA+NQP54B0y1mCqYej3sPMwsJeo0l5PsUTwPDSMy8C
+GZzQBQBGxeXc0tLPmhCIRHfCC3Hr7hIlxTL83FyhiicPOpRWQbK2RK/qprC
Ptzf0ntY3Sks5jZBhcuDP+nrmTpn3ElfIp3VI+zTmIhlyBdm+kCu4Y2AL3Ge
KJv63eWwnQ7Cduud15oXRPP0zTvAUa/PXj97n7sle/pm/QZ3gFXXjr/4ib/6
YIXK1bXq6XUN/kbi5yDrR1E/K++QSPc1DXx4TwjDBJ1aqPotRYiWN3KHRy0X
GEkQCmGL+tyQ0C3jY6XJ7JKTN+VjvrABn6+/hZhNu1yd2j6+o4cHKtEgx77B
2zOie1MZKtQg7C5DK1y8cw3mpO8epX6Uv0XNiSjg06mfPNqg9znDXANf5LJx
OxI8317nZHBTabBW58w46j3RrF9s6mewv+CiM03/tMZ/bhCE2/3CUg9NFgRL
J6eTc3NH3Z6E97ncL34EMJ7+GXcO6MkEvzrvdvURIaWLel6ihF3MyxvpNG3T
Sfdi6pxxGB9F906M/USPahftOOIMDPBFV+Xq+rmw+vr25Zej969zSxEKf7C3
M6yzGng78UlfWHP1oHhk0DyJNlf75NlFsb63AbWY1M8EPjXyM7A+oN4zr201
8gW+Aqd5emDfsOmF0zwDtvthvpdA6sewv83iwcLa+vOWB4H4yXR+8sn3MP1T
DHweGcD4KigEviRw8LPinafCqVE8t6UzAPv4+yWBp8W4N3PQPTPDzgCfn9rZ
6U7OzhVbxzrjA7zPg/SVkepOxGcusbigfVZhqPeKfdoJLGF8anePCrM7J33U
HO2zw5wT+OTUD0XALQ34JHkH3/87rOnFEgTCez55z2cikYc4+udgy8NW6dC6
9aU8ny1kzxGX+xvrEPBSsAvpcgyZCAYKIQ4mi4zwW8WHOTnqCek2Nd27cFVS
BwEf+Wr0DbDzMz6K/aGkL7OeXd/bA2O+ON7OcMYHBE+6rTp40ueDfWGxvhEI
3o4R+JLSS/mOF53nUlk/Ifsb/Mx9+81o2dO4nA2fKut3YN6DAc8nWXeGsr/n
lrPXorMH3v3iDLw3aer3bOF+TvzNlk/PXvZyjuK9YusL3nfNZx98Z38Q/kzS
94lif3L4G6EA243mhYbX2E4lCg3h10BUFV1Bz19G9CjSrXbtcdM9yWhPf2zN
i6kgw4nRVzYa8IlyfIr6EVkGRvNEZ3zRx1ypNL+ySvtbvCZ9+q4itMVlxAHF
pM+R6QvLNVCxPvUA9XZaPWZK9oTJuHeYZ/dlfy7qJ8q5QwS0fbaJKZ+i5bZC
6meyP0foD7I/Oe/zDf1VLi8nUulmuwNnHz7wZ7vKx61/BicBhaJogqzwvV2J
8DuJvCkf8Dnp3hmSXsdn0F4DPl9LJ5XjGwDfwenZ5OxsvXOvQg1WY6cY+HoW
5PkG+mjUSy7MzqqdkkyfRO0ca3N1TD5Ift4Ff07Z0wl8O3S7NfzPUuuNVOC9
MLzPUYwPy7lL437U1E+f/Vlxv4oA/tS7Zjg16FOB9zjOz0K9MT0/H3FAta5F
kHnXnXUGFKLAR/k/9Xv+MBy0pLb4BHCId19dPj65+VRCPDGA03nxQTnWs0Qv
YeCTeKLOtK7Ol+vR9LeM7rWc/hZ4d8cjoAT+1Dux/OJvOTy/wEjfg/Jvo8An
cbkwiSoU+7BMnz3TkQOfpadZjE91ePLw57uuyAa+GLuKxre/L4D3yWtenMrn
a9hBSz0ET/34jut4ZS+izbbs4C+B1AMFfxv7+3Mrq62+zfsoENRjUyfGjpin
EzoBEWD+9GKCXsc1zwHXtvL79fp3gwMS+OuFdwGMLw7R07Fv8ADeF1ETZL1c
Xd5QLSd9clfnSO28u5+and0/apnAFzbj0/0tI+EojPTpN/BwpqNOvD1xrsES
POW5hoBJnzDW9x50Tgr+NojZn8TxAncbUZfeLeALfKbpBel42Rfsdyhh8Kct
dwgp+ayYbk9e/5SUvTC2z6WN3Eo+P/DAxMu8j8X9Qs3+XAgo2g1hIeB5rz8x
k7p4fBKqoA5kjMMNPf+s/kySQz1krsegng5/FBTyLI91dT6aArtb52yp6Z5a
xudydfoZO7u91OLSVrnM9bd4wp8eYz8cxocPBd5OyPheLo7x+aqdFvw5S8z0
M3w05nOF2Q3NU8v0jVX2TBA3JewPzbnrvhfqFkLnfSpXksh6I+B7cTe96L4X
6/VZMhwvOgHsScIOkP15zf48CGDvYW55OT+wfQICyFxmrgqmjB1r3+PTQB0Q
L82VcHICqMt9O4fl3O6e70ww1qxQjHHI3yLoHLP0zACWd8k2tMj9nPB/Gerh
NN2jGN8TU9sCSZ/T2SJ3ddb7DwvrWX0prZDx0ahnuzpRzZOJG+vwh/I+6G/R
eR/vD0QbzFTiTML4CNJn76iV5xreA++TdHsKp36K/VE/SUfUPSzu10FQz5oR
S2RPOvHX5ffbspEHN/tDZ39+ob/73tTsbPGoZbE/ifWFMcAI2Z/efS0EPicT
DDjhI9ycSqdPOh1fzZAniRQmyj8T/5LzO4sjO7m2XOrkPS0CPyeJelRdp/Ya
5iAvQO2MrvW9vfm19eF7UJVROBhfmcY+09uZTGe1uasoVqZPd7kMUI/SPLdo
4KM0z/eT6UsET50jP8nUD4Ig9tO23Z5wPusz9UOmw3EMn1bmnUr84cA3LLwV
ImCc2V/jtj2RSlcuLpvDDKAQAdHUg8UHAyaAYewvDhQeHh8vrWdRPjgOHBzT
denTOeY70UvQxilAQL2nxW/GJze3MO8RyttZe9lPNJNZqN/3TNI35H2svwUY
O0V7afkx34G9qAhhfHLg2wXnJx9qUF5EnvQJ1c74qPfZ+SDEPpP3dZJyvBjU
L3bTCxb3G8Gf/mILNb2opmsP6mc5P+OIn8zsr3x+EcFfo92mjg7B+O8JDmXi
eGAoBERHS5ITmznwN/eLRze3vEZKQcxnv6xnGCZsUtpmGPYF4R2UOj10Tg74
XqJ8Lx9tBBQCn3qLHZycTs7O6vuJNOBzjPlYusd7O41MsSzakFyLi95c7b+g
VhW5WB2eG1ie/fMWuYyD90H4g9iHdlxTeYcd7aPheDETKL68z2R/YZ5Pe/Zn
Zf18u860HX9252fM2R+Ev2KrNZl+Dv29HBSi4MMQ/nTep/vPjZFNGPwlJYSq
gaDEA6O+hoeSz4t3xHOT+nx86Z4E7/QH/IzPjDDoOid8/bjNnBTwJSt1lk5P
nxs7L6/BjM/gfRWM97m8nT190hdq71Sd1fbdOzrjQ72dVK6BMRxKSJ/c5bJB
+1sk2PT2+/vQrxn8E9COlzDNkyeAcs8n3G9Ld1wbL6qwlrMS4H3eCAj228qx
z8v/uddoTs7NNe46vrO/AP8n3wMDz1K5/pmUEMoiI7lLgueJ/FdSX6M+E+9p
G0inezjj+Fh8dU6K5Z2Q6XWXs6VvvVAfBixvYO/0dXU2iCjf4flFBHzli8vB
jM+M8qnpfJjLBd1SZPS3SBifSfpibeh7xUHgJNw2SQec8eVl+xqEmufb9JiN
5a9wGT6dYYc4ymfs/Q7Q9yJsukZTD8iFVn26bJ/em/74oQY8GQq12sx8ptm5
9xU/aQQcqaBhCYgxzQFjI2DcK1iijA98iThYfEd7LpEzpLPFl+75jvleM+yX
V88Z9rNzgvH5xhl6wxYXd5pPwviYTF8cf0vBNekTCZ5vNekbH49LFvuofe5o
1m/wUWX98vYPX/UMhGNfQYR99/suzRMjgKOcjnV5ej5Hu43M2Z/U+sKwPwsE
8+VyamGxed9rDte+q5wUcwSZ3df4ORYnA+iLfagWqnIQFvyZODhGPLoiOCN9
STTMT8wvE5/leQHfKeD4tKsT7w7yBT4+wM7EGSh/S+X6JgK+g5NTMOPj9rAL
xnw9gvF52zv3DfjD0g2dkeBJ6WC4v0W1uIgnfS7sUzWeHYm98z3onGG4GTPs
4CV7vno+ta4zEeRpPa6WIcpZ8hnD9MJVvrgQkKt8qdMIyN/uWvCXKx7MLi0f
dXvN4VpPXwLYIpUrAwTVYaifjYlzQCETtABCBmeB87U3YHZClhesbcbWOR+1
j4azRXv9uFBP66ZWtpYA0kfN+KovG5+t5UTgbRggdRqMT5hhd5G+ZBINtr+F
ZXxK9lRh9vgtLm9scRkLLKqLGPkJ4Y/q+cRlzyR2G6EtZ4NtIEL4oxDQ8nwC
JUSY+AvZc+RrfVnf3f3DL7446j2gwQeJ94DifVT3NUUArRz0eSj2QRp40umU
Wi1eEYU46C+WcrwsQbDz4ndhLM9L5KR0TmF2z8/MyZK+BqB+EldnBHyTs3O7
jSbJ+OiqateMbzT9j8P4QGc1vqgoBPtYlwuVawCxPn3Y14Fh9s8reL4dAoqn
fmo8qgTPN5j6waEwVnMtIoBM38shQgA9FvzFnP054c8Ewcfs7u7c8ora8x4w
/mvZjA8SQC4GOD4OOLgW17OHrWMvsHAiYxIXt6cpjNPFQTovvNMpPKpw0np4
mMg5ujELYHwo3Rt8rFxe/eY/+2cHxyd4js9F91DgO7TvfknI8xnzIfsa9K7+
gaIVAnxJj/mEoYa31DAT3N9nfR9n2AGd98HFRhLTy6DXOq+1W/v2fCr9U3vx
kD2fSVA/HPgqLhCE28H4vus47pf1wjP8Ne+7CbE/W/aEQ0Do/9QREN0NEcYE
j+/uJtNpXe7zAj7qk3C3HYVrPGjKMc76ey2kSwr1zs2PVge1kO4RHmClA7zO
i339LeaL1s7xyXVORfoq1zcT6bTO+MA77vWd6C91MiuK3N7OAy3Pvv9a2gk7
q23q5wQ7fN43nCU52zvzmuC5ZXg74fFuNJglonl+9jw7w/tQ9idRPp3wx0RO
xpN2H+GgBX9ewQd4++cVeA9gf17jPwv+NvaLqYWFZucehT8JDhLtZ8hjuRAa
nwPm9va2SyVeIB3rhYqWiVzw+X8WbZPgevh0L3Gd0xnio+IMlcvnzUT6ggaw
lY/kfXSOrydhfF5SZ5FgfHE6qw3LRFiSXWzvhMD32dHKiae+OMsDHw1/o4Jr
fZbKIKD6nxr+JxrK5472X1zQ9vrtmsBHwB+nebKRh9G9XGlYzw5nf35xv1df
2WDD+6j3LBHlE0XArVJpen6+cXevvAQB4ufQ//mE7V8bUT/KCyo/hy0EtNCw
dnGR293d2NmZmJk57z/wwMcgIORZ40bJC8ynigJfHMjz/TnzqHeC7Lp6RC8O
+JShBfhblBXZN8ugA59uEhvk+Iqa1KnuKocrNb2lToz34f4Wf4uLg/FZO9m9
dhXp/nl03qefyU6LS5jLJQ6ne8v9fV7wBxHQy/ECww449RtX1xnC/rycn+r1
Xx6WvQwR0C/0VzFuR423akz3iwV/O5Xqc+z9pfWlOcoOg3NJMP4z54DoBJBz
wsSBwp1SaWJ6Sl3rm5u+AIGyqje+IKcLZnZj4nqMuA17XyU6pzy+x6cYeKnz
8Ow8Ar7SqZ7j06t0R84WNNfAop5oI61/mm+kecLeTob0wVxDwSR98kmf75jv
j7fOiT43uezptdtoG7C/Ud4hdLtf4Q7d7Y5YqsRFZ4z42ePZHw9/IGPr7fyE
8AdML6/XXqMxOTtbv22rzyi/QYD7Bdhg7PFfcBIQ+kIH19HtrQ58g+uw1QoA
CC8ETAook0I3HeMo1FM/uoC53vDS83rQz2ncCPmqnU74YxCQcnUenJ6ZS9j7
qkBJnyxQXE/o6uThjx/wES4Xu8UlbC+tTfowh6c80Kef4arDWQh/b83Lxo+b
At6HDEbh1G+AgIpu8wRQBVW8sY+zfarIg3TqB9nfoZF5N3qNhuxPtO4BgKA7
/iBnfxAEB52flctL1Q8MeZ+YACLnoU4DGf1TuWKUN4Y5n9W1V6lC7Mvmt5PF
FB0TJQBKoRv/HeLQPR314sibaCEn20s2Qj21pgFlfL5zPV+RE16FRmMinS5f
XllvFmq6J2js7HklGoJ0TkvwNOheyL6G4YEZbO/0UjtH1Z3DB3G41Xvgd8HY
F6flDIU/S7tG2Z8a+amSTwoEQeJPuuGI972YBNB7z/to1dFweYpJAEWtL17p
v/LZ2cRz2rdlnTwBE0DrDDw2dtbY7lCnCurkg/u1OsS+3M4OZEDBSJc4O0vq
ovDufPiRun84McMmPm6WUV7P4noBCb44RA91tui8L7tfnJ7PVG9uTdQTtZYx
71ZzxkfuaGC8naivAM01BFtcDNQzGZ9udKFQT/d2qpUNvL/l3Wb6xoqnkqlf
WM21xf6UZG39n8bs+UQHf3L4o4HP6LiOvehWlHz3Hf/ph0zt5nZybm7rsKID
3yv8gTmgBAHhvA+VQHkaaCEghMLju87k9LSFfZXTM4gOfzyuM/NxzAs1sVgO
JZrxieN7xBxZiH1C0jd6F3T7S5tb6eWVWqerO1tAeUtghl2AfVyaD3o7MX+L
H+MjEfD12LxH/S1ib+dnXlD7Hvgg9XxUzQuFgMFNL5D6qWRKsOOloO3+QJMO
XituBdRPtOtBrHziCFinsc/D/Nm5Ty8urW3v6C67OBF4zP2C+kIdo0CeAxYb
TR3+tvb2mdP+s4NXHNQLUzUZbRPNqusFBcTdi+i/Pg7jC5A6X98LnW56aTnC
vpppDzP38XEzPpezJdaMjyJ9xeQ2NcAZn1dvp8TeKRn2fV54ekvcZIEP7bge
Tv188g472MdEPJ9o30vRtH1Sppeh9YXpeyGX24rdL+4974mM/456D4sbuczq
WrPbH31SuUCxOaAMAVHW8GTSBxL+rM5k/UgfCHqtdmevUi2Uy42ra3js6/aY
MxY7PjvAoRh3/iR9/r4sj9c2Me16xPiUvu1Gvf6LdUrcz8nDH4l6L31l0/OZ
jeKBcrZoWYbhBMHF+Bi6pwSc+FXVdKJBY3wCf4ua73Cd1SDXIPS3hO1r8PK3
vIde65jPIZHBH3Mr4p79gTkvgncgF2NiH2xN9xj8UQTQRECS/VVY7BvOAV8b
5ocyjl/vmZMDKqK3sb8/nckMVv5ZBPDlgXsHLj0HfMLmgLaqJpkDKhwsHR+v
bW87J4P8heILikfJohvEuLALduOonw/jY9GIHvp/YaChcK7H2Fri6Jzq1Uth
X/ni8kMqVWg0MGfLgxP1yjT2oYyP382HQt6BvaYBOXNQP14I6dN4gTXpy2Pw
p+/WQWd8uRF56VhFLu+B8b3B/j7yr5YN/pJSPpGmF3/nJ0H97KBNfPgrGe+X
kMGfqX8apbteBNApJSkELNTqk+n04dmZ0/2ShArKnbpO+EsvLlbPLyTGmEQu
J0c7x76e+t2kLmsqKrwYVVOeUrcgj8K+cfg51et8u1qzlvEBZ8vr28eL7kFn
SyKNnZS3E6b5YkqdwYG+OJm+zy54fq7u0KzZ50YAH5n1U9inJNAtGvuMDUf+
Uz+FgPuesz8r+KDf6aH3gUPri2j25xI/9ZkFrn8ysz8UB5sY9kVX5fIygr98
uTwQPAEI+gUAGewz+SCuwlFaaP3qemZ+Hs4E0Y7Q8aGhjmtOdLNydujXy59/
PNSzM+mwpyVwrjfcsX40tEvFdLaQwNftL2/lUwuL1ds2M90Lc7ZAnTNgzCfD
Phv+CjT2QZ0TgT/T37LDAp9wzJcjgM831/AedM5x4GYA9UPNRcHKJ9Q/d1ng
A9QP7RRywJ+P+8Vovg2ofLHYX62n2J+0+0XO/pqd+9nl1YVsdrD1zyKAFBOM
g4M0E8FxcHVra7dW570xuvQnwbK3xE35BZ8/9a8mVi1YCQU0dWLwvkDU82F8
kpciBD59wDeTWVjObw+dLX0N+2JtZzBJ3wjyeN7nxD60TCN+aWfBKu18ORV1
ZyCjdiK8T8uwq0i7MNTw2UnfZ8RHedOLjn3ywR9O/fzZn7XfVs3+KN4nH/8x
wAezD+HBBxX96+HOT8gEAyygjZf79uze3tT8fO36Bp5d8SVQzEfBJ8u0q9ub
mJk56T84Z4JnPruT3g8+Ungt53eYtvmk+WxRru03xg2e60m4HqV2Rlfx+ORD
KrVTq8MXPGxG8sc+q6c6sKqatriwjZ3jUTuF2CdROze03T2K+v0JwT4cEF2D
P8LzGXfqt922ez5jtr5ALaKIUb+AwZ88+yBjfx7FL8EEsPHS/TKRSu03m9QJ
Fof90TQQeg5fT+mXQ/tpt1rbPDhQ57YvIvD4kuzFY6X1HKzH/khn5EeIWV74
XK+lZTyDUc9J9HjGl90vTs7OYZ0t9naGoU/Mj/HBLEMA3QPmlnDGZ/V1WOfb
jul8CK5wCV7W4Bzz/fHY3yf5mvjsb4vNPkg8nwXtRYLud9A54ID6MTv+Yu56
sPo/rek5T/3c2YeR7Mn5PyWzP1z5fLlqN7fT8/Pru7vNXl+Cffrcx0n9WloX
FvB/yvkgiYCUxdHCwTB+F4cDUihs5e+cz9/F70b3DPDnxneRyRVOXQxXuRh0
717AdE/dvFXbnfm19ehS0XUb+3ru6R6Nej0N/lSM3djV4qVzmvB3j3o7R2M+
zX8eQvq0LUXovoYgxtfROQuOfdq8Lylce295dtFzFhg+tYCkX9MLw/6g8ulb
du0qe/FTPsW2z65E/5SzP178DI4/vOqf3d5KPj89N1+9umZu6YeHYaAZpmVy
EJcvlPTkH5vZeV9KyOMjxCzqayh0CyB0BNJJON2T9tFvlpfIXM+X8VHOlmLr
+EMqtXlYrvdRhTOmzokwvgBnC61zinbzeXeXJdRWHezt/OygExNPE8RZJfwy
aXd1L6FmqULlc9uEv53hPHd4n2MU2cXBPlT5pBwvPrM/2HfdGxrJ/Fb+adQP
Zh84HKTGf8IA4MHx8UTq2f8Jjzt9/1r8USCGfZDLjFQ+jNH4XWjPiRAl5YgW
xul0yIP7FIa0DvI7Gwfh3YU36oGOMvl0j8E+PsFXv+8t5fOTc/NEN7V7L4MF
fAABe6azxdrHh+f4qDTfAVlcZuUa7EmfEPIKmsClu1ycaqfun1fyGvS3bJk4
GEftlGPQO8GvuAgrZn8G6qnIg/b/4hf3AyWucaZ+GAFMsvEMEsBg9gcI4LjS
f6/XXWdhfX12ebXRvuMPOgr4EhoI2mrn8aiL0tL3EEwMw8c3vli3Dze5g96V
YMYnJHoUCEpeUYwgX3tZPjs5O7tWKNTAHZ3cz1m2wc52tuj3n4zO6RtnKGLT
k5jmFpv0De/8ByzA2dsp9Le8Me97P/gV87lB1MvaRWfunLuX5xPO/tD7JWb2
R0TdHeyPVz7FwOf2f7qwz6P3zEn9JGi4U6n6GWCCOrFbYCaIza0kk0FSEdUR
8zOiIXgmjucv0DmfdLyz5qpOsDOAb/R/p9WbJ9FH7YK/x43iwUQ6fXByas31
aj3rNc+tZpBJnV2C68UEPiTNB2PsPPyRe2ldMfY4SXYU+EYIeOuBfW+Ma599
/5GVc4dZP4sAvtDtDsy8y7Evr2uemvnTg/dpHXpE7J0MPvD6v2z8p+888lv2
p/xsVvZBsv0hLAERHWv1m9vUwsLy1lazc+88A3kVVK6FRod5+ezs2PzMsZ3R
1nMTUs8MoFoOBRWilQzX3N//GGTMw/DOl9+1Huz7E5+5nv1bwZA3eE2Wr67T
y8uZ9Wy9c0+InDbj8/Rz9izVRc/eQgQ8cAEfJnXC04NDvYHdhffmFTS6p1M8
yPuEkz456jlJ3zj0zM+FXzGfg1P5lBSdMdQP93y+Yl9g3gGdPlPOTyEH5G8j
S8aIQbTziIJC2PoSIH76hiByxeJEKr3XaICTcGT5U/DH46DkiI745mp+m9JC
wWeEmiGlnVJohfMyE9147sZzOl+Fc6RtQt+sXNgEIueDDPW8WR5jaHl+0O0/
071UGuvnRLT9YGeLkjf5nUTxSB+HenEDfZq3U2hxyZsVLhj2Ib2diUz6vtNY
lgj2ZQXrjfTbEj7v4HB+JjT4g13rXlO/YeoByTsk7vw0EdBI/42jAXtw1a5v
5pZX5ldW67ftsbK/6JCfmpurX98wrBDMAV8/snqpHHckeBTnayAWw+dvY32c
KxH3phz+eE/L83Tv7Hx6PvO8h+juHr5EvRRODPXsu0q2oRrxt0hQD6T58MV8
geUtnr2dpL/lO9Lb+R74YMDzkZhe+NBf3MC7LPeH7gehy64djWdh4z8vBOTN
n5r7RVeHAsVPuQu0UKt/SKW2SiWn929oB+W0NfSgPjw9i0BWfrDrGOHUCQlW
hXy93GsqY21+V3y8Gymc9M9/THSPQb1ap/ts5pyds6Z7pqfF7jVipE6G9Jl+
Tjfjkyca0J5qm/EJ9hNJGJ9vjD1Y8LSvd4ZH7w03qdmfCXlU3mFEyb12/G0P
Uw/5dizep16Q2OzPEDytkR8feD8Y3Uby4mfPnP2FwJ86FkYHBaF/6tnhmASw
ftdZ2shNZzKVi0svsoCcupg3ZmFt/aDVCjjqdd5E6aUujsZ/RsI3qa95RU/q
awI0TJ7lmYzPbiYf3p88DO9PHKinP2C4Hqlwvly7jWZ047S+t1fr9tC7Mt9u
at7bqWWLRv4WwuUy2tEp0Tkpf4uvtxNmGQqA8Y2yXSbwSXINQm8nxV+cvC+p
zupx49dYn4OQ/Ul4H8/+YG85knnH+s99Bn9o6uG19yxG7H2U+ysZt6OjDvkY
4z97n0ucFDwDguoMLJ2cTM7OrmzvmB4YjkEYpy5BQBq37cl0uiXoivGihCa+
WBikf80r43PuH/Tlffrzgc8wEYrn8rEYP3850ZMwPvWaoV5OlavrzNp6anEp
ekBA3usr9pXxsVyPzTLojM+dXvdlfGaiwe7q3A/lejYU+jM+2t454hpwxpcF
S3my75XrWdj0fi407c57PuVpd579me6XkFVHwsx7QOuLy/lp9UuQex+EFtCK
P/bFccI0u/1csfjlzMxWqYTWoAVMA8vnF9XLS8hcEtEAUWTkEVPGGXF0S1C9
dKKe5PKd6MlRjwnu1e7uV3cKg0rqeu8RAz6ktzYoyNDD0uuBWQZa59TpHs71
wtN84E4+zN/ClHa+t0lfIjj42btD+awfkXfAd/x5Tf0s5RPFPqsnFu/8NLEP
ICCOfWHA56t/ymZ/mkOgF5f3ySXQxt3d8tZWxAGLRy3X7E8vgWRxUNNCx40d
EkykNEke6ZLSMHm84+EPzF7d9FyuczLYV3txcm4elqNbo+z+fv2+h+Ednt0T
Sp2MzmlWKpE6p+5vsdROl9Rp60I89jlzDbbaqWlc+bZdXg11znxb5G+RA1/W
//z3xot3MKdL8O8dt+lFgaDV46r/MqzuTAB/pP/zgN30hyLgIdJ7ZhlguCGg
F/sTNsDEMYJGZ2Pl4nJ2aTm6KpeXDde56sUEqSsOdlhglDg2JQtzEO/gnDSA
2VEip5Po8ZA3eLB/1JqcnVvM5fSFs5bOWRtmVF+q2gP8nCjwSRkfT/pcqGcj
YBy6h6AexvjkaT6nv4WRPd8GgN75FYaP8bN+zrZPyPvyaoUxMTiWzP5o/RNR
Pos+BFBG/Ubv2TjZhyHw4QmpONgnAcH9o6OIAC5v5Qc5CBMEHaPAz4WDYXD5
lqiHYB9B8YyP9g/ZgYwijs8yvsHr5/D8Ir28klpcih5QrzEvT4sQ+2B7UoLA
B1rLuBzfnozrIYLn8ATzMnayM75wxvdd8Xm+h8vyfGbBCNXX9xJQdxZnwR/c
dcvkHQIGf/zsD8YfnHe5lPNzZP4EHWgx2Z8IB3v9rcPyRCq1kn9GQDkH1DyH
aFe27VSkEPDN0DBZmMP5HXnZ9wnx6R4vb7rnei+oN7e6NjU3H5E+8+WEN7HH
7CizUA/6OWPu48NQz9pJ1LUYX/iYb3Q9V3ZsA69LzDGfBPjW4/G+9zaDS+r7
xOn5pNmf0Sv++lHb8ef0fJqoN3rNQPizOCB/DyZkf2j2gdE/6VtQfO+DpPlT
MAS02F8yc0CBDaYXIeCHIQLG1OKamkfUqfu9Zxw0nlvffJ5s/o6d5Rn3DBKk
8xU56/Se2cGDCPUya+sR6hUaDdTQAujeaB2DntMJQEBrIwNP95x3p3SQwZ70
eeX40K5OQ+pkM+zoGaj3geh+Cd8xn8TbOQ5c++PKK4WDvzjsbxsDQcP3AlTQ
sMEf5vzEVdD4BhjozR7CX4+ZAMqEUGgt8PCChqmgzwhYKr0g4Ha93W6YB68B
bff3Sxu5o54IAY2T31MalSOjEDcZtEVVWV+As/6llkTsRe54ZhfG9coXl/Nr
65Ozc7CaDNg4/XROJ90r+2cZKPhjnS2263sPK6kOYHw26YundiZrbvmOXhSe
vhnOKsETzlIFg78O3HNk+ZpQ1GPEz4DXJJp5B9E/Uvl09p4NH4j8n2Hip6l/
PgAaKGoBlRNABgQVAq7tFOo3bcskM7hyxeLG3j44sVVfKHLUk2DxSgMfbD5I
8EQKkpxgR6Ge9Xd5Q97o+Rv7FPSenDBVM84sD1E4z84Xslka9UbdemZPy8Pg
1ciwPH/Ug4xv5OEsAQ+nDP5eN7CjLS4juhdscQEKlbp7l8Af2t8ymPQNy0PU
1K8DGUcW1Fa/DQZ9J/ArMRAkqJ9W9pKA7RPxvWCvrhAQxJXPBHJ/FAFEqZ/E
/ykhgNXX7PCrs07fERN/DijhgBOpdGY9e3h2pv9WRPciZHQuCmwaXn3UzsHD
YqCRJsmL1Wl9ES1ZyLPoPOXhbPQe9ptHqYXFqUymUMe5ngZ5NsuT+Dlp+Ou9
7GWw8gse6XVqEa2gsyWxkmpD6qRzfCjk+fa3vDfS957xK1m8pn7OEtunMPNu
cUCt/4ec/Um4XgHc14HCTzf2BYmfsPvFXX0mlD01/RNJQMjhT4iAKBRGB/Ju
szmTWZhZWNhtNBovifi9RjNiEImc9haC8PqhLzbFwTX+mcDHcfBOf5Ag46t1
upsvM9z5tfWD0zM56skT6/oImyV9SJbhEHA955ivCHYSAamTzDKgwCfJERfA
RMY8uwLtnXGS7GM6/98Aqt4zProcLx3f4IOf7dNif1r0T+570QkgcH4i7xFf
9pes/9PF+0Za6LD/077kCMjjIH/Gls/PF9azEQ2MyGBEIhQTRI9x7fKGBhQN
xVTRRqtn8ijGOORv0f5sk16DHkzuAsDOgXcDLLtpr+wUvpyZWd0pVK5vaMjD
53oSJ6f+Ue7npHPrImfLAb6MD8e+JOne3f2gn3PwwMvfovM+rRs50NsZwPi+
Q/j4eZ8Dw7LDqN/go3z2B51UAconFD+FrS88/ElmfzC1ZBJA3APjzwG9M4CS
UaATBGu37Yjx/d73v7+8lS+fX0CSOKYLaKcjDGKYo/wzb3kFQ55zrtfoPRRb
xxHLi7herlSKeB//qkBLWoQXLXLCGV/cBJ+rs4V1dYq9nQ7so50tfKjB4noB
xk6ht/O7cr0HPPXCPkgA9fmsfj8jzLwzs7/tNtJ37Qt89OzPuD9U83Ev/bPk
8n+62F+sCtCKvQv+dQ5Y89kI79RCG4QvdLfeKJ2c7dRqqYWF6bn56EHjvgtB
cNxo+F25wjAOIh0FfK8odtveKB5EkDe3sgrCeoi8WdM6qPV9IvGAD8c7JYYk
RfcU8BU9N7B78z7QPRWMepbUyftbGALyTuyd7w2/Enw+wsFf/MA7NvvrvK53
bwc2XfMEEG29hq0vQRNAcu+DM/3ni4BwC7xvFj7QD3N//2FmptntvQqhF5cr
2zvRZxY3cqWTE/6ofxusSVaf9IW5pFBPxz4G9er3vZ1aPb28EqHexn6RqiMj
WF7CPS2DuZ7+QK98Hxvj857xMSyvoGlNMRmfsLVM7nL5zuHRe3uewlz8gF8z
eQeN/dm8T277xF5FxmsMip+S3jPY90LAnx17V28lsQTqviD70xAwvAd7xP6U
ER3PxSeGgINrs1Ra3SnYoNbt7zabEeOYSKXXCrsDLVSHAxQH3z0rfPQaVsZH
Oomq+Qp53X7x+GRpc+vL6K4jtwm3yqJzvZruaTHz6XxKXYB9PfWqdsX3vLMM
2IwP+tZw1CsE8T7Uc874W5wzPk3txPcTKd43bsaXVC/KuPHrXTwHt/iJJP5y
YL+tnvtj4G/HRMCYyic69dtDNt4ifdcW8NHdL6RXTXe/gDlgzwTBcA6oe9HB
HNCNffoc0E0Aew8T6XTt+oY8t+86+XI5tbgYfdn63l7l4pI/5y3U+NxgJ0I3
6vG4tc3Bz790eraSz0eQN7e69hzToyd6ug+KcrPEY3z25NrqOCq5GF+AyKnd
piKuTjvDDnzg8Hwg+1tcOqdCPSHvkzM+nWu8fnx/uxUC8Os7d8lmf7FSD7z1
BWV/SSEg0f0SMv7zYn+Jq6BEG/ZIBQ3QQiEaPvsoVlYlxpjaze3mix00YoLr
hd3Ds7OIQ8mxAOKLhUGfBeMSJHcW5DkYX8TyWscDlheR63y1Wru7d/73UbkY
uaFF8sq07ujkbS0BOmeR1DmfHydS22JLncPzJ86OhmB/y3ub8SWIg2NFQ9+/
i8zmA6+RsOjMy/SC4N1o9tcZzf7aHV6rVzkd6x4Per0w7HOn/3z0T4MPapkm
OAfsaTfShuwZ4oGhTzzfZmxIAyPgiw5h6WRwAIK37e1KNb28/CGVWsxt7jWb
0BgjZIUoPZR8hv88BanW39ggPukFcxTXQ69q9KOr1jJr6xHkZdazz8WbHQby
Rq0s5HRP80c5dc6yDAHNQKuucnB6SJi5RZ7ji4V6huWAC/Hp8Mfs5lNqZ7C/
5TOe/58Lv97D3wsRMCzwrve4qpeKkP1Zd2IMAgawP9P/SSIgI3vGHwKaE8BY
ewA1/dPOAA5UUOuElENh5ep6cnZWOBaEOl4EebvN5lJu88PMTASF2WKxfH7e
6PXlOBiMO+OgbF6Xm9mNKF7v4PhkrbA7lclMpNOrO4Xi8Umt2xP+N2Gsv686
qJPieuhcT9jSGaZzUlkGfYTBo55kFy1kfNB/7qVzyvtbnGm+96xtvodrHD8f
SdzPOf6T5x2g7XPw2huo7nG23DIgSPE+Sv90YR85+zOxD7pAe0IJ1HMOaFfx
KxWUp4F185fRObx5WJYAn4MM9p7X5m6WShECfjk9HTGarcPysz1GjINhcPlZ
IE+EehHenZxGNwPp5ZUvXn4g+XIlutOoy/COmehZ3F8CfAKiZ3la9FXObq4X
29JplFQk0ldmwJ+pNcX0djKoJxQ8P/v5/8f1itP3Qjs/cd4ndH46CCDmfuE9
nz4ISOqfMAGh3qpxOKA6MdSRIknB+zJBaiuu3zTwvhfhlOWsQHVRIRQOHjS7
vVJ07O/vzy6tfDE1Nbu8GkHAs6x61/m8sBUAcxbkOfTMm9u9ZjPid6mFxegH
O7+2niuVDs8vhHhncvnhZ4z9jx4qgYzu6U5Ov2ZOichZBGVl5lzPnvElj3oE
6WNQj+rq9DW3fK4B33uewcX5Psn+u17/R7BdDyGzP1b/tMFu+CDfNlAvJPDO
Zh9o9hfo/3RyQJP9SVVQaxxTCQDBnu4ANNr7qcM2X6kub205dVE5/MHHEe8r
n59HHHBxIzeRSk+k00sbuYgeRuCotim9zwuVea1/b/U6ArujCOUjWvflzMzU
3PzS5tZ2tVa+uGp46s/67YpJ6h90eTNxndNUKuwcKzPvVm8HL6mTnu4hCFjw
gT80vgfaFO/18yfA34IqYCoXpnINAaGGzzWb+xPOK5Nlfwz149N/cTb98dSP
8MCot6StgiY6AbRwEJK+uG0wAAfJpLPukK/3H6KzOjqlveaDvmTQ/mT7rnRy
kisevKzdmY3wImKFqzuF7Wr18PS8cXfnZRz1RTHmd93/lt6zzfXg+CTC8eiG
Ib249MX09PQz2G1uHpZLp+fOqjEn4wvbr+dL9HRt08Q+v10MXjM+ZrrHRNcT
cXXybnP5jE/o6nTO+P4kXKTH8p1xUjHwGflNfc+7V+WLO/Wghf7i9F0rGkjl
/oqu9jNJCIIHQWsNhD5PkXhgeAS0HH36OYkqohYHPDg5TS0tS0wyOgRY0mgA
IBoaafSjOL/YrdWze3vPC8dnZ380MREBSmYtu1bYjVAmYlXl84tnhkjMDSGu
WRos+rvcE4vuDW5uD8/OdxvNiJ+ubBfmVlYn5+aen1gmE7HXbLG412xWLiNm
19d/Dv545/DuDjycFc+supDraQiI7GKIo3Yyb6UiwDsO+4gcn7WjYYdGPf1e
2nK28HRvBH/mDlOqsxqFvw2tq1PJa+/w/H/P+PU2PxOh9SUn0z/5FxWFgND9
QrE/yY4SNvo3Gqwz+XcJARSeFTD9J1mGG0wDed43uObX16PjPezcrmuop8Nf
MBTq9Kp6c1s6OS1EgLi/v7S5Nbe8MsDELyOeNZ9JLy8v5nIr2zvZvf0Im7ar
td1GI4LICMpLp2fli8vBFWFT5er6+YoeDD8ZsbOIuO0ftaI/ki9XcgcH63t7
K/n8YnYjvbQcAdwXU1NfvrC5+dW16PMRPy00GuXz8+ptO6LJwbQOQJ5eXmd/
JoDvyxXOMuvkjD/gEzA+ROFMJMvwin1Ec4sc9SSMT881fBejfO8Zv8aB144/
xV4Sz6cOf3z2AUU9TfmMOwEsmMVHGAKKJoD87I9GQDsDqBf/Qv1TkoXXzzcR
9g3XxKvd3LYQetP+kEpV7wP3JTGAiPLEmIA4ZGS9CIMiCItgLgKv7Ur1Fby2
dyKIXMhuzK+tz6+sppdXZpdWUouL6cWl6Iq4bfTL2eXVzOpaZj0bEbflra3V
nUL0BwfQGZG4CGqjb1trt+vdfh17/vHADmxO5+9Mhnk9lN37o15P0znxbbMY
8NlzPQn2WYYxVvAci6vTZnza/lA5/G0BrueVa0gE+97+/I8JVW98jYXPxpv9
hdk+0ZwpMrP25H0MAQQeGKQIVE4D9Q5DMQ3UVVCIgMl4QemBYH99dy+7f2Bl
A9UJLIc5OSyOAw3DLvRvTwT92Rw6iGcaOzsehN2bKPYBBDReP8RcLxmF02lu
Yd5lkPfFgjzZdoZt7fzJt+37c3GUz+Z9POMbB+/7DuHju30OxvMRU78Njfvz
sz956wujfMZxv0D2R78TDfY3TgMMzgF9L3/gexn53fe+nJmptjso+9DP7YQQ
gWOIDA5S6El9pfwzY/p3AdT7/9u7Fq02cmX7//9yJ5M5iSEkIU/ABuPwCnlN
JjN5QiDJOZ9wMwHLJdVDVZK6W233Wlos0xi73O6urb1rlxTpQzH5WFIVTszy
FgZOWI8GdC8X8tK4XgL8hd7Or7Z2hmR/y5ir7hkZX235f5mwLCF+WJ+FX6h+
0bNM2yfuhtADn6OBeJ1bfvkX3PkeYX+aBsAoDpJLJvp1QC0aWjPn/qvXmzvj
OSByWdpbPaaToeFlHEo2Hx59ZhirrXc+0/DOjnrfMfad0ApnMU8L6mII7y8Z
8gJ/i8bbhuDPs44nA5++jw/yPs7f0pdRG361rd9my54BAqate+b1/TXT+0Bx
wPCexZ3vSRVAPQ3Eq2HH9U8NAkKv4Oj+5vH79y+8VWL+S7IS+UhrCAgRrRVc
0w7ZTURpm9p9hdLwzqEeU9eL77iXZmjhGV/MzJlxO4dqp6KjYY+Hv+IdDaUs
LrXhUW1xluqLhM8hibwO/haLnAcEUNA/96jaH1n1E9Z7CeqAeH+TQP8k8S66
+lmqBHotKzmhicG+xTobYPYe98MoOeBP1PuJfRgZX/j5GePdK2+9kQXHCdhQ
2sqiNY0om5OZHe5GT9Q2T8GD4PuN0r3gytHPxGT4k5sX/C4GAgHdVNO1IM18
+DPV8cllW8hehqixE/pbxtS+pWSNj1A7Ae/re/5vIv4aYohECEq0HPbBdQwI
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
B5rokHc=
    "], {{0, 590}, {596, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVlwdYU8kWx+eWFEISSiACUkJvgvQqvQsK0sFGSAIJJYRAULCXRQXXgooF
K7oCYlsLIIuKiF1RLNh9QUVBWRcLNlTeJAH0+Xa/9735vrn3l3PPnPmfmbk3
M4apOdFpKAAgjwwv0ewZfmIxuzAGhz/8C/N5qQgECxV4ASoWbJEoC1UFIFuY
L44O8WclJiWzSFKAAx2gDIyAGZuTJ/KLiooA/1jedwBZQHDDRhbrn/3+tqhx
eXkcAJAoyKncPE425CMA4HSOSJwPAKEV2o1n5Itk3A1ZQwwFQv4i43Q5E1Vl
nKpgE7lPbHQAZDcAyFQ2W5wOAD0Q2lkFnHQYh86FbCfkCoSQ10L25vDZ0Ea/
CXlMdnYOZPngWKT+ECf9P2KmjsRks9NHWJGLvJADBXmiLHbh/zkc/7tkZ0mG
+zCElcoXh0bLcobjtjkzJ1zGVMgHhakTIyGrQ24ScOX+Mm7jS0LjhvylnLwA
OGaACfkdlx0YDlkXAJQiyYzzG2IztljeFvqj/oL8sNghjhfnRA/FRzOEWRMj
FHHQ2Xxe2DCX8fKCYoZ90gTBYZDhXKHVRfzYBIVOtKFAED8RMh1ya15mTPhQ
2+tF/ICJwz5iSbRMM5xbtDtNHByt8MGo2XnDeWFGHLa8Ly3ITvn82FBFWyyC
ywsMUvSLJfKEcUN6ML4o3z96yL9IlCVf3zJ7GS8rRGY3grwrryBmuO3ZfLio
FLljHRns8VEKzdgLUX5U7JCejyACBIBAwAISWFNBDsgAgrbe+l74S/EkGLCB
GKQDHrAZsgy3SJA/EcJrDCgCf0LigbyRdv7ypzxQAO1fR6yKqw1Ikz8tkLfI
BM8gZ+M6uDfuiUfAqy+sDrgb7j7cjqUy3CsxiBhIDCUGEy1HdHCg6ixYxUDw
N7ZweOfB7GRahMM5fI9HeEZoJzwm3CJICXdBPHgqjzLkNV2wUPyTchaYAKQw
WvBQdqkwZs+wD24GVTvj/rgX1A+140xcB9jgTjATP9wH5uYMrT8qlIxo+z6W
P/cnU/1jPkN2uhXdeUhF6sjMBIx4/Rwl4Icx4sJ7+M+e2FLsMHYOO4VdwJqw
esDCTmIN2GXsuIxHVsJT+UoY7i1ari0TxhEM+9jV2vXYffmv3tlDCsTy+Qb5
vJn5spcgIEdUKBak8/NZfvArzGOFCTm2Y1gOdvYuAMi+6YpPxlum/FuNMC9+
t+U2A+BeAo3p321sYwCOPQOA8f67zfgNfKVWAXD8GkciLlDYZH8pgAAo8IOp
AbSBPjAGFjAnB+ACPIEvCALjQSSIBUlgGhx1PsiGqmeA2WABKAalYBVYBzaB
bWAnqAb7wCFQD5rAKXAWXALXwC1wH66NLvAS9IH3YABBEBJCQxiINmKAmCLW
iAPihngjQUgEEo0kISlIOiJEJMhsZBFSipQhm5AdSA3yO3IMOYVcQNqRu0gn
0oO8QT6jGEpFNVA91Awdi7qhfmg4GotORdPRXLQIXYyuQDeglehetA49hV5C
b6FS9CXajwFMGWNihpgN5oYFYJFYMpaGibG5WAlWjlVi+7FGONc3MCnWi33C
iTgDZ+E2cH2G4nE4B8/F5+LL8U14NV6Ht+I38E68D/9GoBF0CdYED0IYIZGQ
TphBKCaUE3YTjhLOwHeni/CeSCQyieZEV/huJhEziLOIy4lbiAeIzcR24hNi
P4lE0iZZk7xIkSQ2KZ9UTNpI2ks6SbpO6iJ9JCuTDcgO5GByMllIXkguJ+8h
nyBfJz8nDyipKpkqeShFKnGVCpVWKu1SalS6qtSlNEBRo5hTvCixlAzKAsoG
yn7KGcoDyltlZWUjZXflScoC5fnKG5QPKp9X7lT+RFWnWlEDqFOoEuoKahW1
mXqX+pZGo5nRfGnJtHzaCloN7TTtEe0jnUG3pYfRufR59Ap6Hf06/ZWKkoqp
ip/KNJUilXKVwypXVXpVlVTNVANU2apzVStUj6neVu1XY6jZq0WqZastV9uj
dkGtW52kbqYepM5VX6y+U/20+hMGxjBmBDA4jEWMXYwzjC4Nooa5RphGhkap
xj6NNo0+TXVNJ814zZmaFZrHNaVMjGnGDGNmMVcyDzE7mJ9H6Y3yG8UbtWzU
/lHXR33QGq3lq8XTKtE6oHVL67M2SztIO1N7tXa99kMdXMdKZ5LODJ2tOmd0
ekdrjPYczRldMvrQ6Hu6qK6VbrTuLN2dupd1+/X09UL0RHob9U7r9eoz9X31
M/TX6p/Q7zFgGHgbCAzWGpw0eMHSZPmxslgbWK2sPkNdw1BDieEOwzbDASNz
ozijhUYHjB4aU4zdjNOM1xq3GPeZGJhMMJltUmtyz1TJ1M2Ub7re9JzpBzNz
swSzJWb1Zt3mWuZh5kXmteYPLGgWPha5FpUWNy2Jlm6WmZZbLK9ZoVbOVnyr
Cqur1qi1i7XAeot1+xjCGPcxwjGVY27bUG38bApsam06bZm2EbYLbettX401
GZs8dvXYc2O/2TnbZdntsrtvr24/3n6hfaP9GwcrB45DhcNNR5pjsOM8xwbH
107WTjynrU53nBnOE5yXOLc4f3VxdRG77HfpcTVxTXHd7HrbTcMtym2523l3
gru/+zz3JvdPHi4e+R6HPP7ytPHM9Nzj2T3OfBxv3K5xT7yMvNheO7yk3izv
FO/t3lIfQx+2T6XPY19jX67vbt/nfpZ+GX57/V752/mL/Y/6fwjwCJgT0ByI
BYYElgS2BakHxQVtCnoUbBScHlwb3BfiHDIrpDmUEBoeujr0dpheGCesJqxv
vOv4OeNbw6nhMeGbwh9HWEWIIxonoBPGT1gz4cFE04nCifWRIDIsck3kwyjz
qNyoPyYRJ0VNqpj0LNo+enb0uRhGzPSYPTHvY/1jV8bej7OIk8S1xKvET4mv
if+QEJhQliBNHJs4J/FSkk6SIKkhmZQcn7w7uX9y0OR1k7umOE8pntIx1Xzq
zKkXpulMy5p2fLrKdPb0wymElISUPSlf2JHsSnZ/aljq5tQ+TgBnPecl15e7
ltvD8+KV8Z6neaWVpXWne6WvSe/h+/DL+b2CAMEmweuM0IxtGR8yIzOrMgez
ErIOZJOzU7KPCdWFmcLWHP2cmTntImtRsUia65G7LrdPHC7enYfkTc1ryNeA
m+fLEgvJL5LOAu+CioKPM+JnHJ6pNlM483KhVeGywudFwUW/zcJncWa1zDac
vWB25xy/OTvmInNT57bMM563eF7X/JD51QsoCzIXXFlot7Bs4btFCYsaF+st
nr/4yS8hv9QW04vFxbeXeC7ZthRfKljatsxx2cZl30q4JRdL7UrLS78s5yy/
+Kv9rxt+HVyRtqJtpcvKrauIq4SrOlb7rK4uUysrKnuyZsKaurWstSVr362b
vu5CuVP5tvWU9ZL10g0RGxo2mmxctfHLJv6mWxX+FQc2625etvnDFu6W61t9
t+7fpretdNvn7YLtd3aE7KirNKss30ncWbDz2a74Xed+c/utZrfO7tLdX6uE
VdLq6OrWGteamj26e1bWorWS2p69U/Ze2xe4r2G/zf4dB5gHSg+Cg5KDL35P
+b3jUPihlsNuh/cfMT2y+SjjaEkdUldY11fPr5c2JDW0Hxt/rKXRs/HoH7Z/
VDUZNlUc1zy+8gTlxOITgyeLTvY3i5p7T6WfetIyveX+6cTTN1sntbadCT9z
/mzw2dPn/M6dPO91vumCx4VjF90u1l9yuVR32fny0SvOV462ubTVXXW92nDN
/Vpj+7j2E9d9rp+6EXjj7M2wm5duTbzV3hHXcef2lNvSO9w73Xez7r6+V3Bv
4P78B4QHJQ9VH5Y/0n1U+S/Lfx2QukiPdwZ2Xn4c8/j+E86Tl0/znn7pWvyM
9qz8ucHzmm6H7qae4J5rLya/6HopejnQW/yn2p+bX1m8OvKX71+X+xL7ul6L
Xw++Wf5W+23VO6d3Lf1R/Y/eZ78f+FDyUftj9Se3T+c+J3x+PjDjC+nLhq+W
Xxu/hX97MJg9OChii9nyrQAGK5qWBsCbKgBoSXDvcA0ACl1x5pIXRHFOlBP4
J1acy+QF7lyqfAGImw9ABNyjbIXVFDIV3mXb71hfgDo6jtShkpfm6KCIRYUn
F8LHwcG3egCQGgH4Kh4cHNgyOPh1FxR7F4DmXMVZT1ZkZ8jtRjK6YjzvI/ip
/BvdS3KB
      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Magnification[0.5],
  ImageSizeRaw->{596, 590},
  PlotRange->{{0, 596}, {0, 590}}]], "Text",
 CellChangeTimes->{{3.649893455874217*^9, 3.649893458437606*^9}, 
   3.677299034704591*^9, {3.677299131301647*^9, 3.677299176875692*^9}}],

Cell["\<\
\[Alpha] - single-scattering albedo
\[CapitalSigma]t - extinction coefficient
r - radial position coordinate in medium (distance from point source at origin)
u = cos \[Theta] - direction cosine\
\>", "Text",
 CellChangeTimes->{{3.617428487341361*^9, 3.617428516514864*^9}, {
  3.62117873415422*^9, 3.621178738599084*^9}, {3.626744515152608*^9, 
  3.6267445586349487`*^9}, {3.627012891843924*^9, 3.627012912866523*^9}, {
  3.649256344957097*^9, 3.649256385822545*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Util", "Section",
 CellChangeTimes->{{3.6773044570984173`*^9, 3.677304457416751*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SurfaceArea", "[", 
   RowBox[{"d_", ",", "r_"}], "]"}], ":=", 
  RowBox[{"d", " ", 
   FractionBox[
    SuperscriptBox["Pi", 
     RowBox[{"d", "/", "2"}]], 
    RowBox[{"Gamma", "[", 
     RowBox[{
      FractionBox["d", "2"], "+", "1"}], "]"}]], 
   SuperscriptBox["r", 
    RowBox[{"d", "-", "1"}]]}]}]], "Input",
 CellChangeTimes->{{3.591901602020393*^9, 3.591901630497299*^9}, {
  3.591903030474992*^9, 3.591903031879117*^9}, {3.591904344669895*^9, 
  3.59190435369742*^9}}],

Cell[CellGroupData[{

Cell["Diffusion modes", "Subsection",
 CellChangeTimes->{{3.592870941238179*^9, 3.592870943194511*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"diffusionMode", "[", 
   RowBox[{"v_", ",", "d_", ",", "r_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"2", " ", "\[Pi]"}], ")"}], 
    RowBox[{
     RowBox[{"-", "d"}], "/", "2"}]], " ", 
   SuperscriptBox["r", 
    RowBox[{"1", "-", 
     FractionBox["d", "2"]}]], " ", 
   SuperscriptBox["v", 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     FractionBox["d", "2"]}]], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "d"}], ")"}]}], ",", 
     FractionBox["r", "v"]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.650151410432075*^9, 3.650151423715064*^9}, {
  3.650225821867483*^9, 3.650225822845146*^9}, {3.6773044841860228`*^9, 
  3.677304484641555*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analytic solutions", "Section",
 CellChangeTimes->{{3.627013027925056*^9, 3.627013030948131*^9}}],

Cell[CellGroupData[{

Cell["Caseology quantities", "Subsection",
 CellChangeTimes->{{3.6774776567694683`*^9, 3.67747765747231*^9}, {
  3.67747833237188*^9, 3.6774783443299837`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CaseN0", "[", 
   RowBox[{"c_", ",", "v0_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", "2"], " ", "c", " ", 
   SuperscriptBox["v0", "3"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox["c", 
      RowBox[{
       SuperscriptBox["v0", "2"], "-", "1"}]], "-", 
     FractionBox["1", 
      SuperscriptBox["v0", "2"]]}], ")"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Casev0", "[", 
   RowBox[{"c_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"FindRoot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"c", " ", "v", " ", 
         RowBox[{"ArcTanh", "[", 
          FractionBox["1", "v"], "]"}]}], "-", "1"}], "\[Equal]", "0"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"v", ",", "1.00000000001", ",", 
        SuperscriptBox["10", "10"]}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<Brent\>\""}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.677478195414242*^9, {3.677478595620187*^9, 3.677478607699188*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CaseN", "[", 
   RowBox[{"c_", ",", "v_"}], "]"}], ":=", 
  RowBox[{"v", " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Case\[Lambda]", "[", 
       RowBox[{"v", ",", "c"}], "]"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"\[Pi]", " ", "c", " ", "v"}], "2"], ")"}], "2"]}], 
    ")"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Case\[Lambda]", "[", 
   RowBox[{"v_", ",", "c_"}], "]"}], ":=", 
  RowBox[{"1", "-", 
   RowBox[{"c", " ", "v", " ", 
    RowBox[{"ArcTanh", "[", "v", "]"}]}]}]}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fluence: exact solution (1)", "Subsection",
 CellChangeTimes->{{3.627013036155699*^9, 3.627013036987708*^9}, {
  3.62701331063284*^9, 3.6270133130703506`*^9}, {3.649259718336639*^9, 
  3.649259719232292*^9}, {3.650001074975786*^9, 3.650001075075953*^9}}],

Cell["[Bothe 1942]", "Text",
 CellChangeTimes->{{3.677479464182852*^9, 3.677479467677617*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"inf3Disopointisoscatter`\[Phi]exact1a", "[", 
   RowBox[{"r_", ",", "\[CapitalSigma]t_", ",", "\[Alpha]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", 
     SuperscriptBox["Pi", "2"], "r", " "}]], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"z", " ", 
        RowBox[{"ArcTan", "[", 
         RowBox[{"z", "/", "\[CapitalSigma]t"}], "]"}]}], 
       RowBox[{"z", "-", 
        RowBox[{"\[Alpha]", " ", "\[CapitalSigma]t", "  ", 
         RowBox[{"ArcTan", "[", 
          RowBox[{"z", "/", "\[CapitalSigma]t"}], "]"}]}]}]], 
      RowBox[{"Sin", "[", 
       RowBox[{"r", " ", "z"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "0", ",", "Infinity"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<ExtrapolatingOscillatory\>\""}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.677300049216547*^9, 3.6773001151743107`*^9}, 
   3.677300298794498*^9, {3.677302570744866*^9, 3.677302611080757*^9}, {
   3.677302641240967*^9, 3.677302712525681*^9}, {3.677304404791483*^9, 
   3.677304407235536*^9}}],

Cell["[Case et al. 1953]", "Text",
 CellChangeTimes->{{3.677479471093007*^9, 3.677479479109392*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"inf3Disopointisoscatter`\[Phi]exact1b", "[", 
   RowBox[{"r_", ",", "\[CapitalSigma]t_", ",", "\[Alpha]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "\[CapitalSigma]t"}], " ", "r"}], "]"}], 
    RowBox[{"4", " ", "Pi", " ", 
     SuperscriptBox["r", "2"]}]], "+", 
   RowBox[{"\[Alpha]", 
    FractionBox["\[CapitalSigma]t", 
     RowBox[{"2", 
      SuperscriptBox["Pi", "2"], "r", " "}]], 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       FractionBox[
        SuperscriptBox[
         RowBox[{"ArcTan", "[", "z", "]"}], "2"], 
        RowBox[{"z", "-", 
         RowBox[{"\[Alpha]", " ", 
          RowBox[{"ArcTan", "[", "z", "]"}]}]}]], 
       RowBox[{"Sin", "[", 
        RowBox[{"r", " ", "\[CapitalSigma]t", " ", "z"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", "0", ",", "Infinity"}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<LevinRule\>\""}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.627013295305633*^9, 3.6270133031837482`*^9}, {
   3.6492066123681793`*^9, 3.649206619804143*^9}, {3.649206663304042*^9, 
   3.649206666622551*^9}, {3.649259737788108*^9, 3.6492597406095657`*^9}, 
   3.649260383663227*^9, {3.649260911843635*^9, 3.649260916691996*^9}, 
   3.6492727254667597`*^9, {3.649894526690342*^9, 3.649894527064891*^9}, {
   3.6498945705984707`*^9, 3.649894570917386*^9}, {3.65000334336698*^9, 
   3.650003344318315*^9}, {3.6772992829301*^9, 3.677299297359007*^9}, {
   3.677300041450181*^9, 3.677300042793378*^9}, {3.677300139690699*^9, 
   3.677300174293172*^9}, 3.677300527140193*^9, {3.677304384094844*^9, 
   3.677304394068664*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rigorous diffusion approximation", "Subsection",
 CellChangeTimes->{{3.65000762860603*^9, 3.650007632916854*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"inf3Disopointisoscatter`\[Phi]rigourousDiffusion", "[", 
   RowBox[{"r_", ",", "\[CapitalSigma]t_", ",", "\[Alpha]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["\[CapitalSigma]t", 
      RowBox[{"4", " ", "Pi", " ", "r"}]], 
     FractionBox[
      SuperscriptBox["E", 
       RowBox[{
        RowBox[{"-", "r"}], " ", 
        RowBox[{"\[CapitalSigma]t", "/", "#"}]}]], 
      RowBox[{"#", " ", 
       RowBox[{"CaseN0", "[", 
        RowBox[{"\[Alpha]", ",", "#"}], "]"}]}]]}], "&"}], "[", 
   RowBox[{"Casev0", "[", "\[Alpha]", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.677477704440878*^9, 3.677477713137025*^9}, {
  3.677477886676087*^9, 3.677477912994403*^9}, {3.677477948321556*^9, 
  3.6774780118993483`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"inf3Disopointisoscatter`\[Phi]transient", "[", 
   RowBox[{"r_", ",", "\[CapitalSigma]t_", ",", "\[Alpha]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["\[CapitalSigma]t", 
    RowBox[{"4", " ", "Pi", " ", "r"}]], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     FractionBox[
      RowBox[{" ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[CapitalSigma]t"}], " ", 
         RowBox[{"r", " ", "/", "v"}]}]], " "}], 
      RowBox[{"v", " ", 
       RowBox[{"CaseN", "[", 
        RowBox[{"\[Alpha]", ",", "v"}], "]"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", "0", ",", "1"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.68044027146154*^9, 3.680440284648827*^9}}],

Cell["Expansion of [Case et al. 1953]", "Text",
 CellChangeTimes->{{3.680440388119649*^9, 3.680440398461493*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"inf3Disopointisoscatter`\[Phi]transient2", "[", 
   RowBox[{"r_", ",", "\[CapitalSigma]t_", ",", "\[Alpha]_", ",", "M_"}], 
   "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "r"}], " ", "\[CapitalSigma]t"}], "]"}], 
    RowBox[{"4", " ", "Pi", " ", 
     SuperscriptBox["r", "2"]}]], "+", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", "Pi", " ", "r"}]], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ExpIntegralE", "[", 
        RowBox[{
         RowBox[{"2", "n"}], ",", 
         RowBox[{"r", " ", "\[CapitalSigma]t"}]}], "]"}], 
       RowBox[{"SeriesCoefficient", "[", 
        RowBox[{
         RowBox[{"v", "/", 
          RowBox[{"CaseN", "[", 
           RowBox[{"\[Alpha]", ",", "v"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"v", ",", "0", ",", 
           RowBox[{"2", "n"}]}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "M"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.680440294902493*^9, 3.6804403705553923`*^9}, {
  3.68044042196033*^9, 3.680440422158667*^9}, {3.680440554130878*^9, 
  3.680440555508253*^9}, {3.68044062300987*^9, 3.6804406289114723`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fluence: exact solution (2)", "Subsection",
 CellChangeTimes->{{3.627013036155699*^9, 3.627013036987708*^9}, {
  3.62701331063284*^9, 3.6270133130703506`*^9}, {3.649259718336639*^9, 
  3.649259719232292*^9}, {3.650001074975786*^9, 3.650001075075953*^9}, {
  3.677477406569441*^9, 3.677477406698016*^9}}],

Cell["[Davison 1947]", "Text",
 CellChangeTimes->{{3.677479385593816*^9, 3.67747938770417*^9}, {
  3.6774794380009823`*^9, 3.677479439606023*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"inf3Disopointisoscatter`\[Phi]exact2a", "[", 
   RowBox[{"r_", ",", "\[CapitalSigma]t_", ",", "\[Alpha]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"inf3Disopointisoscatter`\[Phi]rigourousDiffusion", "[", 
    RowBox[{"r", ",", "\[CapitalSigma]t", ",", "\[Alpha]"}], "]"}], "+", 
   RowBox[{
    FractionBox["\[CapitalSigma]t", 
     RowBox[{"4", " ", "Pi", " ", "r"}]], 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      FractionBox[
       RowBox[{" ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[CapitalSigma]t"}], " ", "r", " ", "y"}]], " "}], 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Alpha]", "2"], " ", 
          SuperscriptBox["\[Pi]", "2"]}], 
         RowBox[{"4", " ", 
          SuperscriptBox["y", "2"]}]], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            FractionBox["\[Alpha]", 
             RowBox[{"2", "y"}]], 
            RowBox[{"Log", "[", 
             FractionBox[
              RowBox[{"y", "+", "1"}], 
              RowBox[{"y", "-", "1"}]], "]"}]}]}], ")"}], "2"]}]], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "1", ",", "Infinity"}], "}"}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.677300049216547*^9, 3.6773001151743107`*^9}, 
   3.677300298794498*^9, {3.677302570744866*^9, 3.677302611080757*^9}, {
   3.677302641240967*^9, 3.677302712525681*^9}, {3.677304404791483*^9, 
   3.677304407235536*^9}, {3.677477408682317*^9, 3.6774774088176527`*^9}, {
   3.677478711904009*^9, 3.6774787251477623`*^9}, {3.6774787759773912`*^9, 
   3.677478864827182*^9}, 3.677478954933093*^9, 3.677479223525879*^9}],

Cell["[Case and Zwiefel 1967]", "Text",
 CellChangeTimes->{{3.677479393503934*^9, 3.677479404615892*^9}, {
  3.677479441214168*^9, 3.677479442254464*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"inf3Disopointisoscatter`\[Phi]exact2b", "[", 
   RowBox[{"r_", ",", "\[CapitalSigma]t_", ",", "\[Alpha]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"inf3Disopointisoscatter`\[Phi]rigourousDiffusion", "[", 
    RowBox[{"r", ",", "\[CapitalSigma]t", ",", "\[Alpha]"}], "]"}], "+", 
   RowBox[{
    FractionBox["\[CapitalSigma]t", 
     RowBox[{"4", " ", "Pi", " ", "r"}]], 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      FractionBox[
       RowBox[{" ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[CapitalSigma]t"}], " ", 
          RowBox[{"r", " ", "/", "v"}]}]], " "}], 
       RowBox[{"v", " ", 
        RowBox[{"CaseN", "[", 
         RowBox[{"\[Alpha]", ",", "v"}], "]"}]}]], ",", 
      RowBox[{"{", 
       RowBox[{"v", ",", "0", ",", "1"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.627013295305633*^9, 3.6270133031837482`*^9}, {
   3.6492066123681793`*^9, 3.649206619804143*^9}, {3.649206663304042*^9, 
   3.649206666622551*^9}, {3.649259737788108*^9, 3.6492597406095657`*^9}, 
   3.649260383663227*^9, {3.649260911843635*^9, 3.649260916691996*^9}, 
   3.6492727254667597`*^9, {3.649894526690342*^9, 3.649894527064891*^9}, {
   3.6498945705984707`*^9, 3.649894570917386*^9}, {3.65000334336698*^9, 
   3.650003344318315*^9}, {3.6772992829301*^9, 3.677299297359007*^9}, {
   3.677300041450181*^9, 3.677300042793378*^9}, {3.677300139690699*^9, 
   3.677300174293172*^9}, 3.677300527140193*^9, {3.677304384094844*^9, 
   3.677304394068664*^9}, {3.6774774106737947`*^9, 3.6774774108417187`*^9}, 
   3.6774791716413107`*^9, {3.677479211910182*^9, 3.677479227611339*^9}, {
   3.677479292199152*^9, 3.67747932825189*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["n-th scattered fluence", "Subsection",
 CellChangeTimes->{{3.650001121889347*^9, 3.650001125936187*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"inf3Disopointisoscatter`\[Phi]exact1", "[", 
   RowBox[{"r_", ",", "\[CapitalSigma]t_", ",", "\[Alpha]_", ",", "n_"}], 
   "]"}], ":=", 
  RowBox[{
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"\[Alpha]", " ", "\[CapitalSigma]t"}], ")"}], "n"], 
    RowBox[{"2", " ", 
     SuperscriptBox["\[Pi]", "2"], " ", "r"}]], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     FractionBox[
      RowBox[{" ", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"ArcTan", "[", 
          FractionBox["z", "\[CapitalSigma]t"], "]"}], 
         RowBox[{"1", "+", "n"}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"r", " ", "z"}], "]"}]}]}], 
      SuperscriptBox["z", "n"]], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "0", ",", "Infinity"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<ExtrapolatingOscillatory\>\""}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6776129011956997`*^9, 3.6776129754167633`*^9}, 
   3.6776130684065313`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"inf3Disopointisoscatter`\[Phi]exact2", "[", 
   RowBox[{"r_", ",", "\[CapitalSigma]t_", ",", "\[Alpha]_", ",", "n_"}], 
   "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Alpha]", "n"], "\[CapitalSigma]t"}], 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"n", "+", "3"}]], 
     SuperscriptBox["Pi", "2"], " ", "I", " ", "r", " "}]], 
   RowBox[{"Chop", "[", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "r"}], " ", "z", " ", "\[CapitalSigma]t"}], "]"}], 
        SuperscriptBox["z", "n"]], 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Log", "[", 
             FractionBox[
              RowBox[{"z", "+", "1"}], 
              RowBox[{"z", "-", "1"}]], "]"}], "+", 
            RowBox[{"I", " ", "Pi"}]}], ")"}], 
          RowBox[{"n", "+", "1"}]], "-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Log", "[", 
             FractionBox[
              RowBox[{"z", "+", "1"}], 
              RowBox[{"z", "-", "1"}]], "]"}], "-", 
            RowBox[{"I", " ", "Pi"}]}], ")"}], 
          RowBox[{"n", "+", "1"}]]}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", "1", ",", "Infinity"}], "}"}]}], "]"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.67761298341652*^9, 3.677612983536436*^9}, 
   3.677613048343768*^9, {3.67761313352509*^9, 3.677613151859355*^9}, {
   3.6776136508030777`*^9, 3.677613653547803*^9}, {3.6776140856531963`*^9, 
   3.677614103403124*^9}, {3.677614141122466*^9, 3.677614174418359*^9}, {
   3.677614257158194*^9, 3.677614260184005*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"inf3Disopointisoscatter`\[Phi]Gaussian", "[", 
   RowBox[{"r_", ",", "\[CapitalSigma]t_", ",", "\[Alpha]_", ",", "n_"}], 
   "]"}], ":=", 
  FractionBox[
   RowBox[{"3", " ", 
    SqrtBox["3"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox["\[CapitalSigma]t", "2"]}], 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "n"}], ")"}]}]]}]], " ", 
    SuperscriptBox["\[Alpha]", "n"], " ", 
    SuperscriptBox["\[CapitalSigma]t", "2"]}], 
   RowBox[{"8", " ", 
    SqrtBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "n"}], ")"}], "3"]], " ", 
    SuperscriptBox["\[Pi]", 
     RowBox[{"3", "/", "2"}]]}]]}]], "Input",
 CellChangeTimes->{{3.677729093141039*^9, 3.6777290983620358`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Moments", "Subsection",
 CellChangeTimes->{{3.650041931458153*^9, 3.650041934948592*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"inf3Disopointisoscatter`\[Phi]m", "[", 
   RowBox[{"c_", ",", "\[CapitalSigma]t_", ",", 
    RowBox[{"m_", "?", "IntegerQ"}], ",", "n_"}], "]"}], ":=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"m", "/", "2"}]], 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"Gamma", "[", 
           FractionBox[
            RowBox[{"3", "+", "m"}], "2"], "]"}]}], 
         RowBox[{"Gamma", "[", 
          FractionBox[
           RowBox[{"1", "+", "m"}], "2"], "]"}]], 
        RowBox[{"D", "[", 
         RowBox[{
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"c", " ", "\[CapitalSigma]t", " ", 
               RowBox[{"ArcTan", "[", 
                FractionBox["z", "\[CapitalSigma]t"], "]"}]}], "z"], ")"}], 
            RowBox[{"1", "+", "n"}]], 
           RowBox[{"c", " ", "\[CapitalSigma]t"}]], ",", 
          RowBox[{"{", 
           RowBox[{"z", ",", "m"}], "}"}]}], "]"}]}], ")"}]}], "]"}], ",", 
    RowBox[{"z", "\[Rule]", "0"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.67762122348155*^9, 3.677621267731299*^9}, {
  3.677630330971744*^9, 3.677630333876709*^9}, {3.6776367366338873`*^9, 
  3.677636737735456*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"inf3Disopointisoscatter`\[Phi]m", "[", 
     RowBox[{"\[Alpha]", ",", "\[CapitalSigma]t", ",", "m", ",", "n"}], "]"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "0", ",", "6", ",", "2"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.677630471629753*^9, 3.677630471788845*^9}, {
  3.677636739816572*^9, 3.67763674468996*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      FractionBox[
       SuperscriptBox["\[Alpha]", "n"], "\[CapitalSigma]t"]},
     {
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "n"}], ")"}], " ", 
        SuperscriptBox["\[Alpha]", "n"]}], 
       SuperscriptBox["\[CapitalSigma]t", "3"]]},
     {
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "n"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"18", "+", 
          RowBox[{"5", " ", "n"}]}], ")"}], " ", 
        SuperscriptBox["\[Alpha]", "n"]}], 
       RowBox[{"3", " ", 
        SuperscriptBox["\[CapitalSigma]t", "5"]}]]},
     {
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "n"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"810", "+", 
          RowBox[{"343", " ", "n"}], "+", 
          RowBox[{"35", " ", 
           SuperscriptBox["n", "2"]}]}], ")"}], " ", 
        SuperscriptBox["\[Alpha]", "n"]}], 
       RowBox[{"9", " ", 
        SuperscriptBox["\[CapitalSigma]t", "7"]}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6776304918147593`*^9, 3.67763519276388*^9, 
  3.677636755702607*^9, 3.680432238982924*^9, 3.680432371948893*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"inf3Disopointisoscatter`\[Phi]m", "[", 
   RowBox[{"c_", ",", "\[CapitalSigma]t_", ",", 
    RowBox[{"m_", "?", "IntegerQ"}]}], "]"}], ":=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"m", "/", "2"}]], 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"Gamma", "[", 
           FractionBox[
            RowBox[{"3", "+", "m"}], "2"], "]"}]}], 
         RowBox[{"Gamma", "[", 
          FractionBox[
           RowBox[{"1", "+", "m"}], "2"], "]"}]], 
        RowBox[{"D", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"ArcTan", "[", 
            FractionBox["z", "\[CapitalSigma]t"], "]"}], 
           RowBox[{"z", "-", 
            RowBox[{"c", " ", "\[CapitalSigma]t", " ", 
             RowBox[{"ArcTan", "[", 
              FractionBox["z", "\[CapitalSigma]t"], "]"}]}]}]], ",", 
          RowBox[{"{", 
           RowBox[{"z", ",", "m"}], "}"}]}], "]"}]}], ")"}]}], "]"}], ",", 
    RowBox[{"z", "\[Rule]", "0"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6776213408851957`*^9, 3.6776213631944113`*^9}, 
   3.67763038224133*^9, 3.6776367470813437`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"inf3Disopointisoscatter`\[Phi]m", "[", 
     RowBox[{"\[Alpha]", ",", "\[CapitalSigma]t", ",", "m"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "0", ",", "6", ",", "2"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.67763042183934*^9, 3.677630453167801*^9}, {
  3.677636748608265*^9, 3.677636751121291*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      FractionBox["1", 
       RowBox[{"\[CapitalSigma]t", "-", 
        RowBox[{"\[Alpha]", " ", "\[CapitalSigma]t"}]}]]},
     {
      FractionBox["2", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], "2"], " ", 
        SuperscriptBox["\[CapitalSigma]t", "3"]}]]},
     {
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "9"}], "+", 
          RowBox[{"4", " ", "\[Alpha]"}]}], ")"}]}], 
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], "3"], " ", 
        SuperscriptBox["\[CapitalSigma]t", "5"]}]]},
     {
      FractionBox[
       RowBox[{"16", " ", 
        RowBox[{"(", 
         RowBox[{"135", "-", 
          RowBox[{"144", " ", "\[Alpha]"}], "+", 
          RowBox[{"44", " ", 
           SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}], 
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], "4"], " ", 
        SuperscriptBox["\[CapitalSigma]t", "7"]}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.677630443243147*^9, 3.6776304540354443`*^9}, 
   3.677635193331471*^9, 3.677636756218019*^9, 3.680432239499358*^9, 
   3.680432372430689*^9}]
}, Open  ]],

Cell["Recurrence derivation [Case et al. 1953]", "Text",
 CellChangeTimes->{{3.68043140446565*^9, 3.68043141129609*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"inf3Disopointisoscatter`CaseB", "[", 
    RowBox[{"0", ",", "c_"}], "]"}], ":=", 
   FractionBox["1", 
    RowBox[{"1", "-", "c"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"inf3Disopointisoscatter`CaseB", "[", 
    RowBox[{"m_", ",", "c_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "c"}], ")"}], "2"]], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"inf3Disopointisoscatter`Caseb", "[", 
        RowBox[{"m", ",", "s"}], "]"}], 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["c", 
          RowBox[{"1", "-", "c"}]], ")"}], 
        RowBox[{"s", "-", "1"}]]}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "1", ",", "m"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"inf3Disopointisoscatter`Caseb", "[", 
    RowBox[{"m_", ",", "1"}], "]"}], ":=", 
   FractionBox["1", 
    RowBox[{
     RowBox[{"2", "m"}], "+", "1"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inf3Disopointisoscatter`Caseb", "[", 
   RowBox[{"m_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"inf3Disopointisoscatter`Caseb", "[", 
      RowBox[{"n", ",", 
       RowBox[{"s", "-", "1"}]}], "]"}], 
     RowBox[{"1", "+", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"m", "-", "n"}], ")"}]}]}]], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"s", "-", "1"}], ",", 
      RowBox[{"m", "-", "1"}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.680431419522421*^9, 3.6804315645124063`*^9}, {
  3.6804316163598833`*^9, 3.680431678578123*^9}, {3.680431709416974*^9, 
  3.680431717320619*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"inf3Disopointisoscatter`\[Phi]mCase", "[", 
   RowBox[{"c_", ",", "\[CapitalSigma]t_", ",", 
    RowBox[{"m_", "?", "IntegerQ"}]}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox["\[CapitalSigma]t", 
     RowBox[{"m", "+", "1"}]]], 
   RowBox[{"inf3Disopointisoscatter`CaseB", "[", 
    RowBox[{
     RowBox[{"m", "/", "2"}], ",", "\[Alpha]"}], "]"}], 
   RowBox[{"Factorial", "[", 
    RowBox[{"m", "+", "1"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.680432060778133*^9, 3.680432068980877*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"inf3Disopointisoscatter`\[Phi]mCase", "[", 
      RowBox[{"\[Alpha]", ",", "\[CapitalSigma]t", ",", "m"}], "]"}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "0", ",", "6", ",", "2"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.680431786636992*^9, 3.680431849921385*^9}, {
  3.680431891537088*^9, 3.6804319406425257`*^9}, {3.6804319998822727`*^9, 
  3.680432090102117*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      FractionBox["1", 
       RowBox[{"\[CapitalSigma]t", "-", 
        RowBox[{"\[Alpha]", " ", "\[CapitalSigma]t"}]}]]},
     {
      FractionBox["2", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], "2"], " ", 
        SuperscriptBox["\[CapitalSigma]t", "3"]}]]},
     {
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "9"}], "+", 
          RowBox[{"4", " ", "\[Alpha]"}]}], ")"}]}], 
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], "3"], " ", 
        SuperscriptBox["\[CapitalSigma]t", "5"]}]]},
     {
      FractionBox[
       RowBox[{"16", " ", 
        RowBox[{"(", 
         RowBox[{"135", "+", 
          RowBox[{"4", " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "36"}], "+", 
             RowBox[{"11", " ", "\[Alpha]"}]}], ")"}]}]}], ")"}]}], 
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Alpha]"}], ")"}], "4"], " ", 
        SuperscriptBox["\[CapitalSigma]t", "7"]}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.680431904361103*^9, 3.680431941548747*^9}, {
   3.680432011911416*^9, 3.680432032348176*^9}, 3.680432090510467*^9, 
   3.680432239570804*^9, 3.680432372525731*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classical diffusion approximation", "Subsection",
 CellChangeTimes->{{3.650007125291225*^9, 3.650007128481996*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"inf3Disopointisoscatter`\[Phi]Diffusion", "[", 
   RowBox[{"r_", ",", "\[CapitalSigma]t_", ",", "\[Alpha]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"\[CapitalSigma]t", 
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Alpha]"}], ")"}]}]], 
   RowBox[{"diffusionMode", "[", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SqrtBox[
        RowBox[{"3", 
         RowBox[{"(", 
          RowBox[{"1", "-", " ", "\[Alpha]"}], ")"}]}]], " ", 
       "\[CapitalSigma]t"}]], ",", "3", ",", "r"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.650007131391655*^9, 3.650007161699568*^9}, 
   3.677301076441053*^9, {3.67730447492808*^9, 3.6773044874084167`*^9}, {
   3.677304730388728*^9, 3.6773047465759773`*^9}, {3.677304960802308*^9, 
   3.677304972008175*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"inf3Disopointisoscatter`\[Phi]Diffusion", "[", 
    RowBox[{"r", ",", "\[CapitalSigma]t", ",", "\[Alpha]"}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"\[Alpha]", ">", "0"}], "&&", 
     RowBox[{"\[Alpha]", "<", "1"}], "&&", 
     RowBox[{"\[CapitalSigma]t", ">", "0"}]}]}]}], "]"}]], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "r"}], " ", 
     SqrtBox[
      RowBox[{"3", "-", 
       RowBox[{"3", " ", "\[Alpha]"}]}]], " ", "\[CapitalSigma]t"}]], " ", 
   "\[CapitalSigma]t"}], 
  RowBox[{"4", " ", "\[Pi]", " ", "r"}]]], "Output",
 CellChangeTimes->{3.677305269787928*^9, 3.677635193463986*^9, 
  3.680432239702317*^9, 3.6804323726443567`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Grosjean-style diffusion approximation", "Subsection",
 CellChangeTimes->{{3.591233786294387*^9, 3.591233792108313*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"inf3Disopointisoscatter`\[Phi]Grosjean", "[", 
   RowBox[{"r_", ",", "\[CapitalSigma]t_", ",", "\[Alpha]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "r"}], " ", "\[CapitalSigma]t"}], "]"}], 
    RowBox[{"4", " ", "Pi", " ", 
     SuperscriptBox["r", "2"]}]], "+", 
   RowBox[{
    FractionBox["\[Alpha]", 
     RowBox[{"\[CapitalSigma]t", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Alpha]"}], ")"}]}]], 
    RowBox[{"diffusionMode", "[", 
     RowBox[{
      FractionBox[
       SqrtBox[
        RowBox[{"2", "-", "\[Alpha]"}]], 
       RowBox[{
        SqrtBox[
         RowBox[{"3", 
          RowBox[{"(", 
           RowBox[{"1", "-", " ", "\[Alpha]"}], ")"}]}]], " ", 
        "\[CapitalSigma]t"}]], ",", "3", ",", "r"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.649273093435965*^9, 3.649273097566102*^9}, {
   3.649273132652021*^9, 3.649273148106318*^9}, {3.649273191337154*^9, 
   3.649273193622284*^9}, {3.649273264439513*^9, 3.6492732764494343`*^9}, {
   3.6498982387618933`*^9, 3.64989824952006*^9}, {3.650001178382126*^9, 
   3.650001181010624*^9}, 3.650003309109735*^9, 3.6773010801583548`*^9, {
   3.677305187911016*^9, 3.6773052098809233`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"inf3Disopointisoscatter`\[Phi]Grosjean", "[", 
    RowBox[{"r", ",", "\[CapitalSigma]t", ",", "\[Alpha]"}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"\[Alpha]", ">", "0"}], "&&", 
     RowBox[{"\[Alpha]", "<", "1"}], "&&", 
     RowBox[{"\[CapitalSigma]t", ">", "0"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.677305213718206*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "r"}], " ", "\[CapitalSigma]t"}]], "-", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "r"}], " ", 
       SqrtBox[
        RowBox[{"3", "+", 
         FractionBox["3", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Alpha]"}]]}]], " ", 
       "\[CapitalSigma]t"}]], " ", "r", " ", "\[Alpha]", " ", 
     "\[CapitalSigma]t"}], 
    RowBox[{
     RowBox[{"-", "2"}], "+", "\[Alpha]"}]]}], 
  RowBox[{"4", " ", "\[Pi]", " ", 
   SuperscriptBox["r", "2"]}]]], "Output",
 CellChangeTimes->{3.677305214742157*^9, 3.677635194467601*^9, 
  3.680432240512768*^9, 3.680432373454916*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Angular \[Phi] Integral", "Subsection",
 CellChangeTimes->{{3.6500670277374*^9, 3.650067032864195*^9}, {
  3.67770024549684*^9, 3.677700248463456*^9}}],

Cell[TextData[{
 "Note: this form leaves out the singular term ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     SuperscriptBox["e", 
      RowBox[{
       RowBox[{"-", "r"}], " ", 
       SubscriptBox["\[CapitalSigma]", "t"]}]], 
     RowBox[{"4", " ", "\[Pi]", " ", 
      SuperscriptBox["r", "2"]}]], 
    RowBox[{"\[Delta]", "(", 
     RowBox[{"u", "-", "1"}], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", because it doesn\[CloseCurlyQuote]t plot:"
}], "Text",
 CellChangeTimes->{{3.6776983729854*^9, 3.677698437657201*^9}, {
  3.677700294836124*^9, 3.6777002982476463`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"inf3Disopointisoscatter`Lintegral", "[", 
   RowBox[{
   "r_", ",", "u_", ",", "\[CapitalSigma]t_", ",", "\[Alpha]_", ",", 
    "\[Phi]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"\[Alpha]", " ", "\[CapitalSigma]t"}], 
    RowBox[{"4", " ", "Pi"}]], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Phi]", "[", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["r", "2"], "+", 
          SuperscriptBox["t", "2"], "-", 
          RowBox[{"2", " ", "r", " ", "t", " ", "u"}]}]], ",", 
        "\[CapitalSigma]t", ",", "\[Alpha]"}], "]"}], 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[CapitalSigma]t"}], " ", "t"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.650067054341926*^9, 3.650067135264304*^9}, {
  3.6773063115755997`*^9, 3.6773063337969513`*^9}, {3.677651595324746*^9, 
  3.677651601858286*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Angular Classical diffusion approximation", "Subsection",
 CellChangeTimes->{{3.650059971010975*^9, 3.6500599814646597`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"inf3Disopointisoscatter`Ldiffusion", "[", 
   RowBox[{"r_", ",", "u_", ",", "\[CapitalSigma]t_", ",", "\[Alpha]_"}], 
   "]"}], ":=", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", "Pi", " "}]], 
    RowBox[{"inf3Disopointisoscatter`\[Phi]Diffusion", "[", 
     RowBox[{"r", ",", "\[CapitalSigma]t", ",", "\[Alpha]"}], "]"}]}], "+", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", "Pi", " "}]], "u", 
    FractionBox[
     RowBox[{"3", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "r"}], " ", 
        SqrtBox[
         RowBox[{"3", "-", 
          RowBox[{"3", " ", "\[Alpha]"}]}]], " ", "\[CapitalSigma]t"}]], "  ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"r", " ", 
         SqrtBox[
          RowBox[{"3", "-", 
           RowBox[{"3", " ", "\[Alpha]"}]}]], " ", "\[CapitalSigma]t"}]}], 
       ")"}]}], 
     RowBox[{"4", " ", "\[Pi]", " ", 
      SuperscriptBox["r", "2"]}]]}]}]}]], "Input",
 CellChangeTimes->{{3.6500599838903627`*^9, 3.650060014072959*^9}, {
   3.650060052956566*^9, 3.6500600912978354`*^9}, {3.650060130535036*^9, 
   3.650060138992127*^9}, {3.650060218218782*^9, 3.650060221467053*^9}, {
   3.650066714459609*^9, 3.650066715121737*^9}, 3.650093116722826*^9, {
   3.677649890150055*^9, 3.677649925726012*^9}, {3.677650445852536*^9, 
   3.6776504466174383`*^9}, {3.677650631130006*^9, 3.677650641239551*^9}, {
   3.6776507815796947`*^9, 3.677650786427126*^9}, {3.677650825930702*^9, 
   3.6776508284495087`*^9}, {3.6776509003936157`*^9, 3.6776509409845667`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["load MC data", "Section",
 CellChangeTimes->{{3.617427964847665*^9, 3.617427965662361*^9}, {
  3.6174280073412037`*^9, 3.617428007556081*^9}, {3.640936210100869*^9, 
  3.640936211771452*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"inf3Disopointisoscatter`ppoints", "[", 
   RowBox[{"xs_", ",", "dr_", ",", "maxx_", ",", "\[CapitalSigma]t_"}], "]"}],
   ":=", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"dr", 
         RowBox[{"(", "i", ")"}]}], "-", 
        RowBox[{"0.5", "dr"}]}], ",", 
       RowBox[{
        RowBox[{"xs", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "/", "\[CapitalSigma]t"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "xs", "]"}]}], "}"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", 
     RowBox[{"-", "2"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.649259548120679*^9, 3.649259580851676*^9}, 
   3.649259648546113*^9, 3.649272737713811*^9, {3.649872151012321*^9, 
   3.649872155817502*^9}, {3.649872287579906*^9, 3.649872295382456*^9}, {
   3.649873946236698*^9, 3.649873946606134*^9}, {3.67763497212794*^9, 
   3.677634993533287*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"inf3Disopointisoscatter`ppointsu", "[", 
   RowBox[{"xs_", ",", "du_", ",", "\[CapitalSigma]t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1.0"}], " ", "+", 
        RowBox[{"du", 
         RowBox[{"(", "i", ")"}]}], "-", 
        RowBox[{"0.5", "du"}]}], ",", 
       RowBox[{
        RowBox[{"xs", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "\[CapitalSigma]t"}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "xs", "]"}]}], "}"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", 
     RowBox[{"-", "1"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.65005053586198*^9, 3.650050559346901*^9}, {
   3.650052337069436*^9, 3.650052338883011*^9}, {3.650054000091523*^9, 
   3.6500540027961807`*^9}, {3.6500610330520782`*^9, 3.650061039645021*^9}, {
   3.650061175369117*^9, 3.6500611770751762`*^9}, 3.6776349935423813`*^9, 
   3.67769687034093*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"inf3Disopointisoscatter`fs", "=", 
   RowBox[{
   "FileNames", "[", 
    "\"\<code/3D_medium/infinite3Dmedium/Isotropicpointsource/data/inf3D_\
isotropicpoint_isotropicscatter*\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.649258997497517*^9, 3.649259056909771*^9}, {
  3.677634993548717*^9, 3.677635035914689*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"inf3Disopointisoscatter`index", "[", "x_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", ",", "\[Alpha]", ",", "\[CapitalSigma]t"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"data", "=", 
       RowBox[{"Import", "[", 
        RowBox[{"x", ",", "\"\<Table\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalSigma]t", "=", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "13"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Alpha]", "=", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "3"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", "\[CapitalSigma]t", ",", "data"}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inf3Disopointisoscatter`simulations", "=", 
   RowBox[{
   "inf3Disopointisoscatter`index", "/@", "inf3Disopointisoscatter`fs"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"inf3Disopointisoscatter`alphas", "=", 
  RowBox[{"Union", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", 
    "inf3Disopointisoscatter`simulations"}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.6492592625325613`*^9, {3.6492592978251047`*^9, 3.649259344735507*^9}, {
   3.677634993555244*^9, 3.677634993574909*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.01`", ",", "0.1`", ",", "0.3`", ",", "0.5`", ",", "0.7`", ",", "0.8`", 
   ",", "0.9`", ",", "0.95`", ",", "0.99`", ",", "0.999`"}], "}"}]], "Output",\

 CellChangeTimes->{{3.6492593340730467`*^9, 3.649259345386384*^9}, 
   3.6492728336816893`*^9, 3.649273048786715*^9, 3.649872047826997*^9, 
   3.649893114157404*^9, 3.6500036915248747`*^9, 3.6500519274937677`*^9, 
   3.650052046258376*^9, 3.6500539651569767`*^9, 3.65204425181022*^9, 
   3.652044585898918*^9, {3.6776350179173107`*^9, 3.677635047794334*^9}, 
   3.677635195107129*^9, 3.680432240925345*^9, 3.680432437621624*^9, 
   3.680433012505762*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inf3Disopointisoscatter`muts", "=", 
  RowBox[{"Union", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
    "inf3Disopointisoscatter`simulations"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.649259354702409*^9, 3.649259356389621*^9}, {
  3.677634993581637*^9, 3.6776349935856857`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6492593567324333`*^9, 3.64927283372799*^9, 3.649273048831053*^9, 
   3.6498720478446417`*^9, 3.649893114193157*^9, 3.650003691549798*^9, 
   3.650051927519335*^9, 3.650052046426083*^9, 3.650053965178225*^9, 
   3.65204425196731*^9, 3.652044585906145*^9, {3.6776350179720163`*^9, 
   3.677635047819257*^9}, 3.677635195136368*^9, 3.680432241043687*^9, 
   3.680433012525682*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inf3Disopointisoscatter`numcollorders", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"inf3Disopointisoscatter`simulations", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "13"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inf3Disopointisoscatter`maxr", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"inf3Disopointisoscatter`simulations", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "5"}], "]"}], "]"}]}], ";", 
  RowBox[{"inf3Disopointisoscatter`dr", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"inf3Disopointisoscatter`simulations", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "7"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inf3Disopointisoscatter`numr", "=", 
   RowBox[{"Floor", "[", 
    RowBox[{
    "inf3Disopointisoscatter`maxr", "/", "inf3Disopointisoscatter`dr"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.649259364357733*^9, 3.649259369850224*^9}, {
  3.649259425898975*^9, 3.6492594278860903`*^9}, {3.65003919983913*^9, 
  3.650039207159321*^9}, {3.65005218250033*^9, 3.650052203385788*^9}, {
  3.650052251813343*^9, 3.65005228487663*^9}, {3.652044391350597*^9, 
  3.652044399500836*^9}, {3.677634993592737*^9, 3.677634993627224*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compare Deterministic and MC", "Section",
 CellChangeTimes->{{3.617428104753593*^9, 3.6174281129212646`*^9}, 
   3.650052258917198*^9}],

Cell[CellGroupData[{

Cell["Fluence - Exact solution (1a) comparison to MC", "Subsection",
 CellChangeTimes->{{3.649259702897419*^9, 3.64925971462465*^9}, {
  3.649893943340941*^9, 3.649893948401101*^9}, {3.650003121496348*^9, 
  3.650003125748569*^9}, {3.67763541090819*^9, 3.67763541224439*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"alpha", ",", "\[CapitalSigma]t"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "inf3Disopointisoscatter`simulations", "]"}], 
      ">", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "data", ",", "maxr", ",", "dr", ",", "points\[Phi]", ",", 
         "plotpoints\[Phi]", ",", "logplot\[Phi]", ",", "plot\[Phi]", ",", 
         "exact1points"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{
          RowBox[{"SelectFirst", "[", 
           RowBox[{"inf3Disopointisoscatter`simulations", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\[Alpha]"}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
               "\[CapitalSigma]t"}]}], "&"}]}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"maxr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "5"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "7"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"points\[Phi]", " ", "=", " ", 
         RowBox[{"data", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "divide", " ", "by", " ", "\[CapitalSigma]t", " ", "to", " ", 
          "convert", " ", "collision", " ", "density", " ", "into", " ", 
          "fluence"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"plotpoints\[Phi]", "=", 
         RowBox[{"inf3Disopointisoscatter`ppoints", "[", 
          RowBox[{
          "points\[Phi]", ",", "dr", ",", "maxr", ",", "\[CapitalSigma]t"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"exact1points", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Quiet", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"4", " ", "Pi", " ", 
               SuperscriptBox[
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "2"], " ", 
               RowBox[{"inf3Disopointisoscatter`\[Phi]exact1a", "[", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "\[CapitalSigma]t", 
                 ",", "\[Alpha]"}], "]"}]}]}], "}"}], "]"}], "&"}], " ", "/@",
           "plotpoints\[Phi]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"plot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ListPlot", "[", 
             RowBox[{"exact1points", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"4", " ", "Pi", " ", 
                  SuperscriptBox["r", "2"], " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"logplot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListLogPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ListLogPlot", "[", 
             RowBox[{"exact1points", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"4", " ", "Pi", " ", 
                  SuperscriptBox["r", "2"], " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"GraphicsGrid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"plot\[Phi]", ",", "logplot\[Phi]"}], "}"}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
           "\"\<Exact solution (1a)\\nInfinite 3D, isotropic point source, \
isotropic scattering, fluence \[Phi][r], \[Alpha] = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[Alpha]", "]"}], "<>", 
            "\"\<, \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[CapitalSigma]t", "]"}]}]}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
     "Text", "[", 
      "\"\<Uh oh!  Couldn't find MC data.  Try to evaluate this entire \
notebook and ensure the data path is setup correctly.\>\"", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0.8"}], "}"}], ",", 
     "inf3Disopointisoscatter`alphas"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalSigma]t", ",", "3"}], "}"}], ",", 
     "inf3Disopointisoscatter`muts"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.649259789611609*^9, 3.649259851754438*^9}, {
   3.649259907663431*^9, 3.649259992296626*^9}, {3.649260050094636*^9, 
   3.649260065849139*^9}, 3.649260129895323*^9, {3.649260309183428*^9, 
   3.6492603094557133`*^9}, {3.649260371404566*^9, 3.64926040211484*^9}, 
   3.649272745810855*^9, {3.649272859097014*^9, 3.649272862208322*^9}, {
   3.649272894311653*^9, 3.64927289769634*^9}, {3.6492730110286016`*^9, 
   3.6492730250756083`*^9}, {3.649273106353642*^9, 3.649273109077507*^9}, {
   3.649273170203189*^9, 3.649273170411021*^9}, {3.649872238500237*^9, 
   3.649872259049232*^9}, {3.649894400589272*^9, 3.6498944384501762`*^9}, {
   3.650002365346281*^9, 3.650002380352285*^9}, {3.6500024298360243`*^9, 
   3.650002446810408*^9}, {3.650002497701038*^9, 3.650002523956849*^9}, {
   3.650002571560855*^9, 3.6500026508115797`*^9}, {3.65000269281654*^9, 
   3.650002759659141*^9}, {3.6500027916908703`*^9, 3.65000282619895*^9}, {
   3.650002862772669*^9, 3.6500028906111307`*^9}, {3.650002926853812*^9, 
   3.650002948093389*^9}, {3.650002982083981*^9, 3.6500030086453667`*^9}, 
   3.650003351221335*^9, {3.652044423309552*^9, 3.6520444258771887`*^9}, {
   3.6776351179958277`*^9, 3.677635144851108*^9}, {3.677635279645838*^9, 
   3.677635279874563*^9}, {3.677635348820468*^9, 3.677635364740595*^9}, {
   3.677635407216456*^9, 3.677635407407715*^9}, 3.677635481374805*^9, {
   3.677643080681561*^9, 3.677643081049223*^9}, {3.6776433348108273`*^9, 
   3.677643356335271*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Alpha]$$ = 
    0.8, $CellContext`\[CapitalSigma]t$$ = 3, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], 0.8}, {0.01, 0.1, 0.3, 0.5, 0.7, 0.8, 
      0.9, 0.95, 0.99, 0.999}}, {{
       Hold[$CellContext`\[CapitalSigma]t$$], 3}, {1, 3}}}, Typeset`size$$ = {
    44.9296875, {1., 6.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Alpha]$1473805$$ = 
    0, $CellContext`\[CapitalSigma]t$1473806$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Alpha]$$ = 
        0.8, $CellContext`\[CapitalSigma]t$$ = 3}, "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$1473805$$, 0], 
        Hold[$CellContext`\[CapitalSigma]t$$, \
$CellContext`\[CapitalSigma]t$1473806$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      If[Length[inf3Disopointisoscatter`simulations] > 0, 
        Module[{$CellContext`data$, $CellContext`maxr$, $CellContext`dr$, \
$CellContext`points\[Phi]$, $CellContext`plotpoints\[Phi]$, \
$CellContext`logplot\[Phi]$, $CellContext`plot\[Phi]$, \
$CellContext`exact1points$}, $CellContext`data$ = Part[
            SelectFirst[
            inf3Disopointisoscatter`simulations, And[
             Part[#, 1] == $CellContext`\[Alpha]$$, 
              Part[#, 2] == $CellContext`\[CapitalSigma]t$$]& ], 
            3]; $CellContext`maxr$ = 
          Part[$CellContext`data$, 2, 5]; $CellContext`dr$ = 
          Part[$CellContext`data$, 2, 7]; $CellContext`points\[Phi]$ = 
          Part[$CellContext`data$, 4]; $CellContext`plotpoints\[Phi]$ = 
          
          inf3Disopointisoscatter`ppoints[$CellContext`points\[Phi]$, \
$CellContext`dr$, $CellContext`maxr$, $CellContext`\[CapitalSigma]t$$]; \
$CellContext`exact1points$ = Map[Quiet[{
              Part[#, 1], 4 Pi Part[#, 1]^2 
              inf3Disopointisoscatter`\[Phi]exact1a[
                
                Part[#, 
                 1], $CellContext`\[CapitalSigma]t$$, \
$CellContext`\[Alpha]$$]}]& , $CellContext`plotpoints\[Phi]$]; \
$CellContext`plot\[Phi]$ = Quiet[
            Show[
             
             ListPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             
             ListPlot[$CellContext`exact1points$, PlotRange -> All, Joined -> 
              True], Frame -> True, 
             FrameLabel -> {{
               4 Pi $CellContext`r^2 $CellContext`\[Phi][$CellContext`r], 
                Null}, {$CellContext`r, Null}}]]; $CellContext`logplot\[Phi]$ = 
          Quiet[
            Show[
             
             ListLogPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             
             ListLogPlot[$CellContext`exact1points$, PlotRange -> All, Joined -> 
              True], Frame -> True, 
             FrameLabel -> {{
               4 Pi $CellContext`r^2 $CellContext`\[Phi][$CellContext`r], 
                Null}, {$CellContext`r, Null}}]]; Show[
           
           GraphicsGrid[{{$CellContext`plot\[Phi]$, \
$CellContext`logplot\[Phi]$}}, ImageSize -> 800], PlotLabel -> 
           StringJoin[
            "Exact solution (1a)\nInfinite 3D, isotropic point source, \
isotropic scattering, fluence \[Phi][r], \[Alpha] = ", 
             ToString[$CellContext`\[Alpha]$$], 
             ", \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = ", 
             ToString[$CellContext`\[CapitalSigma]t$$]]]], 
        Text[
        "Uh oh!  Couldn't find MC data.  Try to evaluate this entire notebook \
and ensure the data path is setup correctly."]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, 0.8}, {0.01, 0.1, 0.3, 
         0.5, 0.7, 0.8, 0.9, 0.95, 0.99, 
         0.999}}, {{$CellContext`\[CapitalSigma]t$$, 3}, {1, 3}}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{97., {50., 53.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6492599960399323`*^9, {3.649260054751576*^9, 3.6492600667267723`*^9}, 
   3.649260130666471*^9, 3.6492603097120123`*^9, 3.649260404452841*^9, 
   3.649260520526636*^9, 3.649261009294073*^9, {3.6492728228080807`*^9, 
   3.649272833844741*^9}, 3.649272870547728*^9, 3.6492729014170713`*^9, {
   3.649273033207165*^9, 3.6492730488975773`*^9}, 3.649273110752254*^9, {
   3.6492731576796923`*^9, 3.6492731709316483`*^9}, 3.649893125231133*^9, 
   3.64989444074127*^9, 3.650002380670837*^9, 3.6500024551855*^9, {
   3.65000251145569*^9, 3.6500025310761137`*^9}, {3.6500026145656157`*^9, 
   3.650002659356792*^9}, {3.6500027078910933`*^9, 3.6500027600243883`*^9}, {
   3.650002803133861*^9, 3.6500028298210363`*^9}, 3.650002894229841*^9, 
   3.6500029521809187`*^9, {3.650002987365321*^9, 3.65000300904708*^9}, {
   3.650003679137001*^9, 3.650003691694615*^9}, 3.650052048527351*^9, 
   3.652044587533841*^9, 3.6776351474170723`*^9, 3.677635195389729*^9, 
   3.677635287620723*^9, 3.677635365314539*^9, 3.677635418007964*^9, 
   3.677636017956352*^9, 3.677643089993937*^9, {3.6776433489075623`*^9, 
   3.677643362981777*^9}, 3.680432241224689*^9, 3.680433056778748*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fluence - Exact solution (1b) comparison to MC", "Subsection",
 CellChangeTimes->{{3.649259702897419*^9, 3.64925971462465*^9}, {
  3.649893943340941*^9, 3.649893948401101*^9}, {3.650003121496348*^9, 
  3.650003125748569*^9}, {3.67763541090819*^9, 3.67763541224439*^9}, {
  3.677637167249815*^9, 3.6776371673601923`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"alpha", ",", "\[CapitalSigma]t"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "inf3Disopointisoscatter`simulations", "]"}], 
      ">", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "data", ",", "maxr", ",", "dr", ",", "points\[Phi]", ",", 
         "plotpoints\[Phi]", ",", "logplot\[Phi]", ",", "plot\[Phi]", ",", 
         "exact1points"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{
          RowBox[{"SelectFirst", "[", 
           RowBox[{"inf3Disopointisoscatter`simulations", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\[Alpha]"}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
               "\[CapitalSigma]t"}]}], "&"}]}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"maxr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "5"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "7"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"points\[Phi]", " ", "=", " ", 
         RowBox[{"data", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "divide", " ", "by", " ", "\[CapitalSigma]t", " ", "to", " ", 
          "convert", " ", "collision", " ", "density", " ", "into", " ", 
          "fluence"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"plotpoints\[Phi]", "=", 
         RowBox[{"inf3Disopointisoscatter`ppoints", "[", 
          RowBox[{
          "points\[Phi]", ",", "dr", ",", "maxr", ",", "\[CapitalSigma]t"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"exact1points", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Quiet", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"4", " ", "Pi", " ", 
               SuperscriptBox[
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "2"], " ", 
               RowBox[{"inf3Disopointisoscatter`\[Phi]exact1b", "[", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "\[CapitalSigma]t", 
                 ",", "\[Alpha]"}], "]"}]}]}], "}"}], "]"}], "&"}], " ", "/@",
           "plotpoints\[Phi]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"plot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ListPlot", "[", 
             RowBox[{"exact1points", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"4", " ", "Pi", " ", 
                  SuperscriptBox["r", "2"], " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"logplot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListLogPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ListLogPlot", "[", 
             RowBox[{"exact1points", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"4", " ", "Pi", " ", 
                  SuperscriptBox["r", "2"], " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"GraphicsGrid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"plot\[Phi]", ",", "logplot\[Phi]"}], "}"}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
           "\"\<Exact solution (1b)\\nInfinite 3D, isotropic point source, \
isotropic scattering, fluence \[Phi][r], \[Alpha] = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[Alpha]", "]"}], "<>", 
            "\"\<, \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[CapitalSigma]t", "]"}]}]}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
     "Text", "[", 
      "\"\<Uh oh!  Couldn't find MC data.  Try to evaluate this entire \
notebook and ensure the data path is setup correctly.\>\"", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0.95"}], "}"}], ",", 
     "inf3Disopointisoscatter`alphas"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[CapitalSigma]t", ",", "inf3Disopointisoscatter`muts"}], 
    "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6776354869559402`*^9, 3.677635490204632*^9}, {
   3.6776427539398117`*^9, 3.677642754321162*^9}, 3.67764307027687*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Alpha]$$ = 
    0.95, $CellContext`\[CapitalSigma]t$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], 0.95}, {0.01, 0.1, 0.3, 0.5, 0.7, 0.8, 
      0.9, 0.95, 0.99, 0.999}}, {
      Hold[$CellContext`\[CapitalSigma]t$$], {1, 3}}}, Typeset`size$$ = {
    576., {104., 103.60659180448536`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Alpha]$1496374$$ = 
    0, $CellContext`\[CapitalSigma]t$1496375$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Alpha]$$ = 
        0.95, $CellContext`\[CapitalSigma]t$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$1496374$$, 0], 
        Hold[$CellContext`\[CapitalSigma]t$$, \
$CellContext`\[CapitalSigma]t$1496375$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      If[Length[inf3Disopointisoscatter`simulations] > 0, 
        Module[{$CellContext`data$, $CellContext`maxr$, $CellContext`dr$, \
$CellContext`points\[Phi]$, $CellContext`plotpoints\[Phi]$, \
$CellContext`logplot\[Phi]$, $CellContext`plot\[Phi]$, \
$CellContext`exact1points$}, $CellContext`data$ = Part[
            SelectFirst[
            inf3Disopointisoscatter`simulations, And[
             Part[#, 1] == $CellContext`\[Alpha]$$, 
              Part[#, 2] == $CellContext`\[CapitalSigma]t$$]& ], 
            3]; $CellContext`maxr$ = 
          Part[$CellContext`data$, 2, 5]; $CellContext`dr$ = 
          Part[$CellContext`data$, 2, 7]; $CellContext`points\[Phi]$ = 
          Part[$CellContext`data$, 4]; $CellContext`plotpoints\[Phi]$ = 
          inf3Disopointisoscatter`ppoints[$CellContext`points\[Phi]$, \
$CellContext`dr$, $CellContext`maxr$, $CellContext`\[CapitalSigma]t$$]; \
$CellContext`exact1points$ = Map[Quiet[{
              Part[#, 1], 4 Pi Part[#, 1]^2 
              inf3Disopointisoscatter`\[Phi]exact1b[
                
                Part[#, 
                 1], $CellContext`\[CapitalSigma]t$$, \
$CellContext`\[Alpha]$$]}]& , $CellContext`plotpoints\[Phi]$]; \
$CellContext`plot\[Phi]$ = Quiet[
            Show[
             
             ListPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             
             ListPlot[$CellContext`exact1points$, PlotRange -> All, Joined -> 
              True], Frame -> True, 
             FrameLabel -> {{
               4 Pi $CellContext`r^2 $CellContext`\[Phi][$CellContext`r], 
                Null}, {$CellContext`r, Null}}]]; $CellContext`logplot\[Phi]$ = 
          Quiet[
            Show[
             
             ListLogPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             
             ListLogPlot[$CellContext`exact1points$, PlotRange -> All, Joined -> 
              True], Frame -> True, 
             FrameLabel -> {{
               4 Pi $CellContext`r^2 $CellContext`\[Phi][$CellContext`r], 
                Null}, {$CellContext`r, Null}}]]; Show[
           
           GraphicsGrid[{{$CellContext`plot\[Phi]$, \
$CellContext`logplot\[Phi]$}}, ImageSize -> 800], PlotLabel -> 
           StringJoin[
            "Exact solution (1b)\nInfinite 3D, isotropic point source, \
isotropic scattering, fluence \[Phi][r], \[Alpha] = ", 
             ToString[$CellContext`\[Alpha]$$], 
             ", \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = ", 
             ToString[$CellContext`\[CapitalSigma]t$$]]]], 
        Text[
        "Uh oh!  Couldn't find MC data.  Try to evaluate this entire notebook \
and ensure the data path is setup correctly."]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, 0.95}, {0.01, 0.1, 0.3, 
         0.5, 0.7, 0.8, 0.9, 0.95, 0.99, 
         0.999}}, {$CellContext`\[CapitalSigma]t$$, {1, 3}}}, "Options" :> {},
       "DefaultOptions" :> {}],
     ImageSizeCache->{612., {149., 152.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.677635495564719*^9, 3.677642715397575*^9, 
  3.677642758249132*^9, 3.6776430745318947`*^9, 3.680432243947455*^9, 
  3.680433063293332*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fluence - Exact solution (2a) comparison to MC", "Subsection",
 CellChangeTimes->{{3.649259702897419*^9, 3.64925971462465*^9}, {
  3.649893943340941*^9, 3.649893948401101*^9}, {3.650003121496348*^9, 
  3.650003125748569*^9}, {3.67763541090819*^9, 3.67763541224439*^9}, {
  3.6776371721774693`*^9, 3.677637172320451*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"alpha", ",", "\[CapitalSigma]t"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "inf3Disopointisoscatter`simulations", "]"}], 
      ">", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "data", ",", "maxr", ",", "dr", ",", "points\[Phi]", ",", 
         "plotpoints\[Phi]", ",", "logplot\[Phi]", ",", "plot\[Phi]", ",", 
         "exact1points"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{
          RowBox[{"SelectFirst", "[", 
           RowBox[{"inf3Disopointisoscatter`simulations", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\[Alpha]"}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
               "\[CapitalSigma]t"}]}], "&"}]}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"maxr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "5"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "7"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"points\[Phi]", " ", "=", " ", 
         RowBox[{"data", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "divide", " ", "by", " ", "\[CapitalSigma]t", " ", "to", " ", 
          "convert", " ", "collision", " ", "density", " ", "into", " ", 
          "fluence"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"plotpoints\[Phi]", "=", 
         RowBox[{"inf3Disopointisoscatter`ppoints", "[", 
          RowBox[{
          "points\[Phi]", ",", "dr", ",", "maxr", ",", "\[CapitalSigma]t"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"exact1points", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Quiet", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"4", " ", "Pi", " ", 
               SuperscriptBox[
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "2"], " ", 
               RowBox[{"inf3Disopointisoscatter`\[Phi]exact2a", "[", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "\[CapitalSigma]t", 
                 ",", "\[Alpha]"}], "]"}]}]}], "}"}], "]"}], "&"}], " ", "/@",
           "plotpoints\[Phi]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"plot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ListPlot", "[", 
             RowBox[{"exact1points", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"4", " ", "Pi", " ", 
                  SuperscriptBox["r", "2"], " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"logplot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListLogPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ListLogPlot", "[", 
             RowBox[{"exact1points", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"4", " ", "Pi", " ", 
                  SuperscriptBox["r", "2"], " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"GraphicsGrid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"plot\[Phi]", ",", "logplot\[Phi]"}], "}"}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
           "\"\<Exact solution (2a)\\nInfinite 3D, isotropic point source, \
isotropic scattering, fluence \[Phi][r], \[Alpha] = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[Alpha]", "]"}], "<>", 
            "\"\<, \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[CapitalSigma]t", "]"}]}]}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
     "Text", "[", 
      "\"\<Uh oh!  Couldn't find MC data.  Try to evaluate this entire \
notebook and ensure the data path is setup correctly.\>\"", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0.99"}], "}"}], ",", 
     "inf3Disopointisoscatter`alphas"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[CapitalSigma]t", ",", "inf3Disopointisoscatter`muts"}], 
    "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6776355020863237`*^9, 3.677635505779339*^9}, {
  3.677643377926647*^9, 3.677643402946859*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Alpha]$$ = 
    0.99, $CellContext`\[CapitalSigma]t$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], 0.99}, {0.01, 0.1, 0.3, 0.5, 0.7, 0.8, 
      0.9, 0.95, 0.99, 0.999}}, {
      Hold[$CellContext`\[CapitalSigma]t$$], {1, 3}}}, Typeset`size$$ = {
    576., {104., 103.60659180448536`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Alpha]$1501394$$ = 
    0, $CellContext`\[CapitalSigma]t$1501395$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Alpha]$$ = 
        0.99, $CellContext`\[CapitalSigma]t$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$1501394$$, 0], 
        Hold[$CellContext`\[CapitalSigma]t$$, \
$CellContext`\[CapitalSigma]t$1501395$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      If[Length[inf3Disopointisoscatter`simulations] > 0, 
        Module[{$CellContext`data$, $CellContext`maxr$, $CellContext`dr$, \
$CellContext`points\[Phi]$, $CellContext`plotpoints\[Phi]$, \
$CellContext`logplot\[Phi]$, $CellContext`plot\[Phi]$, \
$CellContext`exact1points$}, $CellContext`data$ = Part[
            SelectFirst[
            inf3Disopointisoscatter`simulations, And[
             Part[#, 1] == $CellContext`\[Alpha]$$, 
              Part[#, 2] == $CellContext`\[CapitalSigma]t$$]& ], 
            3]; $CellContext`maxr$ = 
          Part[$CellContext`data$, 2, 5]; $CellContext`dr$ = 
          Part[$CellContext`data$, 2, 7]; $CellContext`points\[Phi]$ = 
          Part[$CellContext`data$, 4]; $CellContext`plotpoints\[Phi]$ = 
          inf3Disopointisoscatter`ppoints[$CellContext`points\[Phi]$, \
$CellContext`dr$, $CellContext`maxr$, $CellContext`\[CapitalSigma]t$$]; \
$CellContext`exact1points$ = Map[Quiet[{
              Part[#, 1], 4 Pi Part[#, 1]^2 
              inf3Disopointisoscatter`\[Phi]exact2a[
                
                Part[#, 
                 1], $CellContext`\[CapitalSigma]t$$, \
$CellContext`\[Alpha]$$]}]& , $CellContext`plotpoints\[Phi]$]; \
$CellContext`plot\[Phi]$ = Quiet[
            Show[
             
             ListPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             
             ListPlot[$CellContext`exact1points$, PlotRange -> All, Joined -> 
              True], Frame -> True, 
             FrameLabel -> {{
               4 Pi $CellContext`r^2 $CellContext`\[Phi][$CellContext`r], 
                Null}, {$CellContext`r, Null}}]]; $CellContext`logplot\[Phi]$ = 
          Quiet[
            Show[
             
             ListLogPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             
             ListLogPlot[$CellContext`exact1points$, PlotRange -> All, Joined -> 
              True], Frame -> True, 
             FrameLabel -> {{
               4 Pi $CellContext`r^2 $CellContext`\[Phi][$CellContext`r], 
                Null}, {$CellContext`r, Null}}]]; Show[
           
           GraphicsGrid[{{$CellContext`plot\[Phi]$, \
$CellContext`logplot\[Phi]$}}, ImageSize -> 800], PlotLabel -> 
           StringJoin[
            "Exact solution (2a)\nInfinite 3D, isotropic point source, \
isotropic scattering, fluence \[Phi][r], \[Alpha] = ", 
             ToString[$CellContext`\[Alpha]$$], 
             ", \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = ", 
             ToString[$CellContext`\[CapitalSigma]t$$]]]], 
        Text[
        "Uh oh!  Couldn't find MC data.  Try to evaluate this entire notebook \
and ensure the data path is setup correctly."]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, 0.99}, {0.01, 0.1, 0.3, 
         0.5, 0.7, 0.8, 0.9, 0.95, 0.99, 
         0.999}}, {$CellContext`\[CapitalSigma]t$$, {1, 3}}}, "Options" :> {},
       "DefaultOptions" :> {}],
     ImageSizeCache->{612., {149., 152.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.677635508959478*^9, {3.677643382762321*^9, 3.677643404545597*^9}, 
   3.68043224740947*^9, 3.6804330676033907`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fluence - Exact solution (2b) comparison to MC", "Subsection",
 CellChangeTimes->{{3.649259702897419*^9, 3.64925971462465*^9}, {
  3.649893943340941*^9, 3.649893948401101*^9}, {3.650003121496348*^9, 
  3.650003125748569*^9}, {3.67763541090819*^9, 3.67763541224439*^9}, {
  3.677637176456991*^9, 3.6776371775439243`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"alpha", ",", "\[CapitalSigma]t"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "inf3Disopointisoscatter`simulations", "]"}], 
      ">", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "data", ",", "maxr", ",", "dr", ",", "points\[Phi]", ",", 
         "plotpoints\[Phi]", ",", "logplot\[Phi]", ",", "plot\[Phi]", ",", 
         "exact1points"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{
          RowBox[{"SelectFirst", "[", 
           RowBox[{"inf3Disopointisoscatter`simulations", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\[Alpha]"}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
               "\[CapitalSigma]t"}]}], "&"}]}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"maxr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "5"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "7"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"points\[Phi]", " ", "=", " ", 
         RowBox[{"data", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "divide", " ", "by", " ", "\[CapitalSigma]t", " ", "to", " ", 
          "convert", " ", "collision", " ", "density", " ", "into", " ", 
          "fluence"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"plotpoints\[Phi]", "=", 
         RowBox[{"inf3Disopointisoscatter`ppoints", "[", 
          RowBox[{
          "points\[Phi]", ",", "dr", ",", "maxr", ",", "\[CapitalSigma]t"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"exact1points", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Quiet", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"4", " ", "Pi", " ", 
               SuperscriptBox[
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "2"], " ", 
               RowBox[{"inf3Disopointisoscatter`\[Phi]exact2b", "[", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "\[CapitalSigma]t", 
                 ",", "\[Alpha]"}], "]"}]}]}], "}"}], "]"}], "&"}], " ", "/@",
           "plotpoints\[Phi]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"plot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ListPlot", "[", 
             RowBox[{"exact1points", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"4", " ", "Pi", " ", 
                  SuperscriptBox["r", "2"], " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"logplot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListLogPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ListLogPlot", "[", 
             RowBox[{"exact1points", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"4", " ", "Pi", " ", 
                  SuperscriptBox["r", "2"], " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"GraphicsGrid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"plot\[Phi]", ",", "logplot\[Phi]"}], "}"}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
           "\"\<Exact solution (2b)\\nInfinite 3D, isotropic point source, \
isotropic scattering, fluence \[Phi][r], \[Alpha] = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[Alpha]", "]"}], "<>", 
            "\"\<, \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[CapitalSigma]t", "]"}]}]}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
     "Text", "[", 
      "\"\<Uh oh!  Couldn't find MC data.  Try to evaluate this entire \
notebook and ensure the data path is setup correctly.\>\"", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0.95"}], "}"}], ",", 
     "inf3Disopointisoscatter`alphas"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[CapitalSigma]t", ",", "inf3Disopointisoscatter`muts"}], 
    "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.67763552267732*^9, 3.6776355272265263`*^9}, {
   3.6776434096694183`*^9, 3.67764341002768*^9}, 3.67764376754713*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Alpha]$$ = 
    0.95, $CellContext`\[CapitalSigma]t$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], 0.95}, {0.01, 0.1, 0.3, 0.5, 0.7, 0.8, 
      0.9, 0.95, 0.99, 0.999}}, {
      Hold[$CellContext`\[CapitalSigma]t$$], {1, 3}}}, Typeset`size$$ = {
    576., {104., 103.60659180448536`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Alpha]$1506215$$ = 
    0, $CellContext`\[CapitalSigma]t$1506216$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Alpha]$$ = 
        0.95, $CellContext`\[CapitalSigma]t$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$1506215$$, 0], 
        Hold[$CellContext`\[CapitalSigma]t$$, \
$CellContext`\[CapitalSigma]t$1506216$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      If[Length[inf3Disopointisoscatter`simulations] > 0, 
        Module[{$CellContext`data$, $CellContext`maxr$, $CellContext`dr$, \
$CellContext`points\[Phi]$, $CellContext`plotpoints\[Phi]$, \
$CellContext`logplot\[Phi]$, $CellContext`plot\[Phi]$, \
$CellContext`exact1points$}, $CellContext`data$ = Part[
            SelectFirst[
            inf3Disopointisoscatter`simulations, And[
             Part[#, 1] == $CellContext`\[Alpha]$$, 
              Part[#, 2] == $CellContext`\[CapitalSigma]t$$]& ], 
            3]; $CellContext`maxr$ = 
          Part[$CellContext`data$, 2, 5]; $CellContext`dr$ = 
          Part[$CellContext`data$, 2, 7]; $CellContext`points\[Phi]$ = 
          Part[$CellContext`data$, 4]; $CellContext`plotpoints\[Phi]$ = 
          inf3Disopointisoscatter`ppoints[$CellContext`points\[Phi]$, \
$CellContext`dr$, $CellContext`maxr$, $CellContext`\[CapitalSigma]t$$]; \
$CellContext`exact1points$ = Map[Quiet[{
              Part[#, 1], 4 Pi Part[#, 1]^2 
              inf3Disopointisoscatter`\[Phi]exact2b[
                
                Part[#, 
                 1], $CellContext`\[CapitalSigma]t$$, \
$CellContext`\[Alpha]$$]}]& , $CellContext`plotpoints\[Phi]$]; \
$CellContext`plot\[Phi]$ = Quiet[
            Show[
             
             ListPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             
             ListPlot[$CellContext`exact1points$, PlotRange -> All, Joined -> 
              True], Frame -> True, 
             FrameLabel -> {{
               4 Pi $CellContext`r^2 $CellContext`\[Phi][$CellContext`r], 
                Null}, {$CellContext`r, Null}}]]; $CellContext`logplot\[Phi]$ = 
          Quiet[
            Show[
             
             ListLogPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             
             ListLogPlot[$CellContext`exact1points$, PlotRange -> All, Joined -> 
              True], Frame -> True, 
             FrameLabel -> {{
               4 Pi $CellContext`r^2 $CellContext`\[Phi][$CellContext`r], 
                Null}, {$CellContext`r, Null}}]]; Show[
           
           GraphicsGrid[{{$CellContext`plot\[Phi]$, \
$CellContext`logplot\[Phi]$}}, ImageSize -> 800], PlotLabel -> 
           StringJoin[
            "Exact solution (2b)\nInfinite 3D, isotropic point source, \
isotropic scattering, fluence \[Phi][r], \[Alpha] = ", 
             ToString[$CellContext`\[Alpha]$$], 
             ", \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = ", 
             ToString[$CellContext`\[CapitalSigma]t$$]]]], 
        Text[
        "Uh oh!  Couldn't find MC data.  Try to evaluate this entire notebook \
and ensure the data path is setup correctly."]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, 0.95}, {0.01, 0.1, 0.3, 
         0.5, 0.7, 0.8, 0.9, 0.95, 0.99, 
         0.999}}, {$CellContext`\[CapitalSigma]t$$, {1, 3}}}, "Options" :> {},
       "DefaultOptions" :> {}],
     ImageSizeCache->{612., {149., 152.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.677635528527598*^9, 3.677643418184469*^9, 
  3.677720622103757*^9, 3.680432249734379*^9, 3.68043306926867*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Fluence - Diffusion approximations (Classical and Grosjean) comparison to MC\
\>", "Subsection",
 CellChangeTimes->{{3.649259702897419*^9, 3.64925971462465*^9}, {
  3.649893943340941*^9, 3.649893948401101*^9}, {3.650003121496348*^9, 
  3.650003148370801*^9}, {3.650007172824812*^9, 3.6500071827023907`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"alpha", ",", "\[CapitalSigma]t"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "inf3Disopointisoscatter`simulations", "]"}], 
      ">", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "data", ",", "maxr", ",", "dr", ",", "points\[Phi]", ",", 
         "plotpoints\[Phi]", ",", "logplot\[Phi]", ",", "plot\[Phi]", ",", 
         "exact1points"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{
          RowBox[{"SelectFirst", "[", 
           RowBox[{"inf3Disopointisoscatter`simulations", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\[Alpha]"}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
               "\[CapitalSigma]t"}]}], "&"}]}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"maxr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "5"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "7"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"points\[Phi]", " ", "=", " ", 
         RowBox[{"data", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "divide", " ", "by", " ", "\[CapitalSigma]t", " ", "to", " ", 
          "convert", " ", "collision", " ", "density", " ", "into", " ", 
          "fluence"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"plotpoints\[Phi]", "=", 
         RowBox[{"inf3Disopointisoscatter`ppoints", "[", 
          RowBox[{
          "points\[Phi]", ",", "dr", ",", "maxr", ",", "\[CapitalSigma]t"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"plot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"4", " ", "Pi", " ", 
               SuperscriptBox["r", "2"], "  ", 
               RowBox[{"inf3Disopointisoscatter`\[Phi]Grosjean", "[", 
                RowBox[{"r", ",", "\[CapitalSigma]t", ",", "\[Alpha]"}], 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"r", ",", "0", ",", "maxr"}], "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"4", " ", "Pi", " ", 
               SuperscriptBox["r", "2"], "  ", 
               RowBox[{"inf3Disopointisoscatter`\[Phi]Diffusion", "[", 
                RowBox[{"r", ",", "\[CapitalSigma]t", ",", "\[Alpha]"}], 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"r", ",", "0", ",", "maxr"}], "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"4", " ", "Pi", " ", 
                  SuperscriptBox["r", "2"], " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"logplot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListLogPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"LogPlot", "[", 
             RowBox[{
              RowBox[{"4", " ", "Pi", " ", 
               SuperscriptBox["r", "2"], "  ", 
               RowBox[{"inf3Disopointisoscatter`\[Phi]Grosjean", "[", 
                RowBox[{"r", ",", "\[CapitalSigma]t", ",", "\[Alpha]"}], 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"r", ",", "0", ",", "maxr"}], "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"LogPlot", "[", 
             RowBox[{
              RowBox[{"4", " ", "Pi", " ", 
               SuperscriptBox["r", "2"], "  ", 
               RowBox[{"inf3Disopointisoscatter`\[Phi]Diffusion", "[", 
                RowBox[{"r", ",", "\[CapitalSigma]t", ",", "\[Alpha]"}], 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"r", ",", "0", ",", "maxr"}], "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"4", " ", "Pi", " ", 
                  SuperscriptBox["r", "2"], " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"pp", "=", 
         RowBox[{"Show", "[", 
          RowBox[{
           RowBox[{"GraphicsGrid", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"plot\[Phi]", ",", "logplot\[Phi]"}], "}"}], "}"}], 
             ",", 
             RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], ",", 
           RowBox[{"PlotLabel", "->", 
            RowBox[{
            "\"\<Classical (dashed) and Grosjean Modified (thin) Diffusion \
Approximation\\nInfinite 3D medium, isotropic point source, isotropic \
scattering, fluence \[Phi][r], \[Alpha] = \>\"", "<>", 
             RowBox[{"ToString", "[", "\[Alpha]", "]"}], "<>", 
             "\"\<, \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = \>\"", 
             "<>", 
             RowBox[{"ToString", "[", "\[CapitalSigma]t", "]"}]}]}]}], 
          "]"}]}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
     ",", "\[IndentingNewLine]", 
     RowBox[{
     "Text", "[", 
      "\"\<Uh oh!  Couldn't find MC data.  Try to evaluate this entire \
notebook and ensure the data path is setup correctly.\>\"", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0.95"}], "}"}], ",", 
     "inf3Disopointisoscatter`alphas"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[CapitalSigma]t", ",", "inf3Disopointisoscatter`muts"}], 
    "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.677635680415991*^9, 3.6776357292481947`*^9}, {
   3.677635826937529*^9, 3.677635835257657*^9}, 3.6776488419987698`*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Alpha]$$ = 
    0.95, $CellContext`\[CapitalSigma]t$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], 0.95}, {0.01, 0.1, 0.3, 0.5, 0.7, 0.8, 
      0.9, 0.95, 0.99, 0.999}}, {
      Hold[$CellContext`\[CapitalSigma]t$$], {1, 3}}}, Typeset`size$$ = {
    576., {104., 103.60659180448536`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Alpha]$1511485$$ = 
    0, $CellContext`\[CapitalSigma]t$1511486$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Alpha]$$ = 
        0.95, $CellContext`\[CapitalSigma]t$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$1511485$$, 0], 
        Hold[$CellContext`\[CapitalSigma]t$$, \
$CellContext`\[CapitalSigma]t$1511486$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      If[Length[inf3Disopointisoscatter`simulations] > 0, 
        Module[{$CellContext`data$, $CellContext`maxr$, $CellContext`dr$, \
$CellContext`points\[Phi]$, $CellContext`plotpoints\[Phi]$, \
$CellContext`logplot\[Phi]$, $CellContext`plot\[Phi]$, \
$CellContext`exact1points$}, $CellContext`data$ = Part[
            SelectFirst[
            inf3Disopointisoscatter`simulations, And[
             Part[#, 1] == $CellContext`\[Alpha]$$, 
              Part[#, 2] == $CellContext`\[CapitalSigma]t$$]& ], 
            3]; $CellContext`maxr$ = 
          Part[$CellContext`data$, 2, 5]; $CellContext`dr$ = 
          Part[$CellContext`data$, 2, 7]; $CellContext`points\[Phi]$ = 
          Part[$CellContext`data$, 4]; $CellContext`plotpoints\[Phi]$ = 
          inf3Disopointisoscatter`ppoints[$CellContext`points\[Phi]$, \
$CellContext`dr$, $CellContext`maxr$, $CellContext`\[CapitalSigma]t$$]; \
$CellContext`plot\[Phi]$ = Quiet[
            Show[
             
             ListPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             Plot[
             4 Pi $CellContext`r^2 
              inf3Disopointisoscatter`\[Phi]Grosjean[$CellContext`r, \
$CellContext`\[CapitalSigma]t$$, $CellContext`\[Alpha]$$], {$CellContext`r, 
               0, $CellContext`maxr$}, PlotRange -> All], 
             Plot[
             4 Pi $CellContext`r^2 
              inf3Disopointisoscatter`\[Phi]Diffusion[$CellContext`r, \
$CellContext`\[CapitalSigma]t$$, $CellContext`\[Alpha]$$], {$CellContext`r, 
               0, $CellContext`maxr$}, PlotRange -> All, PlotStyle -> Dashed],
              Frame -> True, 
             FrameLabel -> {{
               4 Pi $CellContext`r^2 $CellContext`\[Phi][$CellContext`r], 
                Null}, {$CellContext`r, Null}}]]; $CellContext`logplot\[Phi]$ = 
          Quiet[
            Show[
             
             ListLogPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             LogPlot[
             4 Pi $CellContext`r^2 
              inf3Disopointisoscatter`\[Phi]Grosjean[$CellContext`r, \
$CellContext`\[CapitalSigma]t$$, $CellContext`\[Alpha]$$], {$CellContext`r, 
               0, $CellContext`maxr$}, PlotRange -> All], 
             LogPlot[
             4 Pi $CellContext`r^2 
              inf3Disopointisoscatter`\[Phi]Diffusion[$CellContext`r, \
$CellContext`\[CapitalSigma]t$$, $CellContext`\[Alpha]$$], {$CellContext`r, 
               0, $CellContext`maxr$}, PlotRange -> All, PlotStyle -> Dashed],
              Frame -> True, 
             FrameLabel -> {{
               4 Pi $CellContext`r^2 $CellContext`\[Phi][$CellContext`r], 
                Null}, {$CellContext`r, Null}}]]; $CellContext`pp = Show[
            
            GraphicsGrid[{{$CellContext`plot\[Phi]$, $CellContext`logplot\
\[Phi]$}}, ImageSize -> 800], PlotLabel -> 
            StringJoin[
             "Classical (dashed) and Grosjean Modified (thin) Diffusion \
Approximation\nInfinite 3D medium, isotropic point source, isotropic \
scattering, fluence \[Phi][r], \[Alpha] = ", 
              ToString[$CellContext`\[Alpha]$$], 
              ", \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = ", 
              ToString[$CellContext`\[CapitalSigma]t$$]]]], 
        Text[
        "Uh oh!  Couldn't find MC data.  Try to evaluate this entire notebook \
and ensure the data path is setup correctly."]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, 0.95}, {0.01, 0.1, 0.3, 
         0.5, 0.7, 0.8, 0.9, 0.95, 0.99, 
         0.999}}, {$CellContext`\[CapitalSigma]t$$, {1, 3}}}, "Options" :> {},
       "DefaultOptions" :> {}],
     ImageSizeCache->{612., {149., 152.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.677635718244424*^9, 3.677635730916739*^9}, 
   3.677635840097584*^9, 3.677648843490073*^9, 3.6804322520559397`*^9, 
   3.680433071291873*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Fluence - Diffusion approximation (Rigorous) comparison to MC\
\>", "Subsection",
 CellChangeTimes->{{3.649259702897419*^9, 3.64925971462465*^9}, {
   3.649893943340941*^9, 3.649893948401101*^9}, {3.650003121496348*^9, 
   3.650003148370801*^9}, {3.650007172824812*^9, 3.6500071827023907`*^9}, {
   3.6500077111192513`*^9, 3.65000771239109*^9}, 3.650007811903572*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "inf3Disopointisoscatter`simulations", "]"}], 
      ">", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "data", ",", "maxr", ",", "dr", ",", "points\[Phi]", ",", 
         "plotpoints\[Phi]", ",", "logplot\[Phi]", ",", "plot\[Phi]", ",", 
         "exact1points"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{
          RowBox[{"SelectFirst", "[", 
           RowBox[{"inf3Disopointisoscatter`simulations", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\[Alpha]"}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
               "\[CapitalSigma]t"}]}], "&"}]}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"maxr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "5"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "7"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"points\[Phi]", " ", "=", " ", 
         RowBox[{"data", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "divide", " ", "by", " ", "\[CapitalSigma]t", " ", "to", " ", 
          "convert", " ", "collision", " ", "density", " ", "into", " ", 
          "fluence"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"plotpoints\[Phi]", "=", 
         RowBox[{"inf3Disopointisoscatter`ppoints", "[", 
          RowBox[{
          "points\[Phi]", ",", "dr", ",", "maxr", ",", "\[CapitalSigma]t"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"plot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"4", " ", "Pi", " ", 
               SuperscriptBox["r", "2"], "  ", 
               RowBox[{
               "inf3Disopointisoscatter`\[Phi]rigourousDiffusion", "[", 
                RowBox[{"r", ",", "\[CapitalSigma]t", ",", "\[Alpha]"}], 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"r", ",", "0", ",", "maxr"}], "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"4", " ", "Pi", " ", 
                  SuperscriptBox["r", "2"], " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"logplot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListLogPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"LogPlot", "[", 
             RowBox[{
              RowBox[{"4", " ", "Pi", " ", 
               SuperscriptBox["r", "2"], "  ", 
               RowBox[{
               "inf3Disopointisoscatter`\[Phi]rigourousDiffusion", "[", 
                RowBox[{"r", ",", "\[CapitalSigma]t", ",", "\[Alpha]"}], 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"r", ",", "0", ",", "maxr"}], "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"4", " ", "Pi", " ", 
                  SuperscriptBox["r", "2"], " ", 
                  RowBox[{"\[Phi]", "[", "r", "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"GraphicsGrid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"plot\[Phi]", ",", "logplot\[Phi]"}], "}"}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
           "\"\<Rigorous Diffusion Approximation\\nInfinite 3D medium, \
isotropic point source, isotropic scattering, fluence \[Phi][r], \[Alpha] = \
\>\"", "<>", 
            RowBox[{"ToString", "[", "\[Alpha]", "]"}], "<>", 
            "\"\<, \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[CapitalSigma]t", "]"}]}]}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
     "Text", "[", 
      "\"\<Uh oh!  Couldn't find MC data.  Try to evaluate this entire \
notebook and ensure the data path is setup correctly.\>\"", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0.7"}], "}"}], ",", 
     "inf3Disopointisoscatter`alphas"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[CapitalSigma]t", ",", "inf3Disopointisoscatter`muts"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.677636271917427*^9, 3.677636273493598*^9}, {
   3.677636369264902*^9, 3.677636395541047*^9}, {3.677636435278658*^9, 
   3.677636437132701*^9}, {3.6776364766289387`*^9, 3.6776364956644583`*^9}, {
   3.6776437776103497`*^9, 3.6776437779520197`*^9}, 3.6776459855062237`*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Alpha]$$ = 
    0.7, $CellContext`\[CapitalSigma]t$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], 0.7}, {0.01, 0.1, 0.3, 0.5, 0.7, 0.8, 
      0.9, 0.95, 0.99, 0.999}}, {
      Hold[$CellContext`\[CapitalSigma]t$$], {1, 3}}}, Typeset`size$$ = {
    576., {104., 103.60659180448536`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Alpha]$1512162$$ = 
    0, $CellContext`\[CapitalSigma]t$1512163$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Alpha]$$ = 
        0.7, $CellContext`\[CapitalSigma]t$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$1512162$$, 0], 
        Hold[$CellContext`\[CapitalSigma]t$$, \
$CellContext`\[CapitalSigma]t$1512163$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      If[Length[inf3Disopointisoscatter`simulations] > 0, 
        Module[{$CellContext`data$, $CellContext`maxr$, $CellContext`dr$, \
$CellContext`points\[Phi]$, $CellContext`plotpoints\[Phi]$, \
$CellContext`logplot\[Phi]$, $CellContext`plot\[Phi]$, \
$CellContext`exact1points$}, $CellContext`data$ = Part[
            SelectFirst[
            inf3Disopointisoscatter`simulations, And[
             Part[#, 1] == $CellContext`\[Alpha]$$, 
              Part[#, 2] == $CellContext`\[CapitalSigma]t$$]& ], 
            3]; $CellContext`maxr$ = 
          Part[$CellContext`data$, 2, 5]; $CellContext`dr$ = 
          Part[$CellContext`data$, 2, 7]; $CellContext`points\[Phi]$ = 
          Part[$CellContext`data$, 4]; $CellContext`plotpoints\[Phi]$ = 
          inf3Disopointisoscatter`ppoints[$CellContext`points\[Phi]$, \
$CellContext`dr$, $CellContext`maxr$, $CellContext`\[CapitalSigma]t$$]; \
$CellContext`plot\[Phi]$ = Quiet[
            Show[
             
             ListPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             Plot[
             4 Pi $CellContext`r^2 
              inf3Disopointisoscatter`\[Phi]rigourousDiffusion[$CellContext`r,\
 $CellContext`\[CapitalSigma]t$$, $CellContext`\[Alpha]$$], {$CellContext`r, 
               0, $CellContext`maxr$}, PlotRange -> All], Frame -> True, 
             FrameLabel -> {{
               4 Pi $CellContext`r^2 $CellContext`\[Phi][$CellContext`r], 
                Null}, {$CellContext`r, Null}}]]; $CellContext`logplot\[Phi]$ = 
          Quiet[
            Show[
             
             ListLogPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             LogPlot[
             4 Pi $CellContext`r^2 
              inf3Disopointisoscatter`\[Phi]rigourousDiffusion[$CellContext`r,\
 $CellContext`\[CapitalSigma]t$$, $CellContext`\[Alpha]$$], {$CellContext`r, 
               0, $CellContext`maxr$}, PlotRange -> All], Frame -> True, 
             FrameLabel -> {{
               4 Pi $CellContext`r^2 $CellContext`\[Phi][$CellContext`r], 
                Null}, {$CellContext`r, Null}}]]; Show[
           
           GraphicsGrid[{{$CellContext`plot\[Phi]$, \
$CellContext`logplot\[Phi]$}}, ImageSize -> 800], PlotLabel -> 
           StringJoin[
            "Rigorous Diffusion Approximation\nInfinite 3D medium, isotropic \
point source, isotropic scattering, fluence \[Phi][r], \[Alpha] = ", 
             ToString[$CellContext`\[Alpha]$$], 
             ", \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = ", 
             ToString[$CellContext`\[CapitalSigma]t$$]]]], 
        Text[
        "Uh oh!  Couldn't find MC data.  Try to evaluate this entire notebook \
and ensure the data path is setup correctly."]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, 0.7}, {0.01, 0.1, 0.3, 
         0.5, 0.7, 0.8, 0.9, 0.95, 0.99, 
         0.999}}, {$CellContext`\[CapitalSigma]t$$, {1, 3}}}, "Options" :> {},
       "DefaultOptions" :> {}],
     ImageSizeCache->{612., {149., 152.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.67763639923668*^9, 3.677636438093795*^9, {3.677636477235815*^9, 
   3.6776364959944963`*^9}, 3.677643778502089*^9, 3.677645987604251*^9, 
   3.680432256249621*^9, 3.680433071845056*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["N-th order fluence / scalar flux", "Section",
 CellChangeTimes->{{3.6500387614570208`*^9, 3.6500387653993263`*^9}, {
  3.650039936579167*^9, 3.650039945648221*^9}}],

Cell[CellGroupData[{

Cell["N-th collided Fluence - Exact solution (1) comparison to MC", \
"Subsection",
 CellChangeTimes->{{3.649259702897419*^9, 3.64925971462465*^9}, {
  3.649893943340941*^9, 3.649893948401101*^9}, {3.650003121496348*^9, 
  3.650003125748569*^9}, {3.67763541090819*^9, 3.67763541224439*^9}, {
  3.677637193479684*^9, 3.677637197879541*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"alpha", ",", "\[CapitalSigma]t"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "inf3Disopointisoscatter`simulations", "]"}], 
      ">", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "data", ",", "maxr", ",", "dr", ",", "points\[Phi]", ",", 
         "plotpoints\[Phi]", ",", "logplot\[Phi]", ",", "plot\[Phi]", ",", 
         "exact1points", ",", "numorders"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{
          RowBox[{"SelectFirst", "[", 
           RowBox[{"inf3Disopointisoscatter`simulations", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\[Alpha]"}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
               "\[CapitalSigma]t"}]}], "&"}]}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"maxr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "5"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "7"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"numorders", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "13"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"points\[Phi]", " ", "=", " ", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"9", "+", "numorders", "+", "n", "+", "1"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "divide", " ", "by", " ", "\[CapitalSigma]t", " ", "to", " ", 
          "convert", " ", "collision", " ", "density", " ", "into", " ", 
          "fluence"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"plotpoints\[Phi]", "=", 
         RowBox[{"inf3Disopointisoscatter`ppoints", "[", 
          RowBox[{
          "points\[Phi]", ",", "dr", ",", "maxr", ",", "\[CapitalSigma]t"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"exact1points", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Quiet", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"4", " ", "Pi", " ", 
               SuperscriptBox[
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "2"], " ", 
               RowBox[{"inf3Disopointisoscatter`\[Phi]exact1", "[", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "\[CapitalSigma]t", 
                 ",", "\[Alpha]", ",", "n"}], "]"}]}]}], "}"}], "]"}], "&"}], 
          " ", "/@", "plotpoints\[Phi]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"plot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ListPlot", "[", 
             RowBox[{"exact1points", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"4", " ", "Pi", " ", 
                  SuperscriptBox["r", "2"], " ", 
                  RowBox[{"\[Phi]", "[", 
                   RowBox[{"r", "|", "n"}], "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"logplot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListLogPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ListLogPlot", "[", 
             RowBox[{"exact1points", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"4", " ", "Pi", " ", 
                  SuperscriptBox["r", "2"], " ", 
                  RowBox[{"\[Phi]", "[", 
                   RowBox[{"r", "|", "n"}], "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"GraphicsGrid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"plot\[Phi]", ",", "logplot\[Phi]"}], "}"}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
           "\"\<Exact solution (1)\\nInfinite 3D medium, isotropic point \
source, isotropic scattering, n-th scattered fluence \[Phi][r|n], \[Alpha] = \
\>\"", "<>", 
            RowBox[{"ToString", "[", "\[Alpha]", "]"}], "<>", 
            "\"\<, \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[CapitalSigma]t", "]"}]}]}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
     "Text", "[", 
      "\"\<Uh oh!  Couldn't find MC data.  Try to evaluate this entire \
notebook and ensure the data path is setup correctly.\>\"", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0.9"}], "}"}], ",", 
     "inf3Disopointisoscatter`alphas"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[CapitalSigma]t", ",", "inf3Disopointisoscatter`muts"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "8"}], "}"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
        "NumberQ", "[", "inf3Disopointisoscatter`numcollorders", "]"}], ",", 
        "inf3Disopointisoscatter`numcollorders", ",", "1"}], "]"}], "]"}]}], 
    "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6776366813739443`*^9, 3.677636702591022*^9}, {
   3.677636824776952*^9, 3.677636836119492*^9}, {3.6776369220064573`*^9, 
   3.677637003415887*^9}, {3.677637078179029*^9, 3.6776370809729567`*^9}, 
   3.677645990377006*^9, 3.67764605285905*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 8, $CellContext`\[Alpha]$$ = 
    0.9, $CellContext`\[CapitalSigma]t$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], 0.9}, {0.01, 0.1, 0.3, 0.5, 0.7, 0.8, 
      0.9, 0.95, 0.99, 0.999}}, {
      Hold[$CellContext`\[CapitalSigma]t$$], {1, 3}}, {{
       Hold[$CellContext`n$$], 8}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,
       14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
       32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
       50}}}, Typeset`size$$ = {44.9296875, {1., 6.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Alpha]$1559175$$ = 
    0, $CellContext`\[CapitalSigma]t$1559176$$ = 
    False, $CellContext`n$1559177$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 8, $CellContext`\[Alpha]$$ = 
        0.9, $CellContext`\[CapitalSigma]t$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$1559175$$, 0], 
        Hold[$CellContext`\[CapitalSigma]t$$, \
$CellContext`\[CapitalSigma]t$1559176$$, False], 
        Hold[$CellContext`n$$, $CellContext`n$1559177$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      If[Length[inf3Disopointisoscatter`simulations] > 0, 
        Module[{$CellContext`data$, $CellContext`maxr$, $CellContext`dr$, \
$CellContext`points\[Phi]$, $CellContext`plotpoints\[Phi]$, \
$CellContext`logplot\[Phi]$, $CellContext`plot\[Phi]$, \
$CellContext`exact1points$, $CellContext`numorders$}, $CellContext`data$ = 
          Part[
            SelectFirst[
            inf3Disopointisoscatter`simulations, And[
             Part[#, 1] == $CellContext`\[Alpha]$$, 
              Part[#, 2] == $CellContext`\[CapitalSigma]t$$]& ], 
            3]; $CellContext`maxr$ = 
          Part[$CellContext`data$, 2, 5]; $CellContext`dr$ = 
          Part[$CellContext`data$, 2, 7]; $CellContext`numorders$ = 
          Part[$CellContext`data$, 2, 13]; $CellContext`points\[Phi]$ = 
          Part[$CellContext`data$, 
            9 + $CellContext`numorders$ + $CellContext`n$$ + 
            1]; $CellContext`plotpoints\[Phi]$ = 
          inf3Disopointisoscatter`ppoints[$CellContext`points\[Phi]$, \
$CellContext`dr$, $CellContext`maxr$, $CellContext`\[CapitalSigma]t$$]; \
$CellContext`exact1points$ = Map[Quiet[{
              Part[#, 1], 4 Pi Part[#, 1]^2 
              inf3Disopointisoscatter`\[Phi]exact1[
                
                Part[#, 
                 1], $CellContext`\[CapitalSigma]t$$, \
$CellContext`\[Alpha]$$, $CellContext`n$$]}]& , \
$CellContext`plotpoints\[Phi]$]; $CellContext`plot\[Phi]$ = Quiet[
            Show[
             
             ListPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             
             ListPlot[$CellContext`exact1points$, PlotRange -> All, Joined -> 
              True], Frame -> True, 
             FrameLabel -> {{4 Pi $CellContext`r^2 $CellContext`\[Phi][
                  Alternatives[$CellContext`r, $CellContext`n$$]], 
                Null}, {$CellContext`r, Null}}]]; $CellContext`logplot\[Phi]$ = 
          Quiet[
            Show[
             
             ListLogPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             
             ListLogPlot[$CellContext`exact1points$, PlotRange -> All, Joined -> 
              True], Frame -> True, 
             FrameLabel -> {{4 Pi $CellContext`r^2 $CellContext`\[Phi][
                  Alternatives[$CellContext`r, $CellContext`n$$]], 
                Null}, {$CellContext`r, Null}}]]; Show[
           
           GraphicsGrid[{{$CellContext`plot\[Phi]$, \
$CellContext`logplot\[Phi]$}}, ImageSize -> 1000], PlotLabel -> 
           StringJoin[
            "Exact solution (1)\nInfinite 3D medium, isotropic point source, \
isotropic scattering, n-th scattered fluence \[Phi][r|n], \[Alpha] = ", 
             ToString[$CellContext`\[Alpha]$$], 
             ", \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = ", 
             ToString[$CellContext`\[CapitalSigma]t$$]]]], 
        Text[
        "Uh oh!  Couldn't find MC data.  Try to evaluate this entire notebook \
and ensure the data path is setup correctly."]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, 0.9}, {0.01, 0.1, 0.3, 
         0.5, 0.7, 0.8, 0.9, 0.95, 0.99, 
         0.999}}, {$CellContext`\[CapitalSigma]t$$, {1, 
         3}}, {{$CellContext`n$$, 8}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 
         13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
         30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 
         47, 48, 49, 50}}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{97., {64., 67.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6776369624142933`*^9, 3.677637008246682*^9}, 
   3.677637083481748*^9, 3.677646002344372*^9, 3.677646059362926*^9, 
   3.680432258774262*^9, 3.680433391792551*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["N-th collided Fluence - Exact solution (2) comparison to MC", \
"Subsection",
 CellChangeTimes->{{3.649259702897419*^9, 3.64925971462465*^9}, {
  3.649893943340941*^9, 3.649893948401101*^9}, {3.650003121496348*^9, 
  3.650003125748569*^9}, {3.67763541090819*^9, 3.67763541224439*^9}, {
  3.677637193479684*^9, 3.677637204399332*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "inf3Disopointisoscatter`simulations", "]"}], 
      ">", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "data", ",", "maxr", ",", "dr", ",", "points\[Phi]", ",", 
         "plotpoints\[Phi]", ",", "logplot\[Phi]", ",", "plot\[Phi]", ",", 
         "exact1points", ",", "numorders"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{
          RowBox[{"SelectFirst", "[", 
           RowBox[{"inf3Disopointisoscatter`simulations", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\[Alpha]"}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
               "\[CapitalSigma]t"}]}], "&"}]}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"maxr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "5"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "7"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"numorders", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "13"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"points\[Phi]", " ", "=", " ", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"9", "+", "numorders", "+", "n", "+", "1"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "divide", " ", "by", " ", "\[CapitalSigma]t", " ", "to", " ", 
          "convert", " ", "collision", " ", "density", " ", "into", " ", 
          "fluence"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"plotpoints\[Phi]", "=", 
         RowBox[{"inf3Disopointisoscatter`ppoints", "[", 
          RowBox[{
          "points\[Phi]", ",", "dr", ",", "maxr", ",", "\[CapitalSigma]t"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"exact1points", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Quiet", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"4", " ", "Pi", " ", 
               SuperscriptBox[
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "2"], " ", 
               RowBox[{"inf3Disopointisoscatter`\[Phi]exact2", "[", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "\[CapitalSigma]t", 
                 ",", "\[Alpha]", ",", "n"}], "]"}]}]}], "}"}], "]"}], "&"}], 
          " ", "/@", "plotpoints\[Phi]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"plot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ListPlot", "[", 
             RowBox[{"exact1points", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"4", " ", "Pi", " ", 
                  SuperscriptBox["r", "2"], " ", 
                  RowBox[{"\[Phi]", "[", 
                   RowBox[{"r", "|", "n"}], "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"logplot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListLogPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ListLogPlot", "[", 
             RowBox[{"exact1points", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"4", " ", "Pi", " ", 
                  SuperscriptBox["r", "2"], " ", 
                  RowBox[{"\[Phi]", "[", 
                   RowBox[{"r", "|", "n"}], "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"GraphicsGrid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"plot\[Phi]", ",", "logplot\[Phi]"}], "}"}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
           "\"\<Exact solution (2)\\nInfinite 3D medium, isotropic point \
source, isotropic scattering, n-th scattered fluence \[Phi][r|n], \[Alpha] = \
\>\"", "<>", 
            RowBox[{"ToString", "[", "\[Alpha]", "]"}], "<>", 
            "\"\<, \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[CapitalSigma]t", "]"}]}]}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
     "Text", "[", 
      "\"\<Uh oh!  Couldn't find MC data.  Try to evaluate this entire \
notebook and ensure the data path is setup correctly.\>\"", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0.9"}], "}"}], ",", 
     "inf3Disopointisoscatter`alphas"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[CapitalSigma]t", ",", "inf3Disopointisoscatter`muts"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "8"}], "}"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
        "NumberQ", "[", "inf3Disopointisoscatter`numcollorders", "]"}], ",", 
        "inf3Disopointisoscatter`numcollorders", ",", "1"}], "]"}], "]"}]}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.677637105519678*^9, 3.677637109350318*^9}, 
   3.677646100911153*^9, 3.6776488354325447`*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 8, $CellContext`\[Alpha]$$ = 
    0.9, $CellContext`\[CapitalSigma]t$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], 0.9}, {0.01, 0.1, 0.3, 0.5, 0.7, 0.8, 
      0.9, 0.95, 0.99, 0.999}}, {
      Hold[$CellContext`\[CapitalSigma]t$$], {1, 3}}, {{
       Hold[$CellContext`n$$], 8}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,
       14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
       32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
       50}}}, Typeset`size$$ = {720., {127., 127.75823975560672`}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Alpha]$1580143$$ = 
    0, $CellContext`\[CapitalSigma]t$1580144$$ = 
    False, $CellContext`n$1580145$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 8, $CellContext`\[Alpha]$$ = 
        0.9, $CellContext`\[CapitalSigma]t$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$1580143$$, 0], 
        Hold[$CellContext`\[CapitalSigma]t$$, \
$CellContext`\[CapitalSigma]t$1580144$$, False], 
        Hold[$CellContext`n$$, $CellContext`n$1580145$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      If[Length[inf3Disopointisoscatter`simulations] > 0, 
        Module[{$CellContext`data$, $CellContext`maxr$, $CellContext`dr$, \
$CellContext`points\[Phi]$, $CellContext`plotpoints\[Phi]$, \
$CellContext`logplot\[Phi]$, $CellContext`plot\[Phi]$, \
$CellContext`exact1points$, $CellContext`numorders$}, $CellContext`data$ = 
          Part[
            SelectFirst[
            inf3Disopointisoscatter`simulations, And[
             Part[#, 1] == $CellContext`\[Alpha]$$, 
              Part[#, 2] == $CellContext`\[CapitalSigma]t$$]& ], 
            3]; $CellContext`maxr$ = 
          Part[$CellContext`data$, 2, 5]; $CellContext`dr$ = 
          Part[$CellContext`data$, 2, 7]; $CellContext`numorders$ = 
          Part[$CellContext`data$, 2, 13]; $CellContext`points\[Phi]$ = 
          Part[$CellContext`data$, 
            9 + $CellContext`numorders$ + $CellContext`n$$ + 
            1]; $CellContext`plotpoints\[Phi]$ = 
          inf3Disopointisoscatter`ppoints[$CellContext`points\[Phi]$, \
$CellContext`dr$, $CellContext`maxr$, $CellContext`\[CapitalSigma]t$$]; \
$CellContext`exact1points$ = Map[Quiet[{
              Part[#, 1], 4 Pi Part[#, 1]^2 
              inf3Disopointisoscatter`\[Phi]exact2[
                
                Part[#, 
                 1], $CellContext`\[CapitalSigma]t$$, \
$CellContext`\[Alpha]$$, $CellContext`n$$]}]& , \
$CellContext`plotpoints\[Phi]$]; $CellContext`plot\[Phi]$ = Quiet[
            Show[
             
             ListPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             
             ListPlot[$CellContext`exact1points$, PlotRange -> All, Joined -> 
              True], Frame -> True, 
             FrameLabel -> {{4 Pi $CellContext`r^2 $CellContext`\[Phi][
                  Alternatives[$CellContext`r, $CellContext`n$$]], 
                Null}, {$CellContext`r, Null}}]]; $CellContext`logplot\[Phi]$ = 
          Quiet[
            Show[
             
             ListLogPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             
             ListLogPlot[$CellContext`exact1points$, PlotRange -> All, Joined -> 
              True], Frame -> True, 
             FrameLabel -> {{4 Pi $CellContext`r^2 $CellContext`\[Phi][
                  Alternatives[$CellContext`r, $CellContext`n$$]], 
                Null}, {$CellContext`r, Null}}]]; Show[
           
           GraphicsGrid[{{$CellContext`plot\[Phi]$, \
$CellContext`logplot\[Phi]$}}, ImageSize -> 1000], PlotLabel -> 
           StringJoin[
            "Exact solution (2)\nInfinite 3D medium, isotropic point source, \
isotropic scattering, n-th scattered fluence \[Phi][r|n], \[Alpha] = ", 
             ToString[$CellContext`\[Alpha]$$], 
             ", \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = ", 
             ToString[$CellContext`\[CapitalSigma]t$$]]]], 
        Text[
        "Uh oh!  Couldn't find MC data.  Try to evaluate this entire notebook \
and ensure the data path is setup correctly."]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, 0.9}, {0.01, 0.1, 0.3, 
         0.5, 0.7, 0.8, 0.9, 0.95, 0.99, 
         0.999}}, {$CellContext`\[CapitalSigma]t$$, {1, 
         3}}, {{$CellContext`n$$, 8}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 
         13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
         30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 
         47, 48, 49, 50}}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{756., {187., 190.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.67763711161556*^9, 3.677646102910976*^9, 
  3.6777206340074387`*^9, 3.680432261607065*^9, 3.6804333987829*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["N-th collided Fluence - Approximations", "Subsection",
 CellChangeTimes->{{3.649259702897419*^9, 3.64925971462465*^9}, {
  3.649893943340941*^9, 3.649893948401101*^9}, {3.650003121496348*^9, 
  3.650003125748569*^9}, {3.67763541090819*^9, 3.67763541224439*^9}, {
  3.677637193479684*^9, 3.677637204399332*^9}, {3.6777291790236*^9, 
  3.67772918059769*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "inf3Disopointisoscatter`simulations", "]"}], 
      ">", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "data", ",", "maxr", ",", "dr", ",", "points\[Phi]", ",", 
         "plotpoints\[Phi]", ",", "logplot\[Phi]", ",", "plot\[Phi]", ",", 
         "exact1points", ",", "numorders"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{
          RowBox[{"SelectFirst", "[", 
           RowBox[{"inf3Disopointisoscatter`simulations", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\[Alpha]"}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
               "\[CapitalSigma]t"}]}], "&"}]}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"maxr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "5"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "7"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"numorders", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "13"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"points\[Phi]", " ", "=", " ", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"9", "+", "numorders", "+", "n", "+", "1"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "divide", " ", "by", " ", "\[CapitalSigma]t", " ", "to", " ", 
          "convert", " ", "collision", " ", "density", " ", "into", " ", 
          "fluence"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"plotpoints\[Phi]", "=", 
         RowBox[{"inf3Disopointisoscatter`ppoints", "[", 
          RowBox[{
          "points\[Phi]", ",", "dr", ",", "maxr", ",", "\[CapitalSigma]t"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"seriesclassical", "=", 
         RowBox[{
          SuperscriptBox["\[Alpha]", "n"], 
          RowBox[{"SeriesCoefficient", "[", 
           RowBox[{
            RowBox[{"inf3Disopointisoscatter`\[Phi]Diffusion", "[", 
             RowBox[{"r", ",", "\[CapitalSigma]t", ",", "C"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"C", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"seriesG", "=", 
         RowBox[{
          SuperscriptBox["\[Alpha]", "n"], 
          RowBox[{"SeriesCoefficient", "[", 
           RowBox[{
            RowBox[{"inf3Disopointisoscatter`\[Phi]Grosjean", "[", 
             RowBox[{"r", ",", "\[CapitalSigma]t", ",", "C"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"C", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"plot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"4", " ", "Pi", " ", 
               SuperscriptBox["r", "2"], 
               RowBox[{"inf3Disopointisoscatter`\[Phi]Gaussian", "[", 
                RowBox[{
                "r", ",", "\[CapitalSigma]t", ",", "\[Alpha]", ",", "n"}], 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"r", ",", "0", ",", "maxr"}], "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"4", " ", "Pi", " ", 
               SuperscriptBox["r", "2"], "seriesclassical"}], ",", 
              RowBox[{"{", 
               RowBox[{"r", ",", "0", ",", "maxr"}], "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"4", " ", "Pi", " ", 
               SuperscriptBox["r", "2"], "seriesG"}], ",", 
              RowBox[{"{", 
               RowBox[{"r", ",", "0", ",", "maxr"}], "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "DotDashed"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"4", " ", "Pi", " ", 
                  SuperscriptBox["r", "2"], " ", 
                  RowBox[{"\[Phi]", "[", 
                   RowBox[{"r", "|", "n"}], "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"logplot\[Phi]", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListLogPlot", "[", 
             RowBox[{"plotpoints\[Phi]", ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"PointSize", "[", ".01", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"LogPlot", "[", 
             RowBox[{
              RowBox[{"4", " ", "Pi", " ", 
               SuperscriptBox["r", "2"], 
               RowBox[{"inf3Disopointisoscatter`\[Phi]Gaussian", "[", 
                RowBox[{
                "r", ",", "\[CapitalSigma]t", ",", "\[Alpha]", ",", "n"}], 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"r", ",", "0", ",", "maxr"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"LogPlot", "[", 
             RowBox[{
              RowBox[{"4", " ", "Pi", " ", 
               SuperscriptBox["r", "2"], "seriesclassical"}], ",", 
              RowBox[{"{", 
               RowBox[{"r", ",", "0", ",", "maxr"}], "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"LogPlot", "[", 
             RowBox[{
              RowBox[{"4", " ", "Pi", " ", 
               SuperscriptBox["r", "2"], "seriesG"}], ",", 
              RowBox[{"{", 
               RowBox[{"r", ",", "0", ",", "maxr"}], "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "DotDashed"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"4", " ", "Pi", " ", 
                  SuperscriptBox["r", "2"], " ", 
                  RowBox[{"\[Phi]", "[", 
                   RowBox[{"r", "|", "n"}], "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"r", ","}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]",
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"GraphicsGrid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"plot\[Phi]", ",", "logplot\[Phi]"}], "}"}], "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
           "\"\<Approximate solutions, Gaussian (thin) Classical Diffusion \
(Dashed) Grosjean (Dot-Dashed)\\nInfinite 3D medium, isotropic point source, \
isotropic scattering, n-th scattered fluence \[Phi][r|n], \[Alpha] = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[Alpha]", "]"}], "<>", 
            "\"\<, \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[CapitalSigma]t", "]"}]}]}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
     "Text", "[", 
      "\"\<Uh oh!  Couldn't find MC data.  Try to evaluate this entire \
notebook and ensure the data path is setup correctly.\>\"", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0.9"}], "}"}], ",", 
     "inf3Disopointisoscatter`alphas"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[CapitalSigma]t", ",", "inf3Disopointisoscatter`muts"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "3"}], "}"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
        "NumberQ", "[", "inf3Disopointisoscatter`numcollorders", "]"}], ",", 
        "inf3Disopointisoscatter`numcollorders", ",", "1"}], "]"}], "]"}]}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.677637105519678*^9, 3.677637109350318*^9}, 
   3.677646100911153*^9, 3.6776488354325447`*^9, {3.6777291913178062`*^9, 
   3.677729223187541*^9}, {3.6777292587463303`*^9, 3.6777292766859007`*^9}, {
   3.677729313878039*^9, 3.6777293393240213`*^9}, {3.677729482951395*^9, 
   3.677729566454194*^9}, {3.677729661018585*^9, 3.677729694039755*^9}, {
   3.6777297251204433`*^9, 3.677729786862499*^9}, {3.677729913231659*^9, 
   3.6777299353249807`*^9}, 3.677730877200514*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 3, $CellContext`\[Alpha]$$ = 
    0.9, $CellContext`\[CapitalSigma]t$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], 0.9}, {0.01, 0.1, 0.3, 0.5, 0.7, 0.8, 
      0.9, 0.95, 0.99, 0.999}}, {
      Hold[$CellContext`\[CapitalSigma]t$$], {1, 3}}, {{
       Hold[$CellContext`n$$], 3}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,
       14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
       32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
       50}}}, Typeset`size$$ = {720., {127., 127.75823975560672`}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Alpha]$1585416$$ = 
    0, $CellContext`\[CapitalSigma]t$1585417$$ = 
    False, $CellContext`n$1585418$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 3, $CellContext`\[Alpha]$$ = 
        0.9, $CellContext`\[CapitalSigma]t$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$1585416$$, 0], 
        Hold[$CellContext`\[CapitalSigma]t$$, \
$CellContext`\[CapitalSigma]t$1585417$$, False], 
        Hold[$CellContext`n$$, $CellContext`n$1585418$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      If[Length[inf3Disopointisoscatter`simulations] > 0, 
        Module[{$CellContext`data$, $CellContext`maxr$, $CellContext`dr$, \
$CellContext`points\[Phi]$, $CellContext`plotpoints\[Phi]$, \
$CellContext`logplot\[Phi]$, $CellContext`plot\[Phi]$, \
$CellContext`exact1points$, $CellContext`numorders$}, $CellContext`data$ = 
          Part[
            SelectFirst[
            inf3Disopointisoscatter`simulations, And[
             Part[#, 1] == $CellContext`\[Alpha]$$, 
              Part[#, 2] == $CellContext`\[CapitalSigma]t$$]& ], 
            3]; $CellContext`maxr$ = 
          Part[$CellContext`data$, 2, 5]; $CellContext`dr$ = 
          Part[$CellContext`data$, 2, 7]; $CellContext`numorders$ = 
          Part[$CellContext`data$, 2, 13]; $CellContext`points\[Phi]$ = 
          Part[$CellContext`data$, 
            9 + $CellContext`numorders$ + $CellContext`n$$ + 
            1]; $CellContext`plotpoints\[Phi]$ = 
          inf3Disopointisoscatter`ppoints[$CellContext`points\[Phi]$, \
$CellContext`dr$, $CellContext`maxr$, $CellContext`\[CapitalSigma]t$$]; \
$CellContext`seriesclassical = $CellContext`\[Alpha]$$^$CellContext`n$$ 
           SeriesCoefficient[
             
             inf3Disopointisoscatter`\[Phi]Diffusion[$CellContext`r, \
$CellContext`\[CapitalSigma]t$$, C], {
             C, 0, $CellContext`n$$}]; $CellContext`seriesG = $CellContext`\
\[Alpha]$$^$CellContext`n$$ SeriesCoefficient[
             
             inf3Disopointisoscatter`\[Phi]Grosjean[$CellContext`r, \
$CellContext`\[CapitalSigma]t$$, C], {
             C, 0, $CellContext`n$$}]; $CellContext`plot\[Phi]$ = Quiet[
            Show[
             
             ListPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             Plot[
             4 Pi $CellContext`r^2 
              inf3Disopointisoscatter`\[Phi]Gaussian[$CellContext`r, \
$CellContext`\[CapitalSigma]t$$, $CellContext`\[Alpha]$$, $CellContext`n$$], \
{$CellContext`r, 0, $CellContext`maxr$}, PlotRange -> All], 
             Plot[
             4 Pi $CellContext`r^2 $CellContext`seriesclassical, \
{$CellContext`r, 0, $CellContext`maxr$}, PlotRange -> All, PlotStyle -> 
              Dashed], 
             Plot[
             4 Pi $CellContext`r^2 $CellContext`seriesG, {$CellContext`r, 
               0, $CellContext`maxr$}, PlotRange -> All, PlotStyle -> 
              DotDashed], Frame -> True, 
             FrameLabel -> {{4 Pi $CellContext`r^2 $CellContext`\[Phi][
                  Alternatives[$CellContext`r, $CellContext`n$$]], 
                Null}, {$CellContext`r, Null}}]]; $CellContext`logplot\[Phi]$ = 
          Quiet[
            Show[
             
             ListLogPlot[$CellContext`plotpoints\[Phi]$, PlotRange -> All, 
              PlotStyle -> PointSize[0.01]], 
             LogPlot[
             4 Pi $CellContext`r^2 
              inf3Disopointisoscatter`\[Phi]Gaussian[$CellContext`r, \
$CellContext`\[CapitalSigma]t$$, $CellContext`\[Alpha]$$, $CellContext`n$$], \
{$CellContext`r, 0, $CellContext`maxr$}], 
             LogPlot[
             4 Pi $CellContext`r^2 $CellContext`seriesclassical, \
{$CellContext`r, 0, $CellContext`maxr$}, PlotRange -> All, PlotStyle -> 
              Dashed], 
             LogPlot[
             4 Pi $CellContext`r^2 $CellContext`seriesG, {$CellContext`r, 
               0, $CellContext`maxr$}, PlotRange -> All, PlotStyle -> 
              DotDashed], Frame -> True, 
             FrameLabel -> {{4 Pi $CellContext`r^2 $CellContext`\[Phi][
                  Alternatives[$CellContext`r, $CellContext`n$$]], 
                Null}, {$CellContext`r, Null}}]]; Show[
           
           GraphicsGrid[{{$CellContext`plot\[Phi]$, \
$CellContext`logplot\[Phi]$}}, ImageSize -> 1000], PlotLabel -> 
           StringJoin[
            "Approximate solutions, Gaussian (thin) Classical Diffusion \
(Dashed) Grosjean (Dot-Dashed)\nInfinite 3D medium, isotropic point source, \
isotropic scattering, n-th scattered fluence \[Phi][r|n], \[Alpha] = ", 
             ToString[$CellContext`\[Alpha]$$], 
             ", \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = ", 
             ToString[$CellContext`\[CapitalSigma]t$$]]]], 
        Text[
        "Uh oh!  Couldn't find MC data.  Try to evaluate this entire notebook \
and ensure the data path is setup correctly."]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, 0.9}, {0.01, 0.1, 0.3, 
         0.5, 0.7, 0.8, 0.9, 0.95, 0.99, 
         0.999}}, {$CellContext`\[CapitalSigma]t$$, {1, 
         3}}, {{$CellContext`n$$, 3}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 
         13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
         30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 
         47, 48, 49, 50}}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{756., {187., 190.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.67763711161556*^9, 3.677646102910976*^9, 3.6777206340074387`*^9, {
   3.677729271825474*^9, 3.677729277547893*^9}, 3.677729340402296*^9, 
   3.677729566964229*^9, 3.6777296020409393`*^9, {3.677729664821155*^9, 
   3.677729694798265*^9}, 3.677729756440464*^9, 3.6777297873599653`*^9, {
   3.677729924294672*^9, 3.677729935893814*^9}, 3.680432264962227*^9, 
   3.6804334011649218`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compare moments of \[Phi]", "Subsection",
 CellChangeTimes->{{3.650041676191098*^9, 3.6500416791649113`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "inf3Disopointisoscatter`simulations", "]"}], 
      ">", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "data", ",", "nummoments", ",", "\[Phi]moments", ",", "ks", ",", 
         "analytic", ",", "j"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{
          RowBox[{"SelectFirst", "[", 
           RowBox[{"inf3Disopointisoscatter`simulations", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\[Alpha]"}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
               "\[CapitalSigma]t"}]}], "&"}]}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"nummoments", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "15"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Phi]moments", "=", 
         RowBox[{"N", "[", 
          RowBox[{"{", 
           FractionBox[
            RowBox[{"data", "[", 
             RowBox[{"[", "6", "]"}], "]"}], "\[CapitalSigma]t"], "}"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ks", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"k", ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "0", ",", 
             RowBox[{"nummoments", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"analytic", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"inf3Disopointisoscatter`\[Phi]m", "[", 
            RowBox[{"\[Alpha]", ",", "\[CapitalSigma]t", ",", "k"}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "ks"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"j", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "ks", "}"}], ",", 
           RowBox[{"{", "analytic", "}"}], ",", "\[Phi]moments"}], "]"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"TableForm", "[", "\[IndentingNewLine]", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
             "\"\<k\>\"", ",", "\"\<analytic\>\"", ",", "\"\<MC\>\""}], "}"}],
             "}"}], ",", 
           RowBox[{"Transpose", "[", "j", "]"}]}], "]"}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
     "Text", "[", 
      "\"\<Uh oh!  Couldn't find MC data.  Try to evaluate this entire \
notebook and ensure the data path is setup correctly.\>\"", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0.95"}], "}"}], ",", 
     "inf3Disopointisoscatter`alphas"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalSigma]t", ",", "3"}], "}"}], ",", 
     "inf3Disopointisoscatter`muts"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.650041688841194*^9, 3.650041705608346*^9}, 
   3.650042056240006*^9, {3.650042170542794*^9, 3.65004232530101*^9}, {
   3.650042374114872*^9, 3.650042374646285*^9}, {3.6500426332834272`*^9, 
   3.65004266394592*^9}, {3.652044486040279*^9, 3.652044486152093*^9}, {
   3.67763725457906*^9, 3.677637267112452*^9}, {3.677637333582708*^9, 
   3.677637347349415*^9}, {3.677637500006989*^9, 3.677637500319003*^9}, {
   3.677637533307754*^9, 3.677637589396675*^9}, {3.677637636411521*^9, 
   3.6776376711415443`*^9}, {3.677637710297546*^9, 3.67763771052069*^9}, {
   3.677637740522793*^9, 3.677637802639085*^9}, {3.677637867084639*^9, 
   3.6776378915638523`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Alpha]$$ = 
    0.95, $CellContext`\[CapitalSigma]t$$ = 3, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], 0.95}, {0.01, 0.1, 0.3, 0.5, 0.7, 0.8, 
      0.9, 0.95, 0.99, 0.999}}, {{
       Hold[$CellContext`\[CapitalSigma]t$$], 3}, {1, 3}}}, Typeset`size$$ = {
    131., {28.86, 31.86}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Alpha]$1586319$$ = 
    0, $CellContext`\[CapitalSigma]t$1586320$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Alpha]$$ = 
        0.95, $CellContext`\[CapitalSigma]t$$ = 3}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$1586319$$, 0], 
        Hold[$CellContext`\[CapitalSigma]t$$, \
$CellContext`\[CapitalSigma]t$1586320$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      If[Length[inf3Disopointisoscatter`simulations] > 0, 
        Module[{$CellContext`data$, $CellContext`nummoments$, $CellContext`\
\[Phi]moments$, $CellContext`ks$, $CellContext`analytic$, $CellContext`j$}, \
$CellContext`data$ = Part[
            SelectFirst[
            inf3Disopointisoscatter`simulations, And[
             Part[#, 1] == $CellContext`\[Alpha]$$, 
              Part[#, 2] == $CellContext`\[CapitalSigma]t$$]& ], 
            3]; $CellContext`nummoments$ = 
          Part[$CellContext`data$, 2, 15]; $CellContext`\[Phi]moments$ = 
          N[{Part[$CellContext`data$, 
               6]/$CellContext`\[CapitalSigma]t$$}]; $CellContext`ks$ = 
          Table[$CellContext`k, {$CellContext`k, 0, $CellContext`nummoments$ - 
             1}]; $CellContext`analytic$ = Table[
            
            inf3Disopointisoscatter`\[Phi]m[$CellContext`\[Alpha]$$, \
$CellContext`\[CapitalSigma]t$$, $CellContext`k], {$CellContext`k, \
$CellContext`ks$}]; $CellContext`j$ = 
          Join[{$CellContext`ks$}, {$CellContext`analytic$}, $CellContext`\
\[Phi]moments$]; TableForm[
           Join[{{"k", "analytic", "MC"}}, 
            Transpose[$CellContext`j$]]]], 
        Text[
        "Uh oh!  Couldn't find MC data.  Try to evaluate this entire notebook \
and ensure the data path is setup correctly."]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, 0.95}, {0.01, 0.1, 0.3, 
         0.5, 0.7, 0.8, 0.9, 0.95, 0.99, 
         0.999}}, {{$CellContext`\[CapitalSigma]t$$, 3}, {1, 3}}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{167., {76., 79.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.650042202724057*^9, 3.65004232551412*^9}, 
   3.650042413458701*^9, {3.650042639813974*^9, 3.6500426642700167`*^9}, 
   3.650052062679365*^9, 3.6520446020383577`*^9, 3.677637268965001*^9, 
   3.6776373604749203`*^9, 3.6776375007983713`*^9, 3.677637534469211*^9, {
   3.677637569181141*^9, 3.6776375899244957`*^9}, {3.677637639189211*^9, 
   3.677637671449956*^9}, 3.677637710742359*^9, {3.677637741030158*^9, 
   3.677637802788492*^9}, {3.677637871553672*^9, 3.67763789195415*^9}, 
   3.680432270547928*^9, 3.6804334017213373`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["n-th collided moments of \[Phi]", "Subsection",
 CellChangeTimes->{{3.646262916178207*^9, 3.646262920832403*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "inf3Disopointisoscatter`simulations", "]"}], 
      ">", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "data", ",", "nummoments", ",", "\[Phi]moments", ",", "ks", ",", 
         "analytic", ",", "j"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{
          RowBox[{"SelectFirst", "[", 
           RowBox[{"inf3Disopointisoscatter`simulations", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\[Alpha]"}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
               "\[CapitalSigma]t"}]}], "&"}]}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"nummoments", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "15"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Phi]moments", "=", 
         RowBox[{"N", "[", 
          FractionBox[
           RowBox[{"{", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"9", "+", "n"}], "]"}], "]"}], "}"}], 
           "\[CapitalSigma]t"], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ks", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"k", ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "0", ",", 
             RowBox[{"nummoments", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"analytic", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"inf3Disopointisoscatter`\[Phi]m", "[", 
            RowBox[{"\[Alpha]", ",", "\[CapitalSigma]t", ",", "k", ",", "n"}],
             "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "ks"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"j", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "ks", "}"}], ",", 
           RowBox[{"{", "analytic", "}"}], ",", "\[Phi]moments"}], "]"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"TableForm", "[", "\[IndentingNewLine]", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
             "\"\<k\>\"", ",", "\"\<analytic\>\"", ",", "\"\<MC\>\""}], "}"}],
             "}"}], ",", 
           RowBox[{"Transpose", "[", "j", "]"}]}], "]"}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
     "Text", "[", 
      "\"\<Uh oh!  Couldn't find MC data.  Try to evaluate this entire \
notebook and ensure the data path is setup correctly.\>\"", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0.95"}], "}"}], ",", 
     "inf3Disopointisoscatter`alphas"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalSigma]t", ",", "3"}], "}"}], ",", 
     "inf3Disopointisoscatter`muts"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "11"}], "}"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
        "NumberQ", "[", "inf3Disopointisoscatter`numcollorders", "]"}], ",", 
        "inf3Disopointisoscatter`numcollorders", ",", "1"}], "]"}], "]"}]}], 
    "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.677637984177693*^9, 3.677638024055588*^9}, 
   3.6776380618215*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 11, $CellContext`\[Alpha]$$ = 
    0.95, $CellContext`\[CapitalSigma]t$$ = 3, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], 0.95}, {0.01, 0.1, 0.3, 0.5, 0.7, 0.8, 
      0.9, 0.95, 0.99, 0.999}}, {{
       Hold[$CellContext`\[CapitalSigma]t$$], 3}, {1, 3}}, {{
       Hold[$CellContext`n$$], 11}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 
      13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
      31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
      49, 50}}}, Typeset`size$$ = {136., {26.86, 29.86}}, Typeset`update$$ = 
    0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Alpha]$1586347$$ = 
    0, $CellContext`\[CapitalSigma]t$1586348$$ = 
    False, $CellContext`n$1586349$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 11, $CellContext`\[Alpha]$$ = 
        0.95, $CellContext`\[CapitalSigma]t$$ = 3}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$1586347$$, 0], 
        Hold[$CellContext`\[CapitalSigma]t$$, \
$CellContext`\[CapitalSigma]t$1586348$$, False], 
        Hold[$CellContext`n$$, $CellContext`n$1586349$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      If[Length[inf3Disopointisoscatter`simulations] > 0, 
        Module[{$CellContext`data$, $CellContext`nummoments$, $CellContext`\
\[Phi]moments$, $CellContext`ks$, $CellContext`analytic$, $CellContext`j$}, \
$CellContext`data$ = Part[
            SelectFirst[
            inf3Disopointisoscatter`simulations, And[
             Part[#, 1] == $CellContext`\[Alpha]$$, 
              Part[#, 2] == $CellContext`\[CapitalSigma]t$$]& ], 
            3]; $CellContext`nummoments$ = 
          Part[$CellContext`data$, 2, 15]; $CellContext`\[Phi]moments$ = N[{
              
              Part[$CellContext`data$, 
               9 + $CellContext`n$$]}/$CellContext`\[CapitalSigma]t$$]; \
$CellContext`ks$ = 
          Table[$CellContext`k, {$CellContext`k, 0, $CellContext`nummoments$ - 
             1}]; $CellContext`analytic$ = Table[
            
            inf3Disopointisoscatter`\[Phi]m[$CellContext`\[Alpha]$$, \
$CellContext`\[CapitalSigma]t$$, $CellContext`k, $CellContext`n$$], \
{$CellContext`k, $CellContext`ks$}]; $CellContext`j$ = 
          Join[{$CellContext`ks$}, {$CellContext`analytic$}, $CellContext`\
\[Phi]moments$]; TableForm[
           Join[{{"k", "analytic", "MC"}}, 
            Transpose[$CellContext`j$]]]], 
        Text[
        "Uh oh!  Couldn't find MC data.  Try to evaluate this entire notebook \
and ensure the data path is setup correctly."]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, 0.95}, {0.01, 0.1, 0.3, 
         0.5, 0.7, 0.8, 0.9, 0.95, 0.99, 
         0.999}}, {{$CellContext`\[CapitalSigma]t$$, 3}, {1, 
         3}}, {{$CellContext`n$$, 11}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
          13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
         30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 
         47, 48, 49, 50}}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{172., {88., 91.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.6776380246729193`*^9, 3.67763806251204*^9, 
  3.6804322709888487`*^9, 3.6804334018540497`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Angular Distributions", "Subsection",
 CellChangeTimes->{{3.677649484609247*^9, 3.677649491704719*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "inf3Disopointisoscatter`simulations", "]"}], 
      ">", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "data", ",", "numorders", ",", "pointsu", ",", "plotpointsu", ",", 
         "du", ",", "r", ",", "dr"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{
          RowBox[{"SelectFirst", "[", 
           RowBox[{"inf3Disopointisoscatter`simulations", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\[Alpha]"}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
               "\[CapitalSigma]t"}]}], "&"}]}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"numorders", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "13"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"du", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "9"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "7"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"pointsu", " ", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"9", "+", 
            RowBox[{"2", " ", "numorders"}], "+", "n"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"r", " ", "=", " ", 
         RowBox[{
          RowBox[{"dr", " ", "*", " ", "n"}], "-", 
          RowBox[{"0.5", " ", "dr"}]}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "divide", " ", "by", " ", "\[CapitalSigma]t", " ", "to", " ", 
          "convert", " ", "collision", " ", "density", " ", "into", " ", 
          "fluence"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"plotpointsu", "=", 
         RowBox[{"inf3Disopointisoscatter`ppointsu", "[", 
          RowBox[{"pointsu", ",", "du", ",", "\[CapitalSigma]t"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ListPlot", "[", 
           RowBox[{"plotpointsu", ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["Pi", "2"], " ", 
                  SuperscriptBox["r", "2"], " ", 
                  RowBox[{"L", "[", 
                   RowBox[{"r", ",", "u"}], "]"}]}], ","}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"u", ","}], "}"}]}], "}"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"4", " ", "Pi", " ", 
             SuperscriptBox["r", "2"], " ", "Pi", " ", 
             RowBox[{"inf3Disopointisoscatter`Ldiffusion", "[", 
              RowBox[{
              "r", ",", "u", ",", "\[CapitalSigma]t", ",", "\[Alpha]"}], 
              "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"u", ",", 
              RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
           "\"\<Infinite 3D Medium, isotropic point source, isotropic \
scattering\\nAngular distribution: classical diffusion approximation\\n 4 \
\!\(\*SuperscriptBox[\(\[Pi]\), \(2\)]\) \!\(\*SuperscriptBox[\(r\), \(2\)]\) \
L[r,u], r = \>\"", "<>", 
            RowBox[{"ToString", "[", "r", "]"}], "<>", 
            "\"\<, \[Alpha] = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[Alpha]", "]"}], "<>", 
            "\"\<, \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = \>\"", "<>", 
            RowBox[{"ToString", "[", "\[CapitalSigma]t", "]"}]}]}]}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "Text", "[", 
      "\"\<Uh oh!  Couldn't find MC data.  Try to evaluate this entire \
notebook and ensure the data path is setup correctly.\>\"", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0.9"}], "}"}], ",", 
     "inf3Disopointisoscatter`alphas"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalSigma]t", ",", "1"}], "}"}], ",", 
     "inf3Disopointisoscatter`muts"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "36"}], "}"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "inf3Disopointisoscatter`numr", "]"}], ",", 
        "inf3Disopointisoscatter`numr", ",", "1"}], "]"}], "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.677649498628545*^9, 3.67764956277763*^9}, {
   3.677649962469734*^9, 3.677649963694273*^9}, {3.677650117261801*^9, 
   3.677650122849861*^9}, {3.677650319468528*^9, 3.677650322041355*^9}, {
   3.6776504756631613`*^9, 3.677650476046736*^9}, {3.677650514750444*^9, 
   3.677650526324561*^9}, {3.677696676480235*^9, 3.67769669874019*^9}, {
   3.6776967587562933`*^9, 3.6776967594508553`*^9}, 3.677696886770278*^9, {
   3.677696966560349*^9, 3.677696978730489*^9}, {3.677721728454999*^9, 
   3.677721728741879*^9}, 3.677721789581545*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 36, $CellContext`\[Alpha]$$ = 
    0.9, $CellContext`\[CapitalSigma]t$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], 0.9}, {0.01, 0.1, 0.3, 0.5, 0.7, 0.8, 
      0.9, 0.95, 0.99, 0.999}}, {{
       Hold[$CellContext`\[CapitalSigma]t$$], 1}, {1, 3}}, {{
       Hold[$CellContext`n$$], 36}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 
      13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
      31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
      49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 
      67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 
      85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
      102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 
      116, 117, 118, 119, 120, 121, 122, 123, 124, 125}}}, Typeset`size$$ = {
    259.2, {98., 98.43046051421487}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Alpha]$1586379$$ = 
    0, $CellContext`\[CapitalSigma]t$1586380$$ = 
    False, $CellContext`n$1586381$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 36, $CellContext`\[Alpha]$$ = 
        0.9, $CellContext`\[CapitalSigma]t$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$1586379$$, 0], 
        Hold[$CellContext`\[CapitalSigma]t$$, \
$CellContext`\[CapitalSigma]t$1586380$$, False], 
        Hold[$CellContext`n$$, $CellContext`n$1586381$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      If[Length[inf3Disopointisoscatter`simulations] > 0, 
        Module[{$CellContext`data$, $CellContext`numorders$, \
$CellContext`pointsu$, $CellContext`plotpointsu$, $CellContext`du$, \
$CellContext`r$, $CellContext`dr$}, $CellContext`data$ = Part[
            SelectFirst[
            inf3Disopointisoscatter`simulations, And[
             Part[#, 1] == $CellContext`\[Alpha]$$, 
              Part[#, 2] == $CellContext`\[CapitalSigma]t$$]& ], 
            3]; $CellContext`numorders$ = 
          Part[$CellContext`data$, 2, 13]; $CellContext`du$ = 
          Part[$CellContext`data$, 2, 9]; $CellContext`dr$ = 
          Part[$CellContext`data$, 2, 7]; $CellContext`pointsu$ = 
          Part[$CellContext`data$, 9 + 
            2 $CellContext`numorders$ + $CellContext`n$$]; $CellContext`r$ = \
$CellContext`dr$ $CellContext`n$$ - 
           0.5 $CellContext`dr$; $CellContext`plotpointsu$ = 
          inf3Disopointisoscatter`ppointsu[$CellContext`pointsu$, \
$CellContext`du$, $CellContext`\[CapitalSigma]t$$]; Show[
           
           ListPlot[$CellContext`plotpointsu$, PlotRange -> All, Frame -> 
            True, FrameLabel -> {{
              4 Pi^2 $CellContext`r$^2 $CellContext`L[$CellContext`r$, \
$CellContext`u], Null}, {$CellContext`u, Null}}], 
           Plot[
           4 Pi $CellContext`r$^2 Pi 
            inf3Disopointisoscatter`Ldiffusion[$CellContext`r$, \
$CellContext`u, $CellContext`\[CapitalSigma]t$$, $CellContext`\[Alpha]$$], \
{$CellContext`u, -1, 1}, PlotRange -> All], PlotLabel -> 
           StringJoin[
            "Infinite 3D Medium, isotropic point source, isotropic scattering\
\nAngular distribution: classical diffusion approximation\n 4 \
\!\(\*SuperscriptBox[\(\[Pi]\), \(2\)]\) \!\(\*SuperscriptBox[\(r\), \(2\)]\) \
L[r,u], r = ", 
             ToString[$CellContext`r$], ", \[Alpha] = ", 
             ToString[$CellContext`\[Alpha]$$], 
             ", \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = ", 
             ToString[$CellContext`\[CapitalSigma]t$$]]]], 
        Text[
        "Uh oh!  Couldn't find MC data.  Try to evaluate this entire notebook \
and ensure the data path is setup correctly."]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, 0.9}, {0.01, 0.1, 0.3, 
         0.5, 0.7, 0.8, 0.9, 0.95, 0.99, 
         0.999}}, {{$CellContext`\[CapitalSigma]t$$, 1}, {1, 
         3}}, {{$CellContext`n$$, 36}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
          13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
         30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 
         47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 
         64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 
         81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
         98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 
         112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 
         125}}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{296., {158., 161.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.677649526863483*^9, 3.677649546342675*^9}, {
   3.6776499529334393`*^9, 3.6776499640461693`*^9}, {3.677650117834341*^9, 
   3.677650123521813*^9}, 3.6776503229711018`*^9, {3.677650466139625*^9, 
   3.677650476455285*^9}, {3.677650515508211*^9, 3.67765052670763*^9}, {
   3.677696678730055*^9, 3.67769669905552*^9}, 3.6776967597955627`*^9, 
   3.677696887533321*^9, {3.67769697650147*^9, 3.677696979070036*^9}, 
   3.677721729285989*^9, 3.677721790180634*^9, 3.6804322714312563`*^9, 
   3.680433402161603*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Angular Distribution: Integral of Grosjean\[CloseCurlyQuote]s Diffusion \
Approximation\
\>", "Subsection",
 CellChangeTimes->{{3.677696645659895*^9, 3.6776966671456823`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "inf3Disopointisoscatter`simulations", "]"}], 
      ">", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "data", ",", "numorders", ",", "pointsu", ",", "plotpointsu", ",", 
         "du", ",", "r", ",", "dr"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{
          RowBox[{"SelectFirst", "[", 
           RowBox[{"inf3Disopointisoscatter`simulations", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "\[Alpha]"}], "&&", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
               "\[CapitalSigma]t"}]}], "&"}]}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"numorders", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "13"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"du", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "9"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dr", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "7"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"pointsu", " ", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"9", "+", 
            RowBox[{"2", " ", "numorders"}], "+", "n"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"r", " ", "=", " ", 
         RowBox[{
          RowBox[{"dr", " ", "*", " ", "n"}], "-", 
          RowBox[{"0.5", " ", "dr"}]}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "divide", " ", "by", " ", "\[CapitalSigma]t", " ", "to", " ", 
          "convert", " ", "collision", " ", "density", " ", "into", " ", 
          "fluence"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"plotpointsu", "=", 
         RowBox[{"inf3Disopointisoscatter`ppointsu", "[", 
          RowBox[{"pointsu", ",", "du", ",", "\[CapitalSigma]t"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"pp", "=", 
         RowBox[{"Show", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ListPlot", "[", 
            RowBox[{"plotpointsu", ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
             RowBox[{"FrameLabel", "->", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"4", " ", 
                   SuperscriptBox["Pi", "2"], " ", 
                   SuperscriptBox["r", "2"], " ", 
                   RowBox[{"L", "[", 
                    RowBox[{"r", ",", "u"}], "]"}]}], ","}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"u", ","}], "}"}]}], "}"}]}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"4", " ", "Pi", " ", 
              SuperscriptBox["r", "2"], " ", "Pi", "  ", 
              RowBox[{"inf3Disopointisoscatter`Lintegral", "[", 
               RowBox[{
               "r", ",", "u", ",", "\[CapitalSigma]t", ",", "\[Alpha]", ",", 
                "inf3Disopointisoscatter`\[Phi]Grosjean"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"u", ",", 
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]",
             "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"PlotLabel", "->", 
            RowBox[{
            "\"\<Infinite 3D Medium, isotropic point source, isotropic \
scattering\\nAngular distribution: Integral of Grosjean diffusion \
approximation\\n 4 \!\(\*SuperscriptBox[\(\[Pi]\), \(2\)]\) \
\!\(\*SuperscriptBox[\(r\), \(2\)]\) L[r,u], r = \>\"", "<>", 
             RowBox[{"ToString", "[", "r", "]"}], "<>", 
             "\"\<, \[Alpha] = \>\"", "<>", 
             RowBox[{"ToString", "[", "\[Alpha]", "]"}], "<>", 
             "\"\<, \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = \>\"", 
             "<>", 
             RowBox[{"ToString", "[", "\[CapitalSigma]t", "]"}]}]}]}], 
          "\[IndentingNewLine]", "]"}]}]}]}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "Text", "[", 
      "\"\<Uh oh!  Couldn't find MC data.  Try to evaluate this entire \
notebook and ensure the data path is setup correctly.\>\"", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0.9"}], "}"}], ",", 
     "inf3Disopointisoscatter`alphas"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalSigma]t", ",", "1"}], "}"}], ",", 
     "inf3Disopointisoscatter`muts"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "36"}], "}"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "inf3Disopointisoscatter`numr", "]"}], ",", 
        "inf3Disopointisoscatter`numr", ",", "1"}], "]"}], "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.677696914856629*^9, {3.6776969460972013`*^9, 3.6776969550345793`*^9}, 
   3.6777217957191133`*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 36, $CellContext`\[Alpha]$$ = 
    0.9, $CellContext`\[CapitalSigma]t$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], 0.9}, {0.01, 0.1, 0.3, 0.5, 0.7, 0.8, 
      0.9, 0.95, 0.99, 0.999}}, {{
       Hold[$CellContext`\[CapitalSigma]t$$], 1}, {1, 3}}, {{
       Hold[$CellContext`n$$], 36}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 
      13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
      31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
      49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 
      67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 
      85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
      102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 
      116, 117, 118, 119, 120, 121, 122, 123, 124, 125}}}, Typeset`size$$ = {
    259.2, {98., 98.43046051421487}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Alpha]$1586448$$ = 
    0, $CellContext`\[CapitalSigma]t$1586449$$ = 
    False, $CellContext`n$1586450$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 36, $CellContext`\[Alpha]$$ = 
        0.9, $CellContext`\[CapitalSigma]t$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$1586448$$, 0], 
        Hold[$CellContext`\[CapitalSigma]t$$, \
$CellContext`\[CapitalSigma]t$1586449$$, False], 
        Hold[$CellContext`n$$, $CellContext`n$1586450$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      If[Length[inf3Disopointisoscatter`simulations] > 0, 
        Module[{$CellContext`data$, $CellContext`numorders$, \
$CellContext`pointsu$, $CellContext`plotpointsu$, $CellContext`du$, \
$CellContext`r$, $CellContext`dr$}, $CellContext`data$ = Part[
            SelectFirst[
            inf3Disopointisoscatter`simulations, And[
             Part[#, 1] == $CellContext`\[Alpha]$$, 
              Part[#, 2] == $CellContext`\[CapitalSigma]t$$]& ], 
            3]; $CellContext`numorders$ = 
          Part[$CellContext`data$, 2, 13]; $CellContext`du$ = 
          Part[$CellContext`data$, 2, 9]; $CellContext`dr$ = 
          Part[$CellContext`data$, 2, 7]; $CellContext`pointsu$ = 
          Part[$CellContext`data$, 9 + 
            2 $CellContext`numorders$ + $CellContext`n$$]; $CellContext`r$ = \
$CellContext`dr$ $CellContext`n$$ - 
           0.5 $CellContext`dr$; $CellContext`plotpointsu$ = 
          inf3Disopointisoscatter`ppointsu[$CellContext`pointsu$, \
$CellContext`du$, $CellContext`\[CapitalSigma]t$$]; $CellContext`pp = Show[
            
            ListPlot[$CellContext`plotpointsu$, PlotRange -> All, Frame -> 
             True, FrameLabel -> {{
               4 Pi^2 $CellContext`r$^2 $CellContext`L[$CellContext`r$, \
$CellContext`u], Null}, {$CellContext`u, Null}}], 
            Plot[
            4 Pi $CellContext`r$^2 Pi 
             inf3Disopointisoscatter`Lintegral[$CellContext`r$, \
$CellContext`u, $CellContext`\[CapitalSigma]t$$, $CellContext`\[Alpha]$$, 
               inf3Disopointisoscatter`\[Phi]Grosjean], {$CellContext`u, -1, 
              1}, PlotRange -> All], PlotLabel -> 
            StringJoin[
             "Infinite 3D Medium, isotropic point source, isotropic \
scattering\nAngular distribution: Integral of Grosjean diffusion \
approximation\n 4 \!\(\*SuperscriptBox[\(\[Pi]\), \(2\)]\) \
\!\(\*SuperscriptBox[\(r\), \(2\)]\) L[r,u], r = ", 
              ToString[$CellContext`r$], ", \[Alpha] = ", 
              ToString[$CellContext`\[Alpha]$$], 
              ", \!\(\*SubscriptBox[\(\[CapitalSigma]\), \(t\)]\) = ", 
              ToString[$CellContext`\[CapitalSigma]t$$]]]], 
        Text[
        "Uh oh!  Couldn't find MC data.  Try to evaluate this entire notebook \
and ensure the data path is setup correctly."]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, 0.9}, {0.01, 0.1, 0.3, 
         0.5, 0.7, 0.8, 0.9, 0.95, 0.99, 
         0.999}}, {{$CellContext`\[CapitalSigma]t$$, 1}, {1, 
         3}}, {{$CellContext`n$$, 36}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
          13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
         30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 
         47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 
         64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 
         81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
         98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 
         112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 
         125}}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{296., {158., 161.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6776969159345217`*^9, {3.677696948052737*^9, 3.6776969561094913`*^9}, 
   3.677721797282851*^9, 3.6804322719519*^9, 3.680433402287985*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{953, 1045},
WindowMargins->{{Automatic, 206}, {Automatic, 25}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 397, 7, 148, "Title"],
Cell[980, 31, 113, 1, 51, "Subtitle"],
Cell[1096, 34, 530, 10, 129, "Text"],
Cell[CellGroupData[{
Cell[1651, 48, 143, 2, 64, "Section"],
Cell[1797, 52, 253, 5, 49, "Text"],
Cell[2053, 59, 122, 2, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2212, 66, 93, 1, 64, "Section"],
Cell[2308, 69, 145268, 2387, 309, "Text"],
Cell[147579, 2458, 477, 9, 87, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148093, 2472, 91, 1, 64, "Section"],
Cell[148187, 2475, 515, 15, 60, "Input"],
Cell[CellGroupData[{
Cell[148727, 2494, 103, 1, 44, "Subsection"],
Cell[148833, 2497, 845, 27, 49, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[149727, 2530, 103, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[149855, 2535, 159, 2, 44, "Subsection"],
Cell[150017, 2539, 384, 13, 50, "Input"],
Cell[150404, 2554, 722, 21, 49, "Input"],
Cell[151129, 2577, 407, 14, 46, "Input"],
Cell[151539, 2593, 209, 6, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151785, 2604, 260, 3, 44, "Subsection"],
Cell[152048, 2609, 94, 1, 30, "Text"],
Cell[152145, 2612, 1123, 28, 69, "Input"],
Cell[153271, 2642, 100, 1, 30, "Text"],
Cell[153374, 2645, 1707, 39, 71, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155118, 2689, 119, 1, 44, "Subsection"],
Cell[155240, 2692, 784, 20, 53, "Input"],
Cell[156027, 2714, 755, 20, 53, "Input"],
Cell[156785, 2736, 113, 1, 30, "Text"],
Cell[156901, 2739, 1258, 34, 66, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158196, 2778, 309, 4, 44, "Subsection"],
Cell[158508, 2784, 146, 2, 30, "Text"],
Cell[158657, 2788, 1729, 42, 104, "Input"],
Cell[160389, 2832, 154, 2, 30, "Text"],
Cell[160546, 2836, 1714, 34, 71, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162297, 2875, 110, 1, 44, "Subsection"],
Cell[162410, 2878, 1020, 29, 76, "Input"],
Cell[163433, 2909, 1787, 49, 68, "Input"],
Cell[165223, 2960, 892, 26, 76, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166152, 2991, 95, 1, 44, "Subsection"],
Cell[166250, 2994, 1421, 39, 120, "Input"],
Cell[CellGroupData[{
Cell[167696, 3037, 439, 11, 28, "Input"],
Cell[168138, 3050, 1739, 52, 146, "Output"]
}, Open  ]],
Cell[169892, 3105, 1300, 36, 85, "Input"],
Cell[CellGroupData[{
Cell[171217, 3145, 424, 10, 28, "Input"],
Cell[171644, 3157, 1917, 58, 142, "Output"]
}, Open  ]],
Cell[173576, 3218, 120, 1, 30, "Text"],
Cell[173699, 3221, 1793, 55, 189, "Input"],
Cell[175495, 3278, 551, 14, 66, "Input"],
Cell[CellGroupData[{
Cell[176071, 3296, 530, 13, 28, "Input"],
Cell[176604, 3311, 2002, 60, 134, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[178655, 3377, 121, 1, 44, "Subsection"],
Cell[178779, 3380, 815, 21, 55, "Input"],
Cell[CellGroupData[{
Cell[179619, 3405, 396, 9, 28, "Input"],
Cell[180018, 3416, 437, 12, 54, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[180504, 3434, 126, 1, 44, "Subsection"],
Cell[180633, 3437, 1263, 32, 60, "Input"],
Cell[CellGroupData[{
Cell[181921, 3473, 437, 10, 28, "Input"],
Cell[182361, 3485, 765, 23, 79, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[183175, 3514, 157, 2, 44, "Subsection"],
Cell[183335, 3518, 613, 18, 46, "Text"],
Cell[183951, 3538, 1020, 28, 66, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185008, 3571, 131, 1, 44, "Subsection"],
Cell[185142, 3574, 1616, 38, 80, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[186807, 3618, 197, 3, 64, "Section"],
Cell[187007, 3623, 1024, 28, 46, "Input"],
Cell[188034, 3653, 1104, 29, 46, "Input"],
Cell[189141, 3684, 358, 8, 63, "Input"],
Cell[CellGroupData[{
Cell[189524, 3696, 1516, 41, 148, "Input"],
Cell[191043, 3739, 652, 12, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191732, 3756, 367, 9, 28, "Input"],
Cell[192102, 3767, 474, 9, 28, "Output"]
}, Open  ]],
Cell[192591, 3779, 1511, 37, 80, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194139, 3821, 141, 2, 64, "Section"],
Cell[CellGroupData[{
Cell[194305, 3827, 275, 3, 44, "Subsection"],
Cell[CellGroupData[{
Cell[194605, 3834, 8570, 185, 732, "Input"],
Cell[203178, 4021, 6005, 114, 144, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[209232, 4141, 326, 4, 44, "Subsection"],
Cell[CellGroupData[{
Cell[209583, 4149, 7162, 164, 732, "Input"],
Cell[216748, 4315, 4987, 101, 426, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[221784, 4422, 326, 4, 44, "Subsection"],
Cell[CellGroupData[{
Cell[222135, 4430, 7138, 164, 732, "Input"],
Cell[229276, 4596, 4967, 101, 426, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[234292, 4703, 326, 4, 44, "Subsection"],
Cell[CellGroupData[{
Cell[234643, 4711, 7160, 164, 732, "Input"],
Cell[241806, 4877, 4959, 100, 426, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[246814, 4983, 317, 5, 44, "Subsection"],
Cell[CellGroupData[{
Cell[247156, 4992, 8202, 184, 788, "Input"],
Cell[255361, 5178, 5668, 111, 426, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[261078, 5295, 377, 6, 44, "Subsection"],
Cell[CellGroupData[{
Cell[261480, 5305, 6987, 157, 691, "Input"],
Cell[268470, 5464, 5058, 98, 426, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[273589, 5569, 170, 2, 64, "Section"],
Cell[CellGroupData[{
Cell[273784, 5575, 339, 5, 44, "Subsection"],
Cell[CellGroupData[{
Cell[274148, 5584, 8021, 187, 783, "Input"],
Cell[282172, 5773, 5918, 112, 170, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[288139, 5891, 339, 5, 44, "Subsection"],
Cell[CellGroupData[{
Cell[288503, 5900, 7747, 181, 767, "Input"],
Cell[296253, 6083, 5880, 111, 518, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[302182, 6200, 362, 5, 44, "Subsection"],
Cell[CellGroupData[{
Cell[302569, 6209, 10554, 236, 897, "Input"],
Cell[313126, 6447, 7463, 140, 518, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[320638, 6593, 115, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[320778, 6598, 4102, 98, 421, "Input"],
Cell[324883, 6698, 3926, 74, 228, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[328858, 6778, 119, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[329002, 6783, 3984, 102, 489, "Input"],
Cell[332989, 6887, 4195, 79, 254, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[337233, 6972, 109, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[337367, 6977, 6213, 143, 627, "Input"],
Cell[343583, 7122, 6140, 107, 450, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[349772, 7235, 185, 4, 44, "Subsection"],
Cell[CellGroupData[{
Cell[349982, 7243, 5912, 139, 645, "Input"],
Cell[355897, 7384, 5882, 103, 448, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
